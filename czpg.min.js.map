{"version":3,"file":"czpg.min.js","sources":["../src/renderer/constant.js","../src/math/Vector3.js","../src/math/Quaternion.js","../src/math/Matrix4.js","../src/renderer/typedArray.js","../src/model/Transform.js","../src/renderer/utils.js","../src/renderer/program.js","../src/renderer/attributes.js","../src/math/Matrix3.js","../src/shader/Shader.js","../src/shader/CommonVAOShader.js","../src/model/Model.js","../src/math/BezierCurve.js","../src/model/Primatives.js","../src/core/Render.js","../src/shader/GridAxisShader.js","../src/shader/FlatTextureShader.js","../src/shader/DynamicSkyboxShader.js","../src/shader/PointlightShader.js","../src/shader/ColorPointShader.js","../src/shader/PhongLightShader.js","../src/shader/ColorpickShader.js","../src/shader/WireframeShader.js","../src/shader/MeshLineShader.js","../src/shader/TransformShader.js","../src/shader/GLTFShader.js","../src/model/MeshLineModel.js","../src/renderer/texture.js","../src/renderer/webgl.js","../src/renderer/Renderer.js","../src/camera/Camera.js","../src/math/Vector2.js","../src/math/Spherical.js","../src/controls/OrbitControls.js","../src/loaders/Fileloader.js","../src/loaders/ObjLoader.js","../src/scene/Node.js","../src/loaders/GLTFLoader.js","../src/helper/PointHelper.js","../src/shader/ColorLineShader.js","../src/helper/LineHelper.js","../src/math/Perlin.js","../src/model/Terrain.js","../src/renderer/framebuffer.js","../src/controls/FramebufferPicker.js","../src/shader/ScreenQuadShader.js","../src/controls/BufferPicker.js","../src/controls/Controler.js","../src/scene/Scene.js","../src/scene/Animator.js","../src/math/Math.js","../src/renderer/vertexArray.js"],"sourcesContent":["function makeReadonlyObj( obj ) {\n\n    const result = {};\n    Object.keys( obj ).forEach( ( key ) => {\n\n        Object.defineProperty( result, key, {\n            value: obj[ key ],\n            writable: false,\n            configurable: false,\n            enumerable: true,\n        } );\n\n    } );\n    return result;\n\n}\n\nexport const ShaderParams = makeReadonlyObj( {\n\n    ATTRIB_POSITION_NAME: 'a_position',\n    ATTRIB_POSITION_LOC: 0,\n    ATTRIB_UV_NAME: 'a_uv',\n    ATTRIB_UV_LOC: 1,\n    ATTRIB_NORMAL_NAME: 'a_normal',\n    ATTRIB_NORMAL_LOC: 2,\n    ATTRIB_BARYCENTRIC_NAME: 'a_barycentric',\n    ATTRIB_BARYCENTRIC_LOC: 4,\n    UNIFORM_WORLD_MAT_NAME: 'u_worldMat',\n    UNIFORM_VIEW_MAT_NAME: 'u_viewMat',\n    UNIFORM_PROJ_MAT_NAME: 'u_projMat',\n    UNIFORM_MVP_MAT_NAME: 'u_mvpMat',\n    UNIFORM_VP_MAT_NAME: 'u_vpMat',\n    UNIFORM_NORMAL_MAT_NAME: 'u_normMat',\n    UNIFORM_MAIN_TEXTURE_NAME: 'u_texture',\n    UNIFORM_PREFIX: 'u_',\n    UNIFORM_CAMPOS: 'u_camPos',\n    ATTRIB_JOINT_0_NAME: 'a_joint',\n    ATTRIB_WEIGHT_0_NAME: 'a_weight',\n    ATTRIB_UV_1_NAME: 'a_uv1',\n    ATTRIB_JOINT_1_NAME: 'a_joint1',\n    ATTRIB_WEIGHT_1_NAME: 'a_weight1',\n    ATTRIB_TANGENT_NAME: 'a_tangent',\n    ATTRIB_VERTEX_COLOR_NAME: 'a_color',\n\n} );\n\nexport const BeginMode = makeReadonlyObj( {\n\n    POINTS: 0x0000,\n    LINES: 0x0001,\n    LINE_LOOP: 0x0002,\n    LINE_STRIP: 0x0003,\n    TRIANGLES: 0x0004,\n    TRIANGLE_STRIP: 0x0005,\n    TRIANGLE_FAN: 0x0006,\n\n} );\n\nexport const BufferParams = makeReadonlyObj( {\n\n    STREAM_DRAW: 0x88E0,\n    STATIC_DRAW: 0x88E4,\n    DYNAMIC_DRAW: 0x88E8,\n\n} );\n\nexport const TextureFilters = makeReadonlyObj( {\n\n    NEAREST: 9728,\n    LINEAR: 9729,\n    NEAREST_MIPMAP_NEAREST: 9984,\n    NEAREST_MIPMAP_LINEAR: 9986,\n    LINEAR_MIPMAP_NEAREST: 9985,\n    LINEAR_MIPMAP_LINEAR: 9987,\n\n} );\n\nexport const DefaultColor = makeReadonlyObj( {\n    Foreground: new Uint8Array( [ 255, 105, 180, 255 ] ),\n    ForegroundNormalized: new Float32Array( [ 255 / 255, 105 / 255, 180 / 255, 255 / 255 ] ),\n    Background: new Uint8Array( [ 255, 255, 255, 255 ] ),\n    BackgroundNormalized: new Float32Array( [ 1, 1, 1, 1 ] ),\n} );\n","/* eslint no-param-reassign: 0 */\nimport { PMath } from './Math';\n\nfunction Vector3( x, y, z ) {\n\n    this.raw = [];\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n\n}\n\nObject.defineProperties( Vector3.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    z: {\n        get() {\n\n            return this.raw[ 2 ];\n\n        },\n        set( v ) {\n\n            this.raw[ 2 ] = v;\n\n        },\n    },\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n    length( v ) {\n\n        // Only get the magnitude of this vector\n        if ( v === undefined )\n            return Math.sqrt( ( this.x * this.x ) + ( this.y * this.y ) + ( this.z * this.z ) );\n\n        // Get magnitude based on another vector\n        const x = v.x - this.x;\n        const y = v.y - this.y;\n        const z = v.z - this.z;\n\n        return Math.sqrt( ( x * x ) + ( y * y ) + ( z * z ) );\n\n    },\n\n    squareLength( v ) {\n\n        if ( v === undefined )\n            return ( this.x * this.x ) + ( this.y * this.y ) + ( this.z * this.z );\n\n        const x = v.x - this.x;\n        const y = v.y - this.y;\n        const z = v.z - this.z;\n\n        return ( x * x ) + ( y * y ) + ( z * z );\n\n    },\n\n    normalize() {\n\n        const mag = this.length();\n        this.x /= mag;\n        this.y /= mag;\n        this.z /= mag;\n        return this;\n\n    },\n\n    set( x, y, z ) {\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n\n    },\n\n    setFromSpherical( s ) {\n\n        Vector3.fromSpherical( this.raw, s );\n        return this;\n\n    },\n\n    setFromArray( array, offset ) {\n\n        if ( offset === undefined ) offset = 0;\n        this.x = array[ offset ];\n        this.y = array[ offset + 1 ];\n        this.z = array[ offset + 2 ];\n\n        return this;\n\n    },\n\n    // XYZ order\n    setFromRotationMatrix( m ) {\n\n        const te = m.raw || m;\n        const m11 = te[ 0 ];\n        const m12 = te[ 4 ];\n        const m13 = te[ 8 ];\n        const m22 = te[ 5 ];\n        const m23 = te[ 9 ];\n        const m32 = te[ 6 ];\n        const m33 = te[ 10 ];\n\n        this.y = Math.asin( PMath.clamp( m13, - 1, 1 ) );\n\n        if ( Math.abs( m13 ) < 0.99999 ) {\n\n            this.x = Math.atan2( - m23, m33 );\n            this.z = Math.atan2( - m12, m11 );\n\n        } else {\n\n            this.x = Math.atan2( m32, m22 );\n            this.z = 0;\n\n        }\n\n        return this;\n\n    },\n\n    multiScalar( v ) {\n\n        this.x *= v;\n        this.y *= v;\n        this.z *= v;\n        return this;\n\n    },\n\n    getArray() {\n\n        return this.raw;\n\n    },\n\n    getFloatArray() {\n\n        return new Float32Array( this.raw );\n\n    },\n\n    clone() {\n\n        return new Vector3( this.x, this.y, this.z );\n\n    },\n\n    copy( v ) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    },\n\n    sub( v ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n\n    },\n\n    add( v ) {\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n\n        return this;\n\n    },\n\n    subVectors( a, b ) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - a.y;\n        this.z = a.z - a.y;\n\n        return this;\n\n    },\n\n    dot( v ) {\n\n        this.dotVectors( this, v );\n        return this;\n\n    },\n\n    cross( v, frag ) {\n\n        const result = frag || new Vector3();\n        Vector3.crossVectors( result.raw, this.raw, v.raw );\n        return result;\n\n    },\n\n    applyQuaternion( q ) {\n\n        Vector3.transformQuat( this.raw, this.raw, q.raw );\n        return this;\n\n    },\n\n    dotVectors( v1, v2 ) {\n\n        return ( v1.x * v2.z ) + ( v1.y * v2.y ) + ( v1.z * v2.z );\n\n    },\n\n} );\n\nObject.assign( Vector3, {\n\n    crossVectors( out, v1, v2 ) {\n\n        const ax = v1[ 0 ];\n        const ay = v1[ 1 ];\n        const az = v1[ 2 ];\n        const bx = v2[ 0 ];\n        const by = v2[ 1 ];\n        const bz = v2[ 2 ];\n        out[ 0 ] = ay * bz - az * by;\n        out[ 1 ] = az * bx - ax * bz;\n        out[ 2 ] = ax * by - ay * bx;\n\n        return out;\n\n    },\n\n    fromSpherical( out, s ) {\n\n        const sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n        out[ 0 ] = sinPhiRadius * Math.sin( s.theta );\n        out[ 1 ] = Math.cos( s.phi ) * s.radius;\n        out[ 2 ] = sinPhiRadius * Math.cos( s.theta );\n\n        return out;\n\n    },\n\n    transformQuat( out, a, q ) {\n\n        const x = a[ 0 ];\n        const y = a[ 1 ];\n        const z = a[ 2 ];\n        const qx = q[ 0 ];\n        const qy = q[ 1 ];\n        const qz = q[ 2 ];\n        const qw = q[ 3 ];\n\n        // calculate quat * vector\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = - qx * x - qy * y - qz * z;\n\n        // calculate result * inverse quat\n        out[ 0 ] = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n        out[ 1 ] = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n        out[ 2 ] = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n        return out;\n\n    },\n\n} );\n\nexport { Vector3 };\n","/* eslint no-param-reassign: 0 no-mixed-operators:0 */\nimport { Vector3 } from './Vector3';\n\nfunction Quaternion( x, y, z, w ) {\n\n    this.raw = [];\n    if ( arguments.length === 1 )\n        this.raw = x.slice( 0, 4 );\n    else {\n\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n        this.w = typeof w === 'undefined' ? 1 : w;\n\n    }\n\n}\n\nObject.defineProperties( Quaternion.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    z: {\n        get() {\n\n            return this.raw[ 2 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 2 ] = v;\n\n        },\n    },\n\n    w: {\n        get() {\n\n            return this.raw[ 3 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 3 ] = v;\n\n        },\n    },\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n    set( x, y, z, w ) {\n\n        if ( arguments.length === 1 )\n            this.raw = x.slice( 0, 4 );\n        else {\n\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.w = w;\n\n        }\n\n        return this;\n\n    },\n\n    clone() {\n\n        return new Quaternion( this.raw );\n\n    },\n\n    getArray() {\n\n        return this.raw;\n\n    },\n\n    setFromEuler( x, y, z ) {\n\n        Quaternion.fromEuler( this.raw, x, y, z );\n        return this;\n\n    },\n\n    length() {\n\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    },\n\n    normalize() {\n\n        Quaternion.normalize( this.raw, this.raw );\n        return this;\n\n    },\n\n    setFromUnitVectors: ( function () {\n\n        let v1 = new Vector3();\n        const ESP = 0.000001;\n\n        return function setFromUnitVectors( vFrom, vTo ) {\n\n            v1 = new Vector3();\n            let r = vFrom.dot( vTo ) + 1;\n\n            if ( r < ESP ) {\n\n                r = 0;\n                if ( Math.abs( vFrom.x ) > Map.abs( vFrom.z ) )\n                    v1.set( - vFrom.y, vFrom.x, 0 );\n                else\n                    v1.set( 0, - vFrom.z, vFrom.y );\n\n            } else\n                Vector3.cross( v1, vFrom, vTo );\n\n            this.x = v1.x;\n            this.y = v1.y;\n            this.z = v1.z;\n            this.w = v1.w;\n\n            this.normalize();\n            return this;\n\n        };\n\n    }() ),\n\n    invert() {\n\n        Quaternion.invert( this.raw, this.raw );\n        return this;\n\n    },\n\n} );\n\nObject.assign( Quaternion, {\n\n    normalize( out, a ) {\n\n        let l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] + a[ 3 ] * a[ 3 ] );\n\n        if ( l === 0 ) {\n\n            out[ 0 ] = 0;\n            out[ 1 ] = 0;\n            out[ 2 ] = 0;\n            out[ 3 ] = 1;\n\n        } else {\n\n            l = 1 / l;\n            out[ 0 ] = a[ 0 ] * l;\n            out[ 1 ] = a[ 1 ] * l;\n            out[ 2 ] = a[ 2 ] * l;\n            out[ 3 ] = a[ 3 ] * l;\n\n        }\n\n        return out;\n\n    },\n\n    fromEuler( out, x, y, z ) {\n\n        // XYZ order\n        const cos = Math.cos;\n        const sin = Math.sin;\n\n        const c1 = cos( x / 2 );\n        const c2 = cos( y / 2 );\n        const c3 = cos( z / 2 );\n\n        const s1 = sin( x / 2 );\n        const s2 = sin( y / 2 );\n        const s3 = sin( z / 2 );\n\n        out[ 0 ] = s1 * c2 * c3 + c1 * s2 * s3;\n        out[ 1 ] = c1 * s2 * c3 - s1 * c2 * s3;\n        out[ 2 ] = c1 * c2 * s3 + s1 * s2 * c3;\n        out[ 3 ] = c1 * c2 * c3 - s1 * s2 * s3;\n\n    },\n\n    invert( out, a ) {\n\n        const a0 = a[ 0 ];\n        const a1 = a[ 1 ];\n        const a2 = a[ 2 ];\n        const a3 = a[ 3 ];\n        const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        const invDot = dot ? 1.0 / dot : 0;\n\n        out[ 0 ] = - a0 * invDot;\n        out[ 1 ] = - a1 * invDot;\n        out[ 2 ] = - a2 * invDot;\n        out[ 3 ] = a3 * invDot;\n\n        return out;\n\n    },\n\n    lerp( out, a, b, t ) {\n\n        const ax = a[ 0 ];\n        const ay = a[ 1 ];\n        const az = a[ 2 ];\n        const aw = a[ 3 ];\n        out[ 0 ] = ax + t * ( b[ 0 ] - ax );\n        out[ 1 ] = ay + t * ( b[ 1 ] - ay );\n        out[ 2 ] = az + t * ( b[ 2 ] - az );\n        out[ 3 ] = aw + t * ( b[ 3 ] - aw );\n        return out;\n\n    },\n\n    slerp( out, a, b, t ) {\n\n        // benchmarks:\n        //    http://jsperf.com/quaternion-slerp-implementations\n        const ax = a[ 0 ];\n        const ay = a[ 1 ];\n        const az = a[ 2 ];\n        const aw = a[ 3 ];\n        let bx = b[ 0 ];\n        let by = b[ 1 ];\n        let bz = b[ 2 ];\n        let bw = b[ 3 ];\n        let omega;\n        let cosom;\n        let sinom;\n        let scale0;\n        let scale1;\n        // calc cosine\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary)\n        if ( cosom < 0.0 ) {\n\n            cosom = - cosom;\n            bx = - bx;\n            by = - by;\n            bz = - bz;\n            bw = - bw;\n\n        }\n        // calculate coefficients\n        if ( ( 1.0 - cosom ) > 0.000001 ) {\n\n            // standard case (slerp)\n            omega = Math.acos( cosom );\n            sinom = Math.sin( omega );\n            scale0 = Math.sin( ( 1.0 - t ) * omega ) / sinom;\n            scale1 = Math.sin( t * omega ) / sinom;\n\n        } else {\n\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t;\n            scale1 = t;\n\n        }\n        // calculate final values\n        out[ 0 ] = scale0 * ax + scale1 * bx;\n        out[ 1 ] = scale0 * ay + scale1 * by;\n        out[ 2 ] = scale0 * az + scale1 * bz;\n        out[ 3 ] = scale0 * aw + scale1 * bw;\n        return out;\n\n    },\n\n    fromMatrix4( out, m ) {\n\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const m11 = m[ 0 ];\n        const m12 = m[ 4 ];\n        const m13 = m[ 8 ];\n        const m21 = m[ 1 ];\n        const m22 = m[ 5 ];\n        const m23 = m[ 9 ];\n        const m31 = m[ 2 ];\n        const m32 = m[ 6 ];\n        const m33 = m[ 10 ];\n\n        const trace = m11 + m22 + m33;\n        let s;\n\n        if ( trace > 0 ) {\n\n            s = 0.5 / Math.sqrt( trace + 1.0 );\n\n            out[ 3 ] = 0.25 / s;\n            out[ 0 ] = ( m32 - m23 ) * s;\n            out[ 1 ] = ( m13 - m31 ) * s;\n            out[ 2 ] = ( m21 - m12 ) * s;\n\n        } else if ( m11 > m22 && m11 > m33 ) {\n\n            s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n            out[ 3 ] = ( m32 - m23 ) / s;\n            out[ 0 ] = 0.25 * s;\n            out[ 1 ] = ( m12 + m21 ) / s;\n            out[ 2 ] = ( m13 + m31 ) / s;\n\n        } else if ( m22 > m33 ) {\n\n            s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n            out[ 3 ] = ( m13 - m31 ) / s;\n            out[ 0 ] = ( m12 + m21 ) / s;\n            out[ 1 ] = 0.25 * s;\n            out[ 2 ] = ( m23 + m32 ) / s;\n\n        } else {\n\n            s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n            out[ 3 ] = ( m21 - m12 ) / s;\n            out[ 0 ] = ( m13 + m31 ) / s;\n            out[ 1 ] = ( m23 + m32 ) / s;\n            out[ 2 ] = 0.25 * s;\n\n        }\n\n        return out;\n\n    },\n\n} );\n\nexport { Quaternion };\n","/* eslint no-param-reassign: 0 */\nimport { Quaternion } from './Quaternion';\n\nfunction Matrix4() {\n\n    this.raw = Matrix4.identity();\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n    translate( x, y, z ) {\n\n        if ( x.x !== undefined ) {\n\n            Matrix4.translate( this.raw, x.x, x.y, x.z );\n            return this;\n\n        }\n        Matrix4.translate( this.raw, x, y, z );\n        return this;\n\n    },\n\n    rotateX( rad ) {\n\n        Matrix4.rotateX( this.raw, rad );\n        return this;\n\n    },\n\n    rotateY( rad ) {\n\n        Matrix4.rotateY( this.raw, rad );\n        return this;\n\n    },\n\n    rotateZ( rad ) {\n\n        Matrix4.rotateZ( this.raw, rad );\n        return this;\n\n    },\n\n    applyQuaternion: ( function () {\n\n        const matArray = new Array( 16 );\n        return function applyQuaternion( quat ) {\n\n            Matrix4.fromQuat( matArray, typeof quat.x === 'undefined' ? quat : quat.raw );\n            Matrix4.mult( this.raw, this.raw, matArray );\n            return this;\n\n        };\n\n    }() ),\n\n    scale( x, y, z ) {\n\n        if ( x.x !== undefined ) {\n\n            Matrix4.scale( this.raw, x.x, x.y, x.z );\n            return this;\n\n        }\n\n        Matrix4.scale( this.raw, x, y, z );\n        return this;\n\n    },\n\n    invert() {\n\n        Matrix4.invert( this.raw, this.raw );\n        return this;\n\n    },\n\n    resetRotation() {\n\n        for ( let i = 0; i < this.raw.length; i ++ ) {\n\n            if ( i >= 12 && i <= 14 ) continue; // eslint-disable-line\n            this.raw[ i ] = ( i % 5 === 0 ) ? 1 : 0;\n\n        }\n\n        return this;\n\n    },\n\n    reset() {\n\n        for ( let i = 0; i < this.raw.length; i ++ )\n            this.raw[ i ] = ( i % 5 === 0 ) ? 1 : 0;\n        return this;\n\n    },\n\n    fromTRS( translate, quaternion, scale ) {\n\n        Matrix4.fromRotationTranslationScale( this.raw, quaternion, translate, scale );\n        return this;\n\n    },\n\n} );\n\nObject.assign( Matrix4, {\n\n    identity( out ) {\n\n        if ( out ) {\n\n            out[ 0 ] = 1;\n            out[ 5 ] = 1;\n            out[ 10 ] = 1;\n            out[ 15 ] = 1;\n            return out;\n\n        }\n\n        const a = new Float32Array( 16 );\n        a[ 0 ] = 1;\n        a[ 5 ] = 1;\n        a[ 10 ] = 1;\n        a[ 15 ] = 1;\n        return a;\n\n    },\n\n    perspective( out, fov, aspect, near, far ) {\n\n        const f = 1.0 / Math.tan( fov / 2 );\n        const nf = 1 / ( near - far );\n        out[ 0 ] = f / aspect;\n        out[ 1 ] = 0;\n        out[ 2 ] = 0;\n        out[ 3 ] = 0;\n        out[ 4 ] = 0;\n        out[ 5 ] = f;\n        out[ 6 ] = 0;\n        out[ 7 ] = 0;\n        out[ 8 ] = 0;\n        out[ 9 ] = 0;\n        out[ 10 ] = ( far + near ) * nf;\n        out[ 11 ] = - 1;\n        out[ 12 ] = 0;\n        out[ 13 ] = 0;\n        out[ 14 ] = 2 * far * near * nf;\n        out[ 15 ] = 0;\n\n        if ( far === Number.POSITIVE_INFINITY ) {\n\n            out[ 10 ] = - 1;\n            out[ 11 ] = - 1;\n            out[ 14 ] = - 2 * near;\n\n        }\n\n        return out;\n\n    },\n\n    ortho( out, left, right, bottom, top, near, far ) {\n\n        const lr = 1 / ( left - right );\n        const bt = 1 / ( bottom - top );\n        const nf = 1 / ( near - far );\n        out[ 0 ] = - 2 * lr;\n        out[ 1 ] = 0;\n        out[ 3 ] = 0;\n        out[ 4 ] = 0;\n        out[ 5 ] = - 2 * bt;\n        out[ 6 ] = 0;\n        out[ 7 ] = 0;\n        out[ 8 ] = 0;\n        out[ 9 ] = 0;\n        out[ 10 ] = 2 * nf;\n        out[ 11 ] = 0;\n        out[ 12 ] = ( left + right ) * lr;\n        out[ 13 ] = ( top + bottom ) * bt;\n        out[ 14 ] = ( far + near ) * nf;\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    transpose( out, a ) {\n\n        if ( out === a ) {\n\n            const a01 = a[ 1 ];\n            const a02 = a[ 2 ];\n            const a03 = a[ 3 ];\n            const a12 = a[ 6 ];\n            const a13 = a[ 7 ];\n            const a23 = a[ 11 ];\n            out[ 1 ] = a[ 4 ];\n            out[ 2 ] = a[ 8 ];\n            out[ 3 ] = a[ 12 ];\n            out[ 4 ] = a01;\n            out[ 6 ] = a[ 9 ];\n            out[ 7 ] = a[ 13 ];\n            out[ 8 ] = a02;\n            out[ 9 ] = a12;\n            out[ 11 ] = a[ 14 ];\n            out[ 12 ] = a03;\n            out[ 13 ] = a13;\n            out[ 14 ] = a23;\n\n        } else {\n\n            out[ 0 ] = a[ 0 ];\n            out[ 1 ] = a[ 4 ];\n            out[ 2 ] = a[ 8 ];\n            out[ 3 ] = a[ 12 ];\n            out[ 4 ] = a[ 1 ];\n            out[ 5 ] = a[ 5 ];\n            out[ 6 ] = a[ 9 ];\n            out[ 7 ] = a[ 13 ];\n            out[ 8 ] = a[ 2 ];\n            out[ 9 ] = a[ 6 ];\n            out[ 10 ] = a[ 10 ];\n            out[ 11 ] = a[ 14 ];\n            out[ 12 ] = a[ 3 ];\n            out[ 13 ] = a[ 7 ];\n            out[ 14 ] = a[ 11 ];\n            out[ 15 ] = a[ 15 ];\n\n        }\n\n        return out;\n\n    },\n\n    normalMat3( out, a ) {\n\n        const a00 = a[ 0 ];\n        const a01 = a[ 1 ];\n        const a02 = a[ 2 ];\n        const a03 = a[ 3 ];\n        const a10 = a[ 4 ];\n        const a11 = a[ 5 ];\n        const a12 = a[ 6 ];\n        const a13 = a[ 7 ];\n        const a20 = a[ 8 ];\n        const a21 = a[ 9 ];\n        const a22 = a[ 10 ];\n        const a23 = a[ 11 ];\n        const a30 = a[ 12 ];\n        const a31 = a[ 13 ];\n        const a32 = a[ 14 ];\n        const a33 = a[ 15 ];\n\n        const b00 = ( a00 * a11 ) - ( a01 * a10 );\n        const b01 = ( a00 * a12 ) - ( a02 * a10 );\n        const b02 = ( a00 * a13 ) - ( a03 * a10 );\n        const b03 = ( a01 * a12 ) - ( a02 * a11 );\n        const b04 = ( a01 * a13 ) - ( a03 * a11 );\n        const b05 = ( a02 * a13 ) - ( a03 * a12 );\n        const b06 = ( a20 * a31 ) - ( a21 * a30 );\n        const b07 = ( a20 * a32 ) - ( a22 * a30 );\n        const b08 = ( a20 * a33 ) - ( a23 * a30 );\n        const b09 = ( a21 * a32 ) - ( a22 * a31 );\n        const b10 = ( a21 * a33 ) - ( a23 * a31 );\n        const b11 = ( a22 * a33 ) - ( a23 * a32 );\n\n        let det = ( ( b00 * b11 ) - ( b01 * b10 ) ) + ( b02 * b09 ) + ( ( b03 * b08 ) - ( b04 * b07 ) ) + ( b05 * b06 );\n\n        if ( ! det ) return null;\n\n        det = 1.0 / det;\n\n        out[ 0 ] = ( a11 * b11 - a12 * b10 + a13 * b09 ) * det;\n        out[ 1 ] = ( a12 * b08 - a10 * b11 - a13 * b07 ) * det;\n        out[ 2 ] = ( a10 * b10 - a11 * b08 + a13 * b06 ) * det;\n\n        out[ 3 ] = ( a02 * b10 - a01 * b11 - a03 * b09 ) * det;\n        out[ 4 ] = ( a00 * b11 - a02 * b08 + a03 * b07 ) * det;\n        out[ 5 ] = ( a01 * b08 - a00 * b10 - a03 * b06 ) * det;\n\n        out[ 6 ] = ( a31 * b05 - a32 * b04 + a33 * b03 ) * det;\n        out[ 7 ] = ( a32 * b02 - a30 * b05 - a33 * b01 ) * det;\n        out[ 8 ] = ( a30 * b04 - a31 * b02 + a33 * b00 ) * det;\n\n        return out;\n\n    },\n\n    transformVec4( out, m, v ) {\n\n        out[ 0 ] = m[ 0 ] * v[ 0 ] + m[ 4 ] * v[ 1 ] + m[ 8 ] * v[ 2 ] + m[ 12 ] * v[ 3 ];\n        out[ 1 ] = m[ 1 ] * v[ 0 ] + m[ 5 ] * v[ 1 ] + m[ 9 ] * v[ 2 ] + m[ 13 ] * v[ 3 ];\n        out[ 2 ] = m[ 2 ] * v[ 0 ] + m[ 6 ] * v[ 1 ] + m[ 10 ] * v[ 2 ] + m[ 14 ] * v[ 3 ];\n        out[ 3 ] = m[ 3 ] * v[ 0 ] + m[ 7 ] * v[ 1 ] + m[ 11 ] * v[ 2 ] + m[ 15 ] * v[ 3 ];\n\n        return out;\n\n    },\n\n    mult( out, a, b ) {\n\n        const a00 = a[ 0 ];\n        const a01 = a[ 1 ];\n        const a02 = a[ 2 ];\n        const a03 = a[ 3 ];\n        const a10 = a[ 4 ];\n        const a11 = a[ 5 ];\n        const a12 = a[ 6 ];\n        const a13 = a[ 7 ];\n        const a20 = a[ 8 ];\n        const a21 = a[ 9 ];\n        const a22 = a[ 10 ];\n        const a23 = a[ 11 ];\n        const a30 = a[ 12 ];\n        const a31 = a[ 13 ];\n        const a32 = a[ 14 ];\n        const a33 = a[ 15 ];\n\n        let b0 = b[ 0 ];\n        let b1 = b[ 1 ];\n        let b2 = b[ 2 ];\n        let b3 = b[ 3 ];\n\n        out[ 0 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 1 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 2 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 3 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 4 ]; b1 = b[ 5 ]; b2 = b[ 6 ]; b3 = b[ 7 ];\n        out[ 4 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 5 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 6 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 7 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 8 ]; b1 = b[ 9 ]; b2 = b[ 10 ]; b3 = b[ 11 ];\n        out[ 8 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 9 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 10 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 11 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        b0 = b[ 12 ]; b1 = b[ 13 ]; b2 = b[ 14 ]; b3 = b[ 15 ];\n        out[ 12 ] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[ 13 ] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[ 14 ] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[ 15 ] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n        return out;\n\n    },\n\n    scale( out, x, y, z ) {\n\n        out[ 0 ] *= x;\n        out[ 1 ] *= x;\n        out[ 2 ] *= x;\n        out[ 3 ] *= x;\n        out[ 4 ] *= y;\n        out[ 5 ] *= y;\n        out[ 6 ] *= y;\n        out[ 7 ] *= y;\n        out[ 8 ] *= z;\n        out[ 9 ] *= z;\n        out[ 10 ] *= z;\n        out[ 11 ] *= z;\n\n        return out;\n\n    },\n\n    rotateY( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a00 = out[ 0 ];\n        const a01 = out[ 1 ];\n        const a02 = out[ 2 ];\n        const a03 = out[ 3 ];\n        const a20 = out[ 8 ];\n        const a21 = out[ 9 ];\n        const a22 = out[ 10 ];\n        const a23 = out[ 11 ];\n\n        out[ 0 ] = a00 * c - a20 * s;\n        out[ 1 ] = a01 * c - a21 * s;\n        out[ 2 ] = a02 * c - a22 * s;\n        out[ 3 ] = a03 * c - a23 * s;\n        out[ 8 ] = a00 * s + a20 * c;\n        out[ 9 ] = a01 * s + a21 * c;\n        out[ 10 ] = a02 * s + a22 * c;\n        out[ 11 ] = a03 * s + a23 * c;\n\n        return out;\n\n    },\n\n    rotateX( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a10 = out[ 4 ];\n        const a11 = out[ 5 ];\n        const a12 = out[ 6 ];\n        const a13 = out[ 7 ];\n        const a20 = out[ 8 ];\n        const a21 = out[ 9 ];\n        const a22 = out[ 10 ];\n        const a23 = out[ 11 ];\n\n        out[ 4 ] = a10 * c + a20 * s;\n        out[ 5 ] = a11 * c + a21 * s;\n        out[ 6 ] = a12 * c + a22 * s;\n        out[ 7 ] = a13 * c + a23 * s;\n        out[ 8 ] = a20 * c - a10 * s;\n        out[ 9 ] = a21 * c - a11 * s;\n        out[ 10 ] = a22 * c - a12 * s;\n        out[ 11 ] = a23 * c - a13 * s;\n\n        return out;\n\n    },\n\n    rotateZ( out, rad ) {\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const a00 = out[ 0 ];\n        const a01 = out[ 1 ];\n        const a02 = out[ 2 ];\n        const a03 = out[ 3 ];\n        const a10 = out[ 4 ];\n        const a11 = out[ 5 ];\n        const a12 = out[ 6 ];\n        const a13 = out[ 7 ];\n\n        out[ 0 ] = a00 * c + a10 * s;\n        out[ 1 ] = a01 * c + a11 * s;\n        out[ 2 ] = a02 * c + a12 * s;\n        out[ 3 ] = a03 * c + a13 * s;\n        out[ 4 ] = a10 * c - a00 * s;\n        out[ 5 ] = a11 * c - a01 * s;\n        out[ 6 ] = a12 * c - a02 * s;\n        out[ 7 ] = a13 * c - a03 * s;\n\n        return out;\n\n    },\n\n    rotate( out, rad, axis ) {\n\n        let x = axis[ 0 ];\n        let y = axis[ 1 ];\n        let z = axis[ 2 ];\n        let len = Math.sqrt( x * x + y * y + z * z );\n\n        if ( Math.abs( len ) < 0.000001 ) return null;\n\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n\n        const s = Math.sin( rad );\n        const c = Math.cos( rad );\n        const t = 1 - c;\n\n        const a00 = out[ 0 ]; const a01 = out[ 1 ]; const a02 = out[ 2 ]; const a03 = out[ 3 ];\n        const a10 = out[ 4 ]; const a11 = out[ 5 ]; const a12 = out[ 6 ]; const a13 = out[ 7 ];\n        const a20 = out[ 8 ]; const a21 = out[ 9 ]; const a22 = out[ 10 ]; const a23 = out[ 11 ];\n\n        const b00 = x * x * t + c; const b01 = y * x * t + z * s; const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s; const b11 = y * y * t + c; const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s; const b21 = y * z * t - x * s; const b22 = z * z * t + c;\n\n        out[ 0 ] = a00 * b00 + a10 * b01 + a20 * b02;\n        out[ 1 ] = a01 * b00 + a11 * b01 + a21 * b02;\n        out[ 2 ] = a02 * b00 + a12 * b01 + a22 * b02;\n        out[ 3 ] = a03 * b00 + a13 * b01 + a23 * b02;\n        out[ 4 ] = a00 * b10 + a10 * b11 + a20 * b12;\n        out[ 5 ] = a01 * b10 + a11 * b11 + a21 * b12;\n        out[ 6 ] = a02 * b10 + a12 * b11 + a22 * b12;\n        out[ 7 ] = a03 * b10 + a13 * b11 + a23 * b12;\n        out[ 8 ] = a00 * b20 + a10 * b21 + a20 * b22;\n        out[ 9 ] = a01 * b20 + a11 * b21 + a21 * b22;\n        out[ 10 ] = a02 * b20 + a12 * b21 + a22 * b22;\n        out[ 11 ] = a03 * b20 + a13 * b21 + a23 * b22;\n\n        return out;\n\n    },\n\n    invert( out, mat ) {\n\n        if ( mat === undefined ) mat = out; // If input isn't sent, then output is also input\n\n        const a00 = mat[ 0 ];\n        const a01 = mat[ 1 ];\n        const a02 = mat[ 2 ];\n        const a03 = mat[ 3 ];\n        const a10 = mat[ 4 ];\n        const a11 = mat[ 5 ];\n        const a12 = mat[ 6 ];\n        const a13 = mat[ 7 ];\n        const a20 = mat[ 8 ];\n        const a21 = mat[ 9 ];\n        const a22 = mat[ 10 ];\n        const a23 = mat[ 11 ];\n        const a30 = mat[ 12 ];\n        const a31 = mat[ 13 ];\n        const a32 = mat[ 14 ];\n        const a33 = mat[ 15 ];\n\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if ( ! det ) return false;\n\n        det = 1.0 / det;\n\n        out[ 0 ] = ( a11 * b11 - a12 * b10 + a13 * b09 ) * det;\n        out[ 1 ] = ( a02 * b10 - a01 * b11 - a03 * b09 ) * det;\n        out[ 2 ] = ( a31 * b05 - a32 * b04 + a33 * b03 ) * det;\n        out[ 3 ] = ( a22 * b04 - a21 * b05 - a23 * b03 ) * det;\n        out[ 4 ] = ( a12 * b08 - a10 * b11 - a13 * b07 ) * det;\n        out[ 5 ] = ( a00 * b11 - a02 * b08 + a03 * b07 ) * det;\n        out[ 6 ] = ( a32 * b02 - a30 * b05 - a33 * b01 ) * det;\n        out[ 7 ] = ( a20 * b05 - a22 * b02 + a23 * b01 ) * det;\n        out[ 8 ] = ( a10 * b10 - a11 * b08 + a13 * b06 ) * det;\n        out[ 9 ] = ( a01 * b08 - a00 * b10 - a03 * b06 ) * det;\n        out[ 10 ] = ( a30 * b04 - a31 * b02 + a33 * b00 ) * det;\n        out[ 11 ] = ( a21 * b02 - a20 * b04 - a23 * b00 ) * det;\n        out[ 12 ] = ( a11 * b07 - a10 * b09 - a12 * b06 ) * det;\n        out[ 13 ] = ( a00 * b09 - a01 * b07 + a02 * b06 ) * det;\n        out[ 14 ] = ( a31 * b01 - a30 * b03 - a32 * b00 ) * det;\n        out[ 15 ] = ( a20 * b03 - a21 * b01 + a22 * b00 ) * det;\n\n        return true;\n\n    },\n\n    translate( out, x, y, z ) {\n\n        out[ 12 ] = out[ 0 ] * x + out[ 4 ] * y + out[ 8 ] * z + out[ 12 ];\n        out[ 13 ] = out[ 1 ] * x + out[ 5 ] * y + out[ 9 ] * z + out[ 13 ];\n        out[ 14 ] = out[ 2 ] * x + out[ 6 ] * y + out[ 10 ] * z + out[ 14 ];\n        out[ 15 ] = out[ 3 ] * x + out[ 7 ] * y + out[ 11 ] * z + out[ 15 ];\n\n        return out;\n\n    },\n\n    lookAt( out, eye, target, up ) {\n\n        let x0;\n        let x1;\n        let x2;\n        let y0;\n        let y1;\n        let y2;\n        let z0;\n        let z1;\n        let z2;\n        let len;\n        const eyex = eye[ 0 ];\n        const eyey = eye[ 1 ];\n        const eyez = eye[ 2 ];\n        const upx = up[ 0 ];\n        const upy = up[ 1 ];\n        const upz = up[ 2 ];\n        const centerx = target[ 0 ];\n        const centery = target[ 1 ];\n        const centerz = target[ 2 ];\n        if ( Math.abs( eyex - centerx ) < 0.000001 &&\n            Math.abs( eyey - centery ) < 0.000001 &&\n            Math.abs( eyez - centerz ) < 0.000001 )\n            return this.identity( out );\n\n        z0 = eyex - centerx;\n        z1 = eyey - centery;\n        z2 = eyez - centerz;\n        len = 1 / Math.sqrt( z0 * z0 + z1 * z1 + z2 * z2 );\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n        x0 = upy * z2 - upz * z1;\n        x1 = upz * z0 - upx * z2;\n        x2 = upx * z1 - upy * z0;\n        len = Math.sqrt( x0 * x0 + x1 * x1 + x2 * x2 );\n        if ( ! len ) {\n\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n\n        } else {\n\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n\n        }\n        y0 = z1 * x2 - z2 * x1;\n        y1 = z2 * x0 - z0 * x2;\n        y2 = z0 * x1 - z1 * x0;\n        len = Math.sqrt( y0 * y0 + y1 * y1 + y2 * y2 );\n        if ( ! len ) {\n\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n\n        } else {\n\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n\n        }\n        out[ 0 ] = x0;\n        out[ 1 ] = y0;\n        out[ 2 ] = z0;\n        out[ 3 ] = 0;\n        out[ 4 ] = x1;\n        out[ 5 ] = y1;\n        out[ 6 ] = z1;\n        out[ 7 ] = 0;\n        out[ 8 ] = x2;\n        out[ 9 ] = y2;\n        out[ 10 ] = z2;\n        out[ 11 ] = 0;\n        out[ 12 ] = - ( x0 * eyex + x1 * eyey + x2 * eyez );\n        out[ 13 ] = - ( y0 * eyex + y1 * eyey + y2 * eyez );\n        out[ 14 ] = - ( z0 * eyex + z1 * eyey + z2 * eyez );\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    equals: ( function () {\n\n        const EPS = 0.000001;\n\n        return function equals( a, b ) {\n\n            const a0 = a[ 0 ];\n            const a1 = a[ 1 ];\n            const a2 = a[ 2 ];\n            const a3 = a[ 3 ];\n            const a4 = a[ 4 ];\n            const a5 = a[ 5 ];\n            const a6 = a[ 6 ];\n            const a7 = a[ 7 ];\n            const a8 = a[ 8 ];\n            const a9 = a[ 9 ];\n            const a10 = a[ 10 ];\n            const a11 = a[ 11 ];\n            const a12 = a[ 12 ];\n            const a13 = a[ 13 ];\n            const a14 = a[ 14 ];\n            const a15 = a[ 15 ];\n            const b0 = b[ 0 ];\n            const b1 = b[ 1 ];\n            const b2 = b[ 2 ];\n            const b3 = b[ 3 ];\n            const b4 = b[ 4 ];\n            const b5 = b[ 5 ];\n            const b6 = b[ 6 ];\n            const b7 = b[ 7 ];\n            const b8 = b[ 8 ];\n            const b9 = b[ 9 ];\n            const b10 = b[ 10 ];\n            const b11 = b[ 11 ];\n            const b12 = b[ 12 ];\n            const b13 = b[ 13 ];\n            const b14 = b[ 14 ];\n            const b15 = b[ 15 ];\n\n            return ( Math.abs( a0 - b0 ) <= EPS * Math.max( 1.0, Math.abs( a0 ), Math.abs( b0 ) ) &&\n              Math.abs( a1 - b1 ) <= EPS * Math.max( 1.0, Math.abs( a1 ), Math.abs( b1 ) ) &&\n              Math.abs( a2 - b2 ) <= EPS * Math.max( 1.0, Math.abs( a2 ), Math.abs( b2 ) ) &&\n              Math.abs( a3 - b3 ) <= EPS * Math.max( 1.0, Math.abs( a3 ), Math.abs( b3 ) ) &&\n              Math.abs( a4 - b4 ) <= EPS * Math.max( 1.0, Math.abs( a4 ), Math.abs( b4 ) ) &&\n              Math.abs( a5 - b5 ) <= EPS * Math.max( 1.0, Math.abs( a5 ), Math.abs( b5 ) ) &&\n              Math.abs( a6 - b6 ) <= EPS * Math.max( 1.0, Math.abs( a6 ), Math.abs( b6 ) ) &&\n              Math.abs( a7 - b7 ) <= EPS * Math.max( 1.0, Math.abs( a7 ), Math.abs( b7 ) ) &&\n              Math.abs( a8 - b8 ) <= EPS * Math.max( 1.0, Math.abs( a8 ), Math.abs( b8 ) ) &&\n              Math.abs( a9 - b9 ) <= EPS * Math.max( 1.0, Math.abs( a9 ), Math.abs( b9 ) ) &&\n              Math.abs( a10 - b10 ) <= EPS * Math.max( 1.0, Math.abs( a10 ), Math.abs( b10 ) ) &&\n              Math.abs( a11 - b11 ) <= EPS * Math.max( 1.0, Math.abs( a11 ), Math.abs( b11 ) ) &&\n              Math.abs( a12 - b12 ) <= EPS * Math.max( 1.0, Math.abs( a12 ), Math.abs( b12 ) ) &&\n              Math.abs( a13 - b13 ) <= EPS * Math.max( 1.0, Math.abs( a13 ), Math.abs( b13 ) ) &&\n              Math.abs( a14 - b14 ) <= EPS * Math.max( 1.0, Math.abs( a14 ), Math.abs( b14 ) ) &&\n              Math.abs( a15 - b15 ) <= EPS * Math.max( 1.0, Math.abs( a15 ), Math.abs( b15 ) ) );\n\n        };\n\n    }() ),\n\n    clone( a ) {\n\n        const out = new Float32Array( 16 );\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n        out[ 9 ] = a[ 9 ];\n        out[ 10 ] = a[ 10 ];\n        out[ 11 ] = a[ 11 ];\n        out[ 12 ] = a[ 12 ];\n        out[ 13 ] = a[ 13 ];\n        out[ 14 ] = a[ 14 ];\n        out[ 15 ] = a[ 15 ];\n\n        return out;\n\n    },\n\n    copy( out, a ) {\n\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n        out[ 9 ] = a[ 9 ];\n        out[ 10 ] = a[ 10 ];\n        out[ 11 ] = a[ 11 ];\n        out[ 12 ] = a[ 12 ];\n        out[ 13 ] = a[ 13 ];\n        out[ 14 ] = a[ 14 ];\n        out[ 15 ] = a[ 15 ];\n\n        return out;\n\n    },\n\n    fromQuat( out, q ) {\n\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[ 0 ] = 1 - yy - zz;\n        out[ 1 ] = yx + wz;\n        out[ 2 ] = zx - wy;\n        out[ 3 ] = 0;\n        out[ 4 ] = yx - wz;\n        out[ 5 ] = 1 - xx - zz;\n        out[ 6 ] = zy + wx;\n        out[ 7 ] = 0;\n        out[ 8 ] = zx + wy;\n        out[ 9 ] = zy - wx;\n        out[ 10 ] = 1 - xx - yy;\n        out[ 11 ] = 0;\n        out[ 12 ] = 0;\n        out[ 13 ] = 0;\n        out[ 14 ] = 0;\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    fromRotationTranslation( out, q, v ) {\n\n        // Quaternion math\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[ 0 ] = 1 - ( yy + zz );\n        out[ 1 ] = xy + wz;\n        out[ 2 ] = xz - wy;\n        out[ 3 ] = 0;\n        out[ 4 ] = xy - wz;\n        out[ 5 ] = 1 - ( xx + zz );\n        out[ 6 ] = yz + wx;\n        out[ 7 ] = 0;\n        out[ 8 ] = xz + wy;\n        out[ 9 ] = yz - wx;\n        out[ 10 ] = 1 - ( xx + yy );\n        out[ 11 ] = 0;\n        out[ 12 ] = v[ 0 ];\n        out[ 13 ] = v[ 1 ];\n        out[ 14 ] = v[ 2 ];\n        out[ 15 ] = 1;\n        return out;\n\n    },\n\n    fromRotationTranslationScale( out, q, v, s ) {\n\n        const x = q[ 0 ];\n        const y = q[ 1 ];\n        const z = q[ 2 ];\n        const w = q[ 3 ];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[ 0 ];\n        const sy = s[ 1 ];\n        const sz = s[ 2 ];\n        out[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n        out[ 1 ] = ( xy + wz ) * sx;\n        out[ 2 ] = ( xz - wy ) * sx;\n        out[ 3 ] = 0;\n        out[ 4 ] = ( xy - wz ) * sy;\n        out[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n        out[ 6 ] = ( yz + wx ) * sy;\n        out[ 7 ] = 0;\n        out[ 8 ] = ( xz + wy ) * sz;\n        out[ 9 ] = ( yz - wx ) * sz;\n        out[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n        out[ 11 ] = 0;\n        out[ 12 ] = v[ 0 ];\n        out[ 13 ] = v[ 1 ];\n        out[ 14 ] = v[ 2 ];\n        out[ 15 ] = 1;\n\n        return out;\n\n    },\n\n    getTranslation( out, mat ) {\n\n        out[ 0 ] = mat[ 12 ];\n        out[ 1 ] = mat[ 13 ];\n        out[ 2 ] = mat[ 14 ];\n        return out;\n\n    },\n\n    getScaling( out, mat ) {\n\n        const m11 = mat[ 0 ];\n        const m12 = mat[ 1 ];\n        const m13 = mat[ 2 ];\n        const m21 = mat[ 4 ];\n        const m22 = mat[ 5 ];\n        const m23 = mat[ 6 ];\n        const m31 = mat[ 8 ];\n        const m32 = mat[ 9 ];\n        const m33 = mat[ 10 ];\n        out[ 0 ] = Math.sqrt( m11 * m11 + m12 * m12 + m13 * m13 );\n        out[ 1 ] = Math.sqrt( m21 * m21 + m22 * m22 + m23 * m23 );\n        out[ 2 ] = Math.sqrt( m31 * m31 + m32 * m32 + m33 * m33 );\n        return out;\n\n    },\n\n    getRotation( out, mat ) {\n\n        // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n        const trace = mat[ 0 ] + mat[ 5 ] + mat[ 10 ];\n        let S = 0;\n        if ( trace > 0 ) {\n\n            S = Math.sqrt( trace + 1.0 ) * 2;\n            out[ 3 ] = 0.25 * S;\n            out[ 0 ] = ( mat[ 6 ] - mat[ 9 ] ) / S;\n            out[ 1 ] = ( mat[ 8 ] - mat[ 2 ] ) / S;\n            out[ 2 ] = ( mat[ 1 ] - mat[ 4 ] ) / S;\n\n        } else if ( ( mat[ 0 ] > mat[ 5 ] ) && ( mat[ 0 ] > mat[ 10 ] ) ) {\n\n            S = Math.sqrt( 1.0 + mat[ 0 ] - mat[ 5 ] - mat[ 10 ] ) * 2;\n            out[ 3 ] = ( mat[ 6 ] - mat[ 9 ] ) / S;\n            out[ 0 ] = 0.25 * S;\n            out[ 1 ] = ( mat[ 1 ] + mat[ 4 ] ) / S;\n            out[ 2 ] = ( mat[ 8 ] + mat[ 2 ] ) / S;\n\n        } else if ( mat[ 5 ] > mat[ 10 ] ) {\n\n            S = Math.sqrt( 1.0 + mat[ 5 ] - mat[ 0 ] - mat[ 10 ] ) * 2;\n            out[ 3 ] = ( mat[ 8 ] - mat[ 2 ] ) / S;\n            out[ 0 ] = ( mat[ 1 ] + mat[ 4 ] ) / S;\n            out[ 1 ] = 0.25 * S;\n            out[ 2 ] = ( mat[ 6 ] + mat[ 9 ] ) / S;\n\n        } else {\n\n            S = Math.sqrt( 1.0 + mat[ 10 ] - mat[ 0 ] - mat[ 5 ] ) * 2;\n            out[ 3 ] = ( mat[ 1 ] - mat[ 4 ] ) / S;\n            out[ 0 ] = ( mat[ 8 ] + mat[ 2 ] ) / S;\n            out[ 1 ] = ( mat[ 6 ] + mat[ 9 ] ) / S;\n            out[ 2 ] = 0.25 * S;\n\n        }\n        return out;\n\n    },\n\n    determinant( m ) {\n\n\n        const n11 = m[ 0 ];\n        const n12 = m[ 4 ];\n        const n13 = m[ 8 ];\n        const n14 = m[ 12 ];\n        const n21 = m[ 1 ];\n        const n22 = m[ 5 ];\n        const n23 = m[ 9 ];\n        const n24 = m[ 13 ];\n        const n31 = m[ 2 ];\n        const n32 = m[ 6 ];\n        const n33 = m[ 10 ];\n        const n34 = m[ 14 ];\n        const n41 = m[ 3 ];\n        const n42 = m[ 7 ];\n        const n43 = m[ 11 ];\n        const n44 = m[ 15 ];\n\n        // TODO: make this more efficient\n        // ( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n        return (\n            n41 * (\n                + n14 * n23 * n32\n                - n13 * n24 * n32\n                - n14 * n22 * n33\n                + n12 * n24 * n33\n                + n13 * n22 * n34\n                - n12 * n23 * n34\n            ) +\n            n42 * (\n                + n11 * n23 * n34\n                - n11 * n24 * n33\n                + n14 * n21 * n33\n                - n13 * n21 * n34\n                + n13 * n24 * n31\n                - n14 * n23 * n31\n            ) +\n            n43 * (\n                + n11 * n24 * n32\n                - n11 * n22 * n34\n                - n14 * n21 * n32\n                + n12 * n21 * n34\n                + n14 * n22 * n31\n                - n12 * n24 * n31\n            ) +\n            n44 * (\n                - n13 * n22 * n31\n                - n11 * n23 * n32\n                + n11 * n22 * n33\n                + n13 * n21 * n32\n                - n12 * n21 * n33\n                + n12 * n23 * n31\n            )\n        );\n\n    },\n\n    decompose( m, position, quaternion, scale ) {\n\n        const te = Matrix4.clone( m );\n\n        let sx = Math.sqrt( ( te[ 0 ] * te[ 0 ] ) + ( te[ 1 ] * te[ 1 ] ) + ( te[ 2 ] * te[ 2 ] ) );\n        const sy = Math.sqrt( ( te[ 4 ] * te[ 4 ] ) + ( te[ 5 ] * te[ 5 ] ) + ( te[ 6 ] * te[ 6 ] ) );\n        const sz = Math.sqrt( ( te[ 8 ] * te[ 8 ] ) + ( te[ 9 ] * te[ 9 ] ) + ( te[ 10 ] * te[ 10 ] ) );\n\n        // if determine is negative, we need to invert one scale\n        const det = Matrix4.determinant( te );\n        if ( det < 0 ) sx = - sx;\n\n        position[ 0 ] = te[ 12 ];\n        position[ 1 ] = te[ 13 ];\n        position[ 2 ] = te[ 14 ];\n\n        // scale the rotation part\n\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n\n        te[ 0 ] *= invSX;\n        te[ 1 ] *= invSX;\n        te[ 2 ] *= invSX;\n\n        te[ 4 ] *= invSY;\n        te[ 5 ] *= invSY;\n        te[ 6 ] *= invSY;\n\n        te[ 8 ] *= invSZ;\n        te[ 9 ] *= invSZ;\n        te[ 10 ] *= invSZ;\n\n        Quaternion.fromMatrix4( quaternion, te );\n\n        scale[ 0 ] = sx;\n        scale[ 1 ] = sy;\n        scale[ 2 ] = sz;\n\n    },\n\n} );\n\nexport { Matrix4 };\n","const isArrayBuffer = window.SharedArrayBuffer\n    ? function isArrayBufferOrSharedArrayBuffer( ary ) {\n\n        return ary && ary.buffer && ( ary.buffer instanceof ArrayBuffer || ary.buffer instanceof window.SharedArrayBuffer );\n\n    } : function isArrayBuffer( ary ) {\n\n        return ary && ary.buffer && ary.buffer instanceof ArrayBuffer;\n\n    };\n\nconst BYTE = 0x1400;\nconst UNSIGNED_BYTE = 0x1401;\nconst SHORT = 0x1402;\nconst UNSIGNED_SHORT = 0x1403;\nconst INT = 0x1404;\nconst UNSIGNED_INT = 0x1405;\nconst FLOAT = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\nconst HALF_FLOAT = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8 = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n\n    const tt = glTypeToTypedArray;\n    tt[ BYTE ] = Int8Array;\n    tt[ UNSIGNED_BYTE ] = Uint8Array;\n    tt[ SHORT ] = Int16Array;\n    tt[ UNSIGNED_SHORT ] = Uint16Array;\n    tt[ INT ] = Int32Array;\n    tt[ UNSIGNED_INT ] = Uint32Array;\n    tt[ FLOAT ] = Float32Array;\n    tt[ UNSIGNED_SHORT_4_4_4_4 ] = Uint16Array;\n    tt[ UNSIGNED_SHORT_5_5_5_1 ] = Uint16Array;\n    tt[ UNSIGNED_SHORT_5_6_5 ] = Uint16Array;\n    tt[ HALF_FLOAT ] = Uint16Array;\n    tt[ UNSIGNED_INT_2_10_10_10_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_10F_11F_11F_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_5_9_9_9_REV ] = Uint32Array;\n    tt[ FLOAT_32_UNSIGNED_INT_24_8_REV ] = Uint32Array;\n    tt[ UNSIGNED_INT_24_8 ] = Uint32Array;\n\n}\n\nfunction getGLTypeFromTypedArrayType( typedArrayType ) {\n\n    switch ( typedArrayType ) {\n\n    case Int8Array:\n        return BYTE;\n    case Uint8Array:\n        return UNSIGNED_BYTE;\n    case Uint8ClampedArray:\n        return UNSIGNED_BYTE;\n    case Int16Array:\n        return SHORT;\n    case Uint16Array:\n        return UNSIGNED_SHORT;\n    case Int32Array:\n        return INT;\n    case Uint32Array:\n        return UNSIGNED_INT;\n    case Float32Array:\n        return FLOAT;\n    default:\n        throw new Error( 'unsupported typed array type' );\n\n    }\n\n}\n\nfunction getGLTypeFromTypedArray( typedArray ) {\n\n    if ( typedArray instanceof Int8Array ) return BYTE;\n    if ( typedArray instanceof Uint8Array ) return UNSIGNED_BYTE;\n    if ( typedArray instanceof Uint8ClampedArray ) return UNSIGNED_BYTE;\n    if ( typedArray instanceof Int16Array ) return SHORT;\n    if ( typedArray instanceof Uint16Array ) return UNSIGNED_SHORT;\n    if ( typedArray instanceof Int32Array ) return INT;\n    if ( typedArray instanceof Uint32Array ) return UNSIGNED_INT;\n    if ( typedArray instanceof Float32Array ) return FLOAT;\n    throw new Error( 'unsupported typed array type' );\n\n}\n\nfunction getTypedArrayTypeFromGLType( type ) {\n\n    const arrayType = glTypeToTypedArray[ type ];\n    if ( ! arrayType ) throw new Error( 'unkonw gl type' );\n    return arrayType;\n\n}\n\nfunction getTypedArray( array, Type = Float32Array ) {\n\n    if ( isArrayBuffer( array ) )\n        return array;\n    return new Type( array );\n\n}\n\nexport {\n    isArrayBuffer,\n    getTypedArray,\n    getGLTypeFromTypedArray,\n    getGLTypeFromTypedArrayType,\n    getTypedArrayTypeFromGLType,\n};\n","import { Vector3 } from '../math/Vector3';\nimport { Quaternion } from '../math/Quaternion';\nimport { Matrix4 } from '../math/Matrix4';\nimport { isArrayBuffer } from '../renderer/typedArray';\n\nfunction Transform() {\n\n    this._position = new Vector3( 0, 0, 0 );\n    this._scale = new Vector3( 1, 1, 1 );\n    this._rotation = new Vector3( 0, 0, 0 );\n    this._quaternion = new Quaternion();\n    this.matrix = new Matrix4();\n    this.normMat = new Float32Array( 9 );\n    this.worldMatrix = new Matrix4();\n\n    this.forward = new Float32Array( 4 );\n    this.up = new Float32Array( 4 );\n    this.right = new Float32Array( 4 );\n\n    this._needUpdateMatrix = false;\n    this.needUpdateWorldMatrix = true;\n\n}\n\nObject.defineProperties( Transform.prototype, {\n\n    position: {\n\n        get() {\n\n            return this._position.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setPosition( v );\n\n        },\n\n    },\n\n    vec3Position: {\n\n        get() {\n\n            return this._position;\n\n        },\n\n    },\n\n    scale: {\n\n        get() {\n\n            return this._scale.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setScale( v );\n\n        },\n\n    },\n\n    vec3Scale: {\n\n        get() {\n\n            return this._scale;\n\n        },\n\n    },\n\n    rotation: {\n\n        get() {\n\n            return this._rotation.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setRotation( v );\n\n        },\n\n    },\n\n    vec3Rotation: {\n\n        get() {\n\n            return this._rotation;\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this._quaternion.getArray().slice();\n\n        },\n\n        set( v ) {\n\n            this.setQuaternion( v );\n\n        },\n\n    },\n\n    quatQuaternion: {\n\n        get() {\n\n            return this._quaternion;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Transform.prototype, {\n\n    updateMatrix() {\n\n        if ( this._needUpdateMatrix ) {\n\n            this.matrix.fromTRS( this._position.raw, this._quaternion.raw, this._scale.raw );\n            this._needUpdateMatrix = false;\n\n        }\n\n        return this;\n\n    },\n\n    updateNormalMatrix() {\n\n        Matrix4.normalMat3( this.normMat, this.worldMatrix.raw );\n        return this;\n\n    },\n\n    updateDirection() {\n\n        Matrix4.transformVec4( this.forward, this.worldMatrix.raw, [ 0, 0, 1, 0 ] );\n        Matrix4.transformVec4( this.up, this.worldMatrix.raw, [ 0, 1, 0, 0 ] );\n        Matrix4.transformVec4( this.right, this.worldMatrix.raw, [ 1, 0, 0, 0 ] );\n        return this;\n\n    },\n\n    copyToWorldMatrix() {\n\n        Matrix4.copy( this.worldMatrix.raw, this.matrix.raw );\n        return this;\n\n    },\n\n    getMatrix() {\n\n        return this.matrix.raw;\n\n    },\n\n    getWorldMatrix() {\n\n        return this.worldMatrix.raw;\n\n    },\n\n    getNormalMatrix() {\n\n        return this.normMat;\n\n    },\n\n    reset() {\n\n        this._position.set( 0, 0, 0 );\n        this._scale.set( 1, 1, 1 );\n        this._rotation.set( 0, 0, 0 );\n        this._quaternion.set( 0, 0, 0, 1 );\n\n    },\n\n    updateEuler: ( function () {\n\n        const mat4 = new Matrix4();\n\n        return function updateEular() {\n\n            mat4.reset().applyQuaternion( this._quaternion );\n            this._rotation.setFromRotationMatrix( mat4.raw );\n\n        };\n\n    }() ),\n\n    updateQuaternion() {\n\n        this._quaternion.setFromEuler( ...this.rotation );\n\n    },\n\n    setScale( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setScale( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setScale( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._scale.set( ...args );\n            this.markNeedUpdate( true );\n\n        }\n\n        return this;\n\n    },\n\n    markNeedUpdate( state ) {\n\n        this._needUpdateMatrix = !! state;\n        this.needUpdateWorldMatrix = !! state;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setPosition( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setPosition( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._position.set( ...args );\n            this.markNeedUpdate( true );\n\n        }\n\n        return this;\n\n    },\n\n    setRotation( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Vector3 )\n                return this.setRotation( ...args[ 0 ].getArray() );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 3 )\n                return this.setRotation( ...args[ 0 ] );\n\n        } else if ( args.length === 3 ) {\n\n            this._rotation.set( ...args );\n            this.updateQuaternion();\n            this.markNeedUpdate( true );\n\n        }\n\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args.length === 1 ) {\n\n            if ( args[ 0 ] instanceof Quaternion )\n                return this.setQuaternion( ...( args[ 0 ].getArray() ) );\n\n            if ( ( Array.isArray( args[ 0 ] ) || isArrayBuffer( args[ 0 ] ) ) && args[ 0 ].length === 4 )\n                return this.setQuaternion( ...args[ 0 ] );\n\n        } else if ( args.length === 4 ) {\n\n            this._quaternion.set( ...args );\n            this.updateEuler();\n            this.markNeedUpdate( true );\n\n        }\n\n        return this;\n\n    },\n\n    clone() {\n\n        const transform = new Transform();\n        transform.position = this.position;\n        transform.quaternion = this.quaternion;\n        transform.scale = this.scale;\n        return transform;\n\n    },\n\n} );\n\nexport { Transform };\n","function isWebGL2( gl ) {\n\n    return !! gl.texStorage2D;\n\n}\n\nconst glEnumToString = ( function () {\n\n    const haveEnumsForType = {};\n    const enums = {};\n\n    function addEnums( gl ) {\n\n        const type = gl.constructor.name;\n        if ( ! haveEnumsForType[ type ] ) {\n\n            /* eslint-disable */\n            for ( const key in gl )\n                if ( typeof gl[ key ] === 'number' ) {\n\n                    const existing = enums[ gl[ key ] ];\n                    enums[ gl[ key ] ] = existing ? `${existing} | ${key}` : key;\n\n                }\n            /* eslint-enable */\n            haveEnumsForType[ type ] = true;\n\n        }\n\n    }\n\n    return function ( gl, value ) {\n\n        addEnums( gl );\n        return enums[ value ] || ( `0x${value.toString( 16 )}` );\n\n    };\n\n}() );\n\nexport { isWebGL2, glEnumToString };\n","import { isWebGL2 } from './utils';\nimport { ShaderParams } from './constant';\n\nfunction getHTMLElementSrc( id ) {\n\n    const ele = document.getElementById( id );\n\n    if ( ! ele || ele.textContent === '' )\n        throw new Error( `${id} shader element does not exist or have text.` );\n\n    const idx = ele.textContent.indexOf( '#version 300 es' );\n    return ele.textContent.slice( idx );\n\n}\n\nfunction addLineNum( str ) {\n\n    const lines = str.split( '\\n' );\n    const limitLength = ( lines.length + 1 ).toString().length + 6;\n    let prefix;\n    return lines.map( ( line, index ) => {\n\n        prefix = `0:${index + 1}`;\n        if ( prefix.length >= limitLength )\n            return prefix.substring( 0, limitLength ) + line;\n\n        for ( let i = 0; i < limitLength - prefix.length; i ++ )\n            prefix += ' ';\n\n        return prefix + line;\n\n    } ).join( '\\n' );\n\n}\n\nfunction createShader( gl, src, type ) {\n\n    const shader = gl.createShader( type );\n    gl.shaderSource( shader, src );\n    gl.compileShader( shader );\n\n    if ( ! gl.getShaderParameter( shader, gl.COMPILE_STATUS ) )\n        throw new Error( `Error compiling shader: \\n${addLineNum( src )} \\n\\n${gl.getShaderInfoLog( shader )}` );\n\n    return shader;\n\n}\n\nfunction createProgram( gl, vs, fs, opts = {} ) {\n\n    let vShader;\n    let fShader;\n\n    if ( typeof vs === 'string' && vs.length < 20 ) {\n\n        const src = getHTMLElementSrc( vs );\n        vShader = createShader( gl, src, gl.VERTEX_SHADER );\n\n    } else if ( typeof vs === 'string' )\n        vShader = createShader( gl, vs, gl.VERTEX_SHADER );\n\n    if ( typeof fs === 'string' && fs.length < 20 ) {\n\n        const src = getHTMLElementSrc( fs );\n        fShader = createShader( gl, src, gl.FRAGMENT_SHADER );\n\n    } else if ( typeof fs === 'string' )\n        fShader = createShader( gl, fs, gl.FRAGMENT_SHADER );\n\n    const prog = gl.createProgram();\n    gl.attachShader( prog, vShader );\n    gl.attachShader( prog, fShader );\n\n    gl.bindAttribLocation( prog, ShaderParams.ATTRIB_POSITION_LOC, ShaderParams.ATTRIB_POSITION_NAME );\n    gl.bindAttribLocation( prog, ShaderParams.ATTRIB_NORMAL_LOC, ShaderParams.ATTRIB_NORMAL_NAME );\n    gl.bindAttribLocation( prog, ShaderParams.ATTRIB_UV_LOC, ShaderParams.ATTRIB_UV_NAME );\n    gl.bindAttribLocation( prog, ShaderParams.ATTRIB_BARYCENTRIC_LOC, ShaderParams.ATTRIB_BARYCENTRIC_NAME );\n\n    if ( opts.transformFeedbackVaryings ) {\n\n        let varyings = opts.transformFeedbackVaryings;\n        if ( ! Array.isArray( varyings ) )\n            varyings = Object.keys( varyings );\n        gl.transformFeedbackVaryings( prog, varyings, opts.transformFeedbackMode || gl.SEPARATE_ATTRIBS );\n\n    }\n\n    gl.linkProgram( prog );\n\n    if ( ! gl.getProgramParameter( prog, gl.LINK_STATUS ) )\n        throw new Error( `Error createing shader program.\\n\\n${gl.getProgramInfoLog( prog )}` );\n\n    if ( opts.validateProgram === undefined || opts.validateProgram ) {\n\n        gl.validateProgram( prog );\n        if ( ! gl.getProgramParameter( prog, gl.VALIDATE_STATUS ) )\n            throw new Error( `Error validating shader program.\\n\\n${gl.getProgramInfoLog( prog )}` );\n\n    }\n\n    gl.detachShader( prog, vShader );\n    gl.detachShader( prog, fShader );\n    gl.deleteShader( vShader );\n    gl.deleteShader( fShader );\n\n    return prog;\n\n}\n\n\nconst FLOAT = 0x1406;\nconst FLOAT_VEC2 = 0x8B50;\nconst FLOAT_VEC3 = 0x8B51;\nconst FLOAT_VEC4 = 0x8B52;\nconst INT = 0x1404;\nconst INT_VEC2 = 0x8B53;\nconst INT_VEC3 = 0x8B54;\nconst INT_VEC4 = 0x8B55;\nconst BOOL = 0x8B56;\nconst BOOL_VEC2 = 0x8B57;\nconst BOOL_VEC3 = 0x8B58;\nconst BOOL_VEC4 = 0x8B59;\nconst FLOAT_MAT2 = 0x8B5A;\nconst FLOAT_MAT3 = 0x8B5B;\nconst FLOAT_MAT4 = 0x8B5C;\nconst SAMPLER_2D = 0x8B5E;\nconst SAMPLER_CUBE = 0x8B60;\nconst SAMPLER_3D = 0x8B5F;\nconst SAMPLER_2D_SHADOW = 0x8B62;\nconst FLOAT_MAT2x3 = 0x8B65; // eslint-disable-line\nconst FLOAT_MAT2x4 = 0x8B66; // eslint-disable-line\nconst FLOAT_MAT3x2 = 0x8B67; // eslint-disable-line\nconst FLOAT_MAT3x4 = 0x8B68; // eslint-disable-line\nconst FLOAT_MAT4x2 = 0x8B69; // eslint-disable-line\nconst FLOAT_MAT4x3 = 0x8B6A; // eslint-disable-line\nconst SAMPLER_2D_ARRAY = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW = 0x8DC5;\nconst UNSIGNED_INT = 0x1405;\nconst UNSIGNED_INT_VEC2 = 0x8DC6;\nconst UNSIGNED_INT_VEC3 = 0x8DC7;\nconst UNSIGNED_INT_VEC4 = 0x8DC8;\nconst INT_SAMPLER_2D = 0x8DCA;\nconst INT_SAMPLER_3D = 0x8DCB;\nconst INT_SAMPLER_CUBE = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D = 0x0DE1;\nconst TEXTURE_CUBE_MAP = 0x8513;\nconst TEXTURE_3D = 0x806F;\nconst TEXTURE_2D_ARRAY = 0x8C1A;\n\n\nconst typeMap = {};\n\nfunction getBindPointForSamplerType( gl, type ) {\n\n    return typeMap[ type ].bindPoint;\n\n}\n\nfunction floatSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1f( location, v );\n\n    };\n\n}\n\nfunction floatArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1fv( location, v );\n\n    };\n\n}\n\nfunction floatVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2fv( location, v );\n\n    };\n\n}\n\nfunction floatVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3fv( location, v );\n\n    };\n\n}\n\nfunction floatVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4fv( location, v );\n\n    };\n\n}\n\nfunction intSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1i( location, v );\n\n    };\n\n}\n\nfunction intArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1iv( location, v );\n\n    };\n\n}\n\nfunction intVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2iv( location, v );\n\n    };\n\n}\n\nfunction intVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3iv( location, v );\n\n    };\n\n}\n\nfunction intVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4iv( location, v );\n\n    };\n\n}\n\nfunction uintSetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1ui( location, v );\n\n    };\n\n}\n\nfunction uintArraySetter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform1uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform2uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform3uiv( location, v );\n\n    };\n\n}\n\nfunction uintVec4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniform4uiv( location, v );\n\n    };\n\n}\n\nfunction floatMat2Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat3Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat4Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat23Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2x3fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat32Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3x2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat24Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix2x4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat42Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4x2fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat34Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix3x4fv( location, false, v );\n\n    };\n\n}\n\nfunction floatMat43Setter( gl, location ) {\n\n    return function ( v ) {\n\n        gl.uniformMatrix4x3fv( location, false, v );\n\n    };\n\n}\n\nfunction samplerSetter( gl, type, unit, location ) {\n\n    const bindPoint = getBindPointForSamplerType( gl, type );\n    return isWebGL2( gl ) ? function ( textureOrPair ) {\n\n        let texture;\n        let sampler;\n        if ( textureOrPair instanceof WebGLTexture ) {\n\n            texture = textureOrPair;\n            sampler = null;\n\n        } else {\n\n            texture = textureOrPair.texture;\n            sampler = textureOrPair.sampler;\n\n        }\n        gl.uniform1i( location, unit );\n        gl.activeTexture( gl.TEXTURE0 + unit );\n        gl.bindTexture( bindPoint, texture );\n        gl.bindSampler( unit, sampler );\n\n    } : function ( texture ) {\n\n        gl.uniform1i( location, unit );\n        gl.activeTexture( gl.TEXTURE0 + unit );\n        gl.bindTexture( bindPoint, texture );\n\n    };\n\n}\n\nfunction samplerArraySetter( gl, type, unit, location, size ) {\n\n    const bindPoint = getBindPointForSamplerType( gl, type );\n    const units = new Int32Array( size );\n    for ( let ii = 0; ii < size; ++ ii )\n        units[ ii ] = unit + ii;\n\n\n    return isWebGL2( gl ) ? function ( textures ) {\n\n        gl.uniform1iv( location, units );\n        textures.forEach( ( textureOrPair, index ) => {\n\n            gl.activeTexture( gl.TEXTURE0 + units[ index ] );\n            let texture;\n            let sampler;\n            if ( textureOrPair instanceof WebGLTexture ) {\n\n                texture = textureOrPair;\n                sampler = null;\n\n            } else {\n\n                texture = textureOrPair.texture;\n                sampler = textureOrPair.sampler;\n\n            }\n            gl.bindSampler( unit, sampler );\n            gl.bindTexture( bindPoint, texture );\n\n        } );\n\n    } : function ( textures ) {\n\n        gl.uniform1iv( location, units );\n        textures.forEach( ( texture, index ) => {\n\n            gl.activeTexture( gl.TEXTURE0 + units[ index ] );\n            gl.bindTexture( bindPoint, texture );\n\n        } );\n\n    };\n\n}\n\ntypeMap[ FLOAT ] = {\n    Type: Float32Array, size: 4, setter: floatSetter, arraySetter: floatArraySetter,\n};\ntypeMap[ FLOAT_VEC2 ] = { Type: Float32Array, size: 8, setter: floatVec2Setter };\ntypeMap[ FLOAT_VEC3 ] = { Type: Float32Array, size: 12, setter: floatVec3Setter };\ntypeMap[ FLOAT_VEC4 ] = { Type: Float32Array, size: 16, setter: floatVec4Setter };\ntypeMap[ INT ] = {\n    Type: Int32Array, size: 4, setter: intSetter, arraySetter: intArraySetter,\n};\ntypeMap[ INT_VEC2 ] = { Type: Int32Array, size: 8, setter: intVec2Setter };\ntypeMap[ INT_VEC3 ] = { Type: Int32Array, size: 12, setter: intVec3Setter };\ntypeMap[ INT_VEC4 ] = { Type: Int32Array, size: 16, setter: intVec4Setter };\ntypeMap[ UNSIGNED_INT ] = {\n    Type: Uint32Array, size: 4, setter: uintSetter, arraySetter: uintArraySetter,\n};\ntypeMap[ UNSIGNED_INT_VEC2 ] = { Type: Uint32Array, size: 8, setter: uintVec2Setter };\ntypeMap[ UNSIGNED_INT_VEC3 ] = { Type: Uint32Array, size: 12, setter: uintVec3Setter };\ntypeMap[ UNSIGNED_INT_VEC4 ] = { Type: Uint32Array, size: 16, setter: uintVec4Setter };\ntypeMap[ BOOL ] = {\n    Type: Uint32Array, size: 4, setter: intSetter, arraySetter: intArraySetter,\n};\ntypeMap[ BOOL_VEC2 ] = { Type: Uint32Array, size: 8, setter: intVec2Setter };\ntypeMap[ BOOL_VEC3 ] = { Type: Uint32Array, size: 12, setter: intVec3Setter };\ntypeMap[ BOOL_VEC4 ] = { Type: Uint32Array, size: 16, setter: intVec4Setter };\ntypeMap[ FLOAT_MAT2 ] = { Type: Float32Array, size: 16, setter: floatMat2Setter };\ntypeMap[ FLOAT_MAT3 ] = { Type: Float32Array, size: 36, setter: floatMat3Setter };\ntypeMap[ FLOAT_MAT4 ] = { Type: Float32Array, size: 64, setter: floatMat4Setter };\ntypeMap[ FLOAT_MAT2x3 ] = { Type: Float32Array, size: 24, setter: floatMat23Setter };\ntypeMap[ FLOAT_MAT2x4 ] = { Type: Float32Array, size: 32, setter: floatMat24Setter };\ntypeMap[ FLOAT_MAT3x2 ] = { Type: Float32Array, size: 24, setter: floatMat32Setter };\ntypeMap[ FLOAT_MAT3x4 ] = { Type: Float32Array, size: 48, setter: floatMat34Setter };\ntypeMap[ FLOAT_MAT4x2 ] = { Type: Float32Array, size: 32, setter: floatMat42Setter };\ntypeMap[ FLOAT_MAT4x3 ] = { Type: Float32Array, size: 48, setter: floatMat43Setter };\ntypeMap[ SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ SAMPLER_2D_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ SAMPLER_2D_ARRAY_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ SAMPLER_CUBE_SHADOW ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ INT_SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ INT_SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ INT_SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ INT_SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_2D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_3D ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_CUBE ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP,\n};\ntypeMap[ UNSIGNED_INT_SAMPLER_2D_ARRAY ] = {\n    Type: null, size: 0, setter: samplerSetter, arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY,\n};\n\nfunction floatAttribSetter( gl, index ) {\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        gl.enableVertexAttribArray( index );\n        gl.vertexAttribPointer( index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0 );\n\n        if ( b.divisor !== undefined )\n            gl.vertexAttribDivisor( index, b.divisor );\n\n    };\n\n}\n\nfunction intAttribSetter( gl, index ) {\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        gl.enableVertexAttribArray( index );\n        gl.vertexAttribIPointer( index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0 );\n\n        if ( b.divisor !== undefined )\n            gl.vertexAttribDivisor( index, b.divisor );\n\n    };\n\n}\n\nfunction matAttribSetter( gl, index, typeInfo ) {\n\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n\n    return function ( b ) {\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, b.buffer );\n        const numComponents = b.size || b.numComponents || defaultSize;\n        const size = numComponents / count;\n        const type = b.type || gl.FLOAT;\n        const typeInfoNew = typeMap[ type ];\n        const stride = typeInfoNew.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for ( let i = 0; i < count; ++ i ) {\n\n            gl.enableVertexAttribArray( index + i );\n            gl.vertexAttribPointer( index + i, size, type, normalize, stride, offset + ( rowOffset * i ) );\n\n            if ( b.divisor !== undefined )\n                gl.vertexAttribDivisor( index + i, b.divisor );\n\n        }\n\n    };\n\n}\n\nconst attrTypeMap = {};\nattrTypeMap[ FLOAT ] = { size: 4, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC2 ] = { size: 8, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC3 ] = { size: 12, setter: floatAttribSetter };\nattrTypeMap[ FLOAT_VEC4 ] = { size: 16, setter: floatAttribSetter };\nattrTypeMap[ INT ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ INT_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ INT_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ INT_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ UNSIGNED_INT_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ BOOL ] = { size: 4, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC2 ] = { size: 8, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC3 ] = { size: 12, setter: intAttribSetter };\nattrTypeMap[ BOOL_VEC4 ] = { size: 16, setter: intAttribSetter };\nattrTypeMap[ FLOAT_MAT2 ] = { size: 4, setter: matAttribSetter, count: 2 };\nattrTypeMap[ FLOAT_MAT3 ] = { size: 9, setter: matAttribSetter, count: 3 };\nattrTypeMap[ FLOAT_MAT4 ] = { size: 16, setter: matAttribSetter, count: 4 };\n\nfunction isBuiltIn( info ) {\n\n    const name = info.name;\n    return name.startsWith( 'gl_' ) || name.startsWith( 'webgl_' );\n\n}\n\nfunction createAttributesSetters( gl, program ) {\n\n    const attribSetters = {};\n\n    const numAttribs = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n    for ( let i = 0; i < numAttribs; i ++ ) {\n\n        const attribInfo = gl.getActiveAttrib( program, i );\n        if ( isBuiltIn( attribInfo ) )\n            continue; // eslint-disable-line\n        const index = gl.getAttribLocation( program, attribInfo.name );\n        const typeInfo = attrTypeMap[ attribInfo.type ];\n        const setter = typeInfo.setter( gl, index, typeInfo );\n        setter.location = index;\n        attribSetters[ attribInfo.name ] = setter;\n\n    }\n\n    return attribSetters;\n\n}\n\nfunction setAttributes( setters, buffers ) {\n\n    Object.keys( buffers ).forEach( ( attrib ) => {\n\n        const setter = setters[ attrib ];\n        if ( setter )\n            setter( buffers[ attrib ] );\n\n    } );\n\n}\n\nfunction createUniformSetters( gl, program ) {\n\n    let textureUnit = 0;\n\n    function createUnifromSetter( uniformInfo ) {\n\n        const location = gl.getUniformLocation( program, uniformInfo.name );\n        const isArray = ( uniformInfo.size > 1 && uniformInfo.name.substr( - 3 ) === '[0]' );\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[ type ];\n        if ( ! typeInfo )\n            throw new Error( `unknown type: 0x${type.toString( 16 )}` );\n        let setter;\n        if ( typeInfo.bindPoint ) {\n\n            const uint = textureUnit;\n            textureUnit += uniformInfo.size;\n            if ( isArray )\n                setter = typeInfo.arraySetter( gl, type, uint, location, uniformInfo.size );\n            else\n                setter = typeInfo.setter( gl, type, uint, location, uniformInfo.size );\n\n        } else if ( typeInfo.arraySetter && isArray )\n            setter = typeInfo.arraySetter( gl, location );\n        else\n            setter = typeInfo.setter( gl, location );\n\n        setter.location = location;\n        return setter;\n\n    }\n\n    const uniformSetters = {};\n    const numUnifroms = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n    for ( let i = 0; i < numUnifroms; i ++ ) {\n\n        const uniformInfo = gl.getActiveUniform( program, i );\n        if ( isBuiltIn( uniformInfo ) )\n            continue; // eslint-disable-line\n        let name = uniformInfo.name;\n        if ( name.substr( - 3 ) === '[0]' )\n            name = name.substr( 0, name.length - 3 );\n\n        const setter = createUnifromSetter( uniformInfo );\n        uniformSetters[ name ] = setter;\n\n    }\n\n    const keyMap = {};\n    uniformSetters.keyMap = keyMap;\n    Object.keys( uniformSetters ).forEach( ( key ) => {\n\n        if ( key.indexOf( ShaderParams.UNIFORM_PREFIX ) === 0 )\n            keyMap[ key.replace( ShaderParams.UNIFORM_PREFIX, '' ) ] = key;\n\n    } );\n\n    return uniformSetters;\n\n}\n\nfunction setUniforms( setters, ...unifroms ) {\n\n    const numArgs = unifroms.length;\n    for ( let i = 0; i < numArgs; i ++ ) {\n\n        const vals = unifroms[ i ];\n        if ( Array.isArray( vals ) ) {\n\n            const numVals = vals.length;\n            for ( let j = 0; j < numVals; j ++ )\n                setUniforms( setters, vals[ j ] );\n\n        } else\n            Object.keys( vals ).forEach( ( name ) => {\n\n                let setter = setters[ name ];\n                if ( setter === undefined && Object.prototype.hasOwnProperty.call( setters.keyMap, name ) )\n                    setter = setters[ setters.keyMap[ name ] ];\n\n                if ( setter )\n                    setter( vals[ name ] );\n\n            } );\n\n    }\n\n}\n\nfunction createUniformBlockSpec( gl, program ) {\n\n    const numUnifroms = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n    const uniformData = [];\n    const uniformIndices = [];\n\n    for ( let i = 0; i < numUnifroms; i ++ ) {\n\n        uniformIndices.push( i );\n        uniformData.push( {} );\n        const uniformInfo = gl.getActiveUniform( program, i );\n        if ( isBuiltIn( uniformInfo ) )\n            break;\n        uniformData[ i ].name = uniformInfo.name;\n\n    }\n\n    [\n        [ 'UNIFORM_TYPE', 'type' ],\n        [ 'UNIFORM_SIZE', 'size' ],\n        [ 'UNIFORM_BLOCK_INDEX', 'blockIndex' ],\n        [ 'UNIFORM_OFFSET', 'offset' ],\n    ].forEach( ( pair ) => {\n\n        const gname = pair[ 0 ];\n        const key = pair[ 1 ];\n        gl.getActiveUniforms( program, uniformIndices, gl[ gname ] ).forEach( ( value, idx ) => {\n\n            uniformData[ idx ][ key ] = value;\n\n        } );\n\n    } );\n\n    const blockSpecs = {};\n\n    const numUniformBlock = gl.getProgramParameter( program, gl.ACTIVE_UNIFORM_BLOCKS );\n    for ( let i = 0; i < numUniformBlock; i ++ ) {\n\n        const name = gl.getActiveUniformBlockName( program, i );\n        const blockSpec = {\n            index: i,\n            usedByVertexShader: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER ),\n            usedByFragmentShader: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER ),\n            size: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_DATA_SIZE ),\n            uniformIndices: gl.getActiveUniformBlockParameter( program, i, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES ),\n        };\n\n        blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n        blockSpecs[ name ] = blockSpec;\n\n    }\n\n    return {\n        blockSpecs,\n        uniformData,\n    };\n\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;\n\nfunction createUniformBlockInfo( gl, program, uniformBlockSpec, blockName ) {\n\n    const blockSpecs = uniformBlockSpec.blockSpecs;\n    const uniformData = uniformBlockSpec.uniformData;\n    const blockSpec = blockSpecs[ blockName ];\n    if ( ! blockSpec ) {\n\n        console.warn( `no uniform block object named: ${blockName}` );\n        return {\n            name: blockName,\n            uniforms: {},\n        };\n\n    }\n\n    const array = new ArrayBuffer( blockSpec.size );\n    const buffer = gl.createBuffer();\n    const uniformBufferIndex = blockSpec.index;\n    gl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n    gl.uniformBlockBinding( program, blockSpec.index, uniformBufferIndex );\n\n    let prefix = `${blockName}.`;\n    if ( arraySuffixRE.test( prefix ) )\n        prefix = prefix.replace( arraySuffixRE, '.' );\n\n    const uniforms = {};\n    blockSpec.uniformIndices.forEach( ( uniformidx ) => {\n\n        const data = uniformData[ uniformidx ];\n        const typeInfo = typeMap[ data.type ];\n        const Type = typeInfo.Type;\n        const length = data.size * typeInfo.size;\n        let name = data.name;\n        if ( name.substr( 0, prefix.length ) === prefix )\n            name = name.substr( prefix.length );\n        uniforms[ name ] = new Type( array, data.offset, length / Type.BYTES_PER_ELEMENT );\n\n    } );\n\n    return {\n        name: blockName,\n        array,\n        typedArray: new Float32Array( array ),\n        buffer,\n        uniforms,\n    };\n\n}\n\nfunction createUniformBlockInfos( gl, program, uniformBlockSpec ) {\n\n    const uboInfos = {};\n    Object.keys( uniformBlockSpec.blockSpecs ).forEach( ( blockName ) => {\n\n        uboInfos[ blockName ] = createUniformBlockInfo( gl, program, uniformBlockSpec, blockName );\n\n    } );\n\n    return uboInfos;\n\n}\n\nfunction bindUniformBlock( gl, uniformBlockSpec, uniformBlcokInfo ) {\n\n    const blockSpec = uniformBlockSpec.blockSpecs[ uniformBlcokInfo.name ];\n    if ( blockSpec ) {\n\n        const bufferBindIndex = blockSpec.index;\n        gl.bindBufferRange( gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlcokInfo.buffer, uniformBlcokInfo.offset || 0, uniformBlcokInfo.array.byteLength );\n\n        return true;\n\n    }\n    return false;\n\n}\n\nfunction setUniformBlock( gl, uniformBlockSpec, uniformBlockInfo ) {\n\n    if ( bindUniformBlock( gl, uniformBlockSpec, uniformBlockInfo ) )\n        gl.bufferData( gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW );\n\n}\n\nfunction setBlockUniforms( uniformBlockInfo, values ) {\n\n    const uniforms = uniformBlockInfo.uniforms;\n    let changed = false;\n    Object.keys( values ).forEach( ( name ) => {\n\n        const array = uniforms[ name ];\n\n        if ( array ) {\n\n            const value = values[ name ];\n            if ( value.length )\n                array.set( value );\n            else\n                array[ 0 ] = value;\n\n            changed = true;\n\n        }\n\n    } );\n\n    return changed;\n\n}\n\nfunction setBlockUniformsForProgram( gl, uniformBlockSpec, uniformBlockInfos, values ) {\n\n    Object.keys( uniformBlockInfos ).forEach( ( blockName ) => {\n\n        if ( setBlockUniforms( uniformBlockInfos[ blockName ], values ) )\n            setUniformBlock( gl, uniformBlockSpec, uniformBlockInfos[ blockName ] );\n        else\n            bindUniformBlock( gl, uniformBlockSpec, uniformBlockInfos[ blockName ] );\n\n    } );\n\n}\n\nfunction createTransformFeedbackInfo( gl, program ) {\n\n    const info = {};\n    const numVaryings = gl.getProgramParameter( program, gl.TRANSFORM_FEEDBACK_VARYINGS );\n    for ( let i = 0; i < numVaryings; i ++ ) {\n\n        const varying = gl.getTransformFeedbackVarying( program, i );\n        info[ varying.name ] = {\n            index: i,\n            type: varying.type,\n            size: varying.size,\n        };\n\n    }\n\n    return info;\n\n}\n\nfunction bindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo ) {\n\n    if ( bufferInfo.attribs )\n        bufferInfo = bufferInfo.attribs; // eslint-disable-line\n\n    Object.keys( bufferInfo ).forEach( ( name ) => {\n\n        const varying = transformfeedbaclnfo[ name ];\n        if ( varying ) {\n\n            const buf = bufferInfo[ name ];\n            if ( buf.offset )\n                gl.bindBufferRange( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size );\n            else\n                gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer );\n\n        }\n\n    } );\n\n}\n\nfunction unbindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo ) {\n\n    if ( bufferInfo.attribs )\n        bufferInfo = bufferInfo.attribs; // eslint-disable-line\n\n    Object.keys( bufferInfo ).forEach( ( name ) => {\n\n        const varying = transformfeedbaclnfo[ name ];\n        if ( varying )\n            gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null );\n\n    } );\n\n}\n\nfunction createTransformFeedback( gl, program, transformfeedbaclnfo, bufferInfo ) {\n\n    const tf = gl.createTransformFeedback();\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, tf );\n    gl.useProgram( program );\n    bindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo );\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, null );\n    unbindTransformFeedbackInfo( gl, transformfeedbaclnfo, bufferInfo );\n\n    return tf;\n\n}\n\nexport {\n    createProgram,\n    createAttributesSetters,\n    setAttributes,\n    createUniformSetters,\n    setUniforms,\n\n    createUniformBlockSpec,\n    createUniformBlockInfo,\n    createUniformBlockInfos,\n    setUniformBlock,\n    setBlockUniforms,\n    setBlockUniformsForProgram,\n\n    createTransformFeedbackInfo,\n    createTransformFeedback,\n};\n","import { isArrayBuffer, getGLTypeFromTypedArray, getGLTypeFromTypedArrayType } from './typedArray';\n\nfunction isIndices( name ) {\n\n    return name === 'index' || name === 'indices';\n\n}\n\nfunction getArray( array ) {\n\n    return array.length ? array : array.data;\n\n}\n\nfunction getTypedArray( array, name ) {\n\n    if ( isArrayBuffer( array ) ) return array;\n\n    if ( isIndices( name ) ) return new Uint16Array( array );\n\n    return new Float32Array( array );\n\n}\n\nconst colorRE = /color|colour/i;\nconst textureRE = /uv|coord/i;\n\nfunction guessNumComponentsFromName( name, length ) {\n\n    let numComponents;\n    if ( colorRE.test( name ) ) numComponents = 4;\n    else if ( textureRE.test( name ) ) numComponents = 2;\n    else numComponents = 3;\n\n    if ( length % numComponents > 0 )\n        throw new Error( `Can not guess numComponents for attribute ${name}.` );\n\n    return numComponents;\n\n}\n\nfunction getNumComponents( array, name ) {\n\n    return array.numComponents || array.size || guessNumComponentsFromName( name, getArray( array ).length );\n\n}\n\nfunction createBufferFromTypedArray( gl, typedArray, type = gl.ARRAY_BUFFER, drawType = gl.STATIC_DRAW ) {\n\n    if ( typedArray instanceof WebGLBuffer )\n        return typedArray;\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer( type, buffer );\n    gl.bufferData( type, typedArray, drawType );\n    return buffer;\n\n}\n\nconst positionNames = [ 'position', 'positions', 'a_position' ];\n\nfunction getNumElementsFromNonIndicedArrays( arrays ) {\n\n    let key;\n    let i;\n    for ( i = 0; i < positionNames.length; i ++ )\n        if ( positionNames[ i ] in arrays ) {\n\n            key = positionNames[ i ];\n            break;\n\n        }\n\n    if ( i === positionNames.length ) [ key ] = Object.keys( arrays );\n    const array = arrays[ key ];\n    const dataArray = getArray( array );\n    return dataArray.length / getNumComponents( array, key );\n\n}\n\nfunction getBytesPerValueForGLType( gl, type ) {\n\n    if (type === gl.BYTE)           return 1;  // eslint-disable-line\n    if (type === gl.UNSIGNED_BYTE)  return 1;  // eslint-disable-line\n    if (type === gl.SHORT)          return 2;  // eslint-disable-line\n    if (type === gl.UNSIGNED_SHORT) return 2;  // eslint-disable-line\n    if (type === gl.INT)            return 4;  // eslint-disable-line\n    if (type === gl.UNSIGNED_INT)   return 4;  // eslint-disable-line\n    if (type === gl.FLOAT)          return 4;  // eslint-disable-line\n    return 0;\n\n}\n\nfunction getNumElementsFromAttribs( gl, attribs ) {\n\n    let key;\n    let i;\n    for ( i = 0; i < positionNames.length; i ++ )\n        if ( positionNames[ i ] in attribs ) {\n\n            key = positionNames[ i ];\n            break;\n\n        }\n\n    if ( i === positionNames.length ) [ key ] = Object.keys( attribs );\n    const attrib = attribs[ key ];\n    gl.bindBuffer( gl.ARRAY_BUFFER, attrib.buffer );\n    const numBytes = gl.getBufferParameter( gl.ARRAY_BUFFER, gl.BUFFER_SIZE );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    let numElements;\n    if ( attrib.stride !== 0 )\n        numElements = Math.floor( ( numBytes - attrib.offset ) / attrib.stride ); // need consider padding end\n    else {\n\n        const bytesPerValue = getBytesPerValueForGLType( gl, attrib.type );\n        const totalElements = ( numBytes - attrib.offset ) / bytesPerValue;\n        const numComponents = attrib.numComponents || attrib.size;\n        numElements = totalElements / numComponents;\n        if ( numElements % 1 !== 0 )\n            throw new Error( `numComponent ${numComponents} not correct for length ${totalElements}` );\n\n    }\n\n    return numElements;\n\n}\n\nfunction createBufferFromArray( gl, array, name ) {\n\n    const type = name === 'indices' ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n    const typedArray = getTypedArray( getArray( array ), name );\n    return createBufferFromTypedArray( gl, typedArray, type, array.drawType );\n\n}\n\nfunction createBuffersFromArrays( gl, arrays ) {\n\n    const buffers = {};\n\n    Object.keys( arrays ).forEach( ( key ) => {\n\n        buffers[ key ] = createBufferFromArray( gl, arrays[ key ], key );\n\n    } );\n\n    if ( arrays.indices )\n        buffers.numElements = arrays.indices.length;\n    else\n        buffers.numElements = getNumElementsFromNonIndicedArrays( arrays );\n\n    return buffers;\n\n}\n\nfunction createAttribsFromArrays( gl, arrays ) {\n\n    const attribs = {};\n\n    Object.keys( arrays ).forEach( ( key ) => {\n\n        if ( ! isIndices( key ) ) {\n\n            const array = arrays[ key ];\n            const attribName = array.name || array.attrib || array.attribName || key;\n            const normalization = array.normalize !== undefined ? array.normalize : false;\n            let buffer;\n            let type;\n            let numComponents;\n            if ( typeof array === 'number' || typeof array.data === 'number' ) {\n\n                const numEle = array.data || array;\n                const arrayType = array.type || Float32Array;\n                const numBytes = numEle * arrayType.BYTES_PER_ELEMENT;\n                type = getGLTypeFromTypedArrayType( arrayType );\n                numComponents = array.numComponents || array.size || guessNumComponentsFromName( key, numEle );\n                buffer = gl.createBuffer();\n                gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n                gl.bufferData( gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW );\n\n            } else {\n\n                const typedArray = getTypedArray( getArray( array ), key );\n                buffer = array.buffer || createBufferFromTypedArray( gl, typedArray, gl.ARRAY_BUFFER, array.drawType );\n                type = getGLTypeFromTypedArray( typedArray );\n                numComponents = getNumComponents( array, key );\n                array.numComponents = numComponents;\n\n            }\n\n            attribs[ attribName ] = {\n                buffer,\n                numComponents,\n                type,\n                normalize: normalization,\n                stride: array.stride || 0,\n                offset: array.offset || 0,\n                divisor: typeof array.divisor === 'undefined' ? undefined : array.divisor,\n                drawType: array.drawType || gl.STATIC_DRAW,\n            };\n\n        }\n\n    } );\n\n    return attribs;\n\n}\n\nfunction createBufferInfoFromArrays( gl, arrays ) {\n\n    const bufferInfo = {\n        attribs: createAttribsFromArrays( gl, arrays ),\n    };\n\n    const { indices } = arrays;\n    if ( indices ) {\n\n        const newIndices = getTypedArray( getArray( indices ), 'indices' );\n        bufferInfo.indices = createBufferFromTypedArray( gl, newIndices, gl.ELEMENT_ARRAY_BUFFER );\n        bufferInfo.numElements = newIndices.length;\n        bufferInfo.elementType = getGLTypeFromTypedArray( newIndices );\n\n    } else\n        bufferInfo.numElements = getNumElementsFromAttribs( gl, bufferInfo.attribs );\n\n    return bufferInfo;\n\n}\n\nfunction setTypedArrayToBuffer( gl, buffer, typedArray, drawType = gl.DYNAMIC_DRAW ) {\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n    gl.bufferData( gl.ARRAY_BUFFER, typedArray, drawType );\n\n}\n\nexport { createBuffersFromArrays, createBufferInfoFromArrays, isIndices, setTypedArrayToBuffer, getNumComponents, createBufferFromArray };\n","function Matrix3() {\n\n    this.raw = Matrix3.identity();\n\n}\n\nObject.assign( Matrix3, {\n\n    identity() {\n\n        const a = new Float32Array( 9 );\n        a[ 0 ] = 1;\n        a[ 4 ] = 1;\n        a[ 8 ] = 1;\n\n        return a;\n\n    },\n\n    equals: ( function () {\n\n        const EPS = 0.000001;\n\n        return function equals( a, b ) {\n\n            const a0 = a[ 0 ];\n            const a1 = a[ 1 ];\n            const a2 = a[ 2 ];\n            const a3 = a[ 3 ];\n            const a4 = a[ 4 ];\n            const a5 = a[ 5 ];\n            const a6 = a[ 6 ];\n            const a7 = a[ 7 ];\n            const a8 = a[ 8 ];\n\n            const b0 = b[ 0 ];\n            const b1 = b[ 1 ];\n            const b2 = b[ 2 ];\n            const b3 = b[ 3 ];\n            const b4 = b[ 4 ];\n            const b5 = b[ 5 ];\n            const b6 = b[ 6 ];\n            const b7 = b[ 7 ];\n            const b8 = b[ 8 ];\n\n            return ( Math.abs( a0 - b0 ) <= EPS * Math.max( 1.0, Math.abs( a0 ), Math.abs( b0 ) ) &&\n              Math.abs( a1 - b1 ) <= EPS * Math.max( 1.0, Math.abs( a1 ), Math.abs( b1 ) ) &&\n              Math.abs( a2 - b2 ) <= EPS * Math.max( 1.0, Math.abs( a2 ), Math.abs( b2 ) ) &&\n              Math.abs( a3 - b3 ) <= EPS * Math.max( 1.0, Math.abs( a3 ), Math.abs( b3 ) ) &&\n              Math.abs( a4 - b4 ) <= EPS * Math.max( 1.0, Math.abs( a4 ), Math.abs( b4 ) ) &&\n              Math.abs( a5 - b5 ) <= EPS * Math.max( 1.0, Math.abs( a5 ), Math.abs( b5 ) ) &&\n              Math.abs( a6 - b6 ) <= EPS * Math.max( 1.0, Math.abs( a6 ), Math.abs( b6 ) ) &&\n              Math.abs( a7 - b7 ) <= EPS * Math.max( 1.0, Math.abs( a7 ), Math.abs( b7 ) ) &&\n              Math.abs( a8 - b8 ) <= EPS * Math.max( 1.0, Math.abs( a8 ), Math.abs( b8 ) ) );\n\n        };\n\n    }() ),\n\n    clone( a ) {\n\n        const out = new Float32Array( 9 );\n        out[ 0 ] = a[ 0 ];\n        out[ 1 ] = a[ 1 ];\n        out[ 2 ] = a[ 2 ];\n        out[ 3 ] = a[ 3 ];\n        out[ 4 ] = a[ 4 ];\n        out[ 5 ] = a[ 5 ];\n        out[ 6 ] = a[ 6 ];\n        out[ 7 ] = a[ 7 ];\n        out[ 8 ] = a[ 8 ];\n\n        return out;\n\n    },\n\n} );\n\nexport { Matrix3 };\n","import { createProgram, createUniformSetters, setUniforms, createAttributesSetters, createUniformBlockSpec, createUniformBlockInfos, setBlockUniformsForProgram } from '../renderer/program';\nimport { ShaderParams } from '../renderer/constant';\nimport { PMath } from '../math/Math';\nimport { Matrix3 } from '../math/Matrix3';\nimport { Matrix4 } from '../math/Matrix4';\n\nfunction Shader( gl, vs, fs, opts ) {\n\n    this.cullFace = true;\n    this.blend = false;\n    this.depth = true;\n    this.sampleBlend = false;\n    this.shaders = [ vs, fs ];\n    this.program = null;\n    this.programs = [];\n    this.programMap = [];\n    this.gl = gl;\n    this.opts = opts;\n    this.camera = null;\n    this.currentUniformObj = {};\n    this.uniformObj = {};\n    this.programInfos = [];\n    this.uniformObjs = [];\n    this._programUpdated = false;\n\n    this.setDefines();\n\n}\n\nfunction equalSign( a, b ) {\n\n    return a === b;\n\n}\n\nObject.assign( Shader.prototype, {\n\n    activate() {\n\n        if ( Shader.currentProgram !== this.program ) {\n\n            this.gl.useProgram( this.program );\n            Shader.currentProgram = this.program;\n\n        }\n        return this;\n\n    },\n\n    deactivate() {\n\n        this.gl.useProgram( null );\n        Shader.currentProgram = null;\n        return this;\n\n    },\n\n    setUniformObjProp( prop, value, equalsFun = equalSign ) {\n\n        if ( this.currentUniformObj[ prop ] === undefined || ! equalsFun( this.currentUniformObj[ prop ], value ) ) {\n\n            this.uniformObj[ prop ] = value;\n            this.currentUniformObj[ prop ] = value;\n\n            if ( equalsFun === Matrix4.equals )\n                this.currentUniformObj[ prop ] = Matrix4.clone( value );\n            else if ( equalsFun === Matrix3.equals )\n                this.currentUniformObj[ prop ] = Matrix3.clone( value );\n            else if ( Array.isArray( value ) )\n                this.currentUniformObj[ prop ] = value.slice();\n            else if ( equalsFun === PMath.arrayEquals )\n                this.currentUniformObj[ prop ] = PMath.arrayClone( value );\n\n        }\n\n    },\n\n    setUniformObj( obj ) {\n\n        Object.keys( obj ).forEach( ( prop ) => {\n\n            if ( obj[ prop ].length === 16 && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], Matrix4.equals );\n            else if ( obj[ prop ].length === 9 && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], Matrix3.equals );\n            else if ( obj[ prop ].length && typeof obj[ prop ][ 0 ] === 'number' )\n                this.setUniformObjProp( prop, obj[ prop ], PMath.arrayEquals );\n            else\n                this.setUniformObjProp( prop, obj[ prop ] );\n\n        } );\n        return this;\n\n    },\n\n    setUniforms( uniforms ) {\n\n        setUniforms( this.uniformSetters, uniforms );\n        return this;\n\n    },\n\n    setBlockUniforms( uniforms ) {\n\n        setBlockUniformsForProgram( this.gl, this.uniformBlockSpec, this.uniformBlockInfos, uniforms );\n        return this;\n\n    },\n\n    setProjMatrix( mat4Array ) {\n\n        this.setUniformObjProp( ShaderParams.UNIFORM_PROJ_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setViewMatrix( mat4Array ) {\n\n        this.setUniformObjProp( ShaderParams.UNIFORM_VIEW_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setWorldMatrix( mat4Array ) {\n\n        this.setUniformObjProp( ShaderParams.UNIFORM_WORLD_MAT_NAME, mat4Array, Matrix4.equals );\n        return this;\n\n    },\n\n    setTexture( tex ) {\n\n        this.setUniformObj( { texture: tex } );\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        this.camera = camera;\n        return this;\n\n    },\n\n    updateCamera() {\n\n        if ( ! this.camera ) return this;\n\n        if ( this._needCamPos )\n            this.setUniformObjProp( ShaderParams.UNIFORM_CAMPOS, this.camera.position, PMath.arrayEquals );\n\n        this.setProjMatrix( this.camera.projMat );\n        this.setViewMatrix( this.camera.viewMat );\n        return this;\n\n    },\n\n    dispose() {\n\n        if ( this.gl.getParameter( this.gl.CURRENT_PROGRAM ) === this.program )\n            this.gl.useProgram( null );\n\n        this.gl.deleteProgram( this.program );\n\n    },\n\n    preRender() {\n\n        if ( this._programUpdated ) {\n\n            this.uniformObj = this.currentUniformObj;\n            this._programUpdated = false;\n\n        } else if ( Shader.currentProgram !== this.program )\n            Object.keys( this.currentUniformObj ).forEach( ( prop ) => {\n\n                if ( this.currentUniformObj[ prop ] instanceof WebGLTexture )\n                    this.uniformObj[ prop ] = this.currentUniformObj[ prop ];\n\n            } );\n\n        this.activate();\n        this.updateCamera();\n\n        if ( this._needMVPMat || this._needVPMat ) {\n\n            this.currentUniformObj.temp = Matrix4.mult( Matrix4.identity(), this.currentUniformObj[ ShaderParams.UNIFORM_PROJ_MAT_NAME ], this.currentUniformObj[ ShaderParams.UNIFORM_VIEW_MAT_NAME ] );\n            if ( this._needVPMat ) this.setUniformObjProp( ShaderParams.UNIFORM_VP_MAT_NAME, this.currentUniformObj.temp, Matrix4.equals );\n            if ( this._needMVPMat ) {\n\n                this.currentUniformObj.temp = Matrix4.mult( this.currentUniformObj.temp, this.currentUniformObj.temp, this.currentUniformObj[ ShaderParams.UNIFORM_WORLD_MAT_NAME ] );\n                this.setUniformObjProp( ShaderParams.UNIFORM_MVP_MAT_NAME, this.currentUniformObj.temp, Matrix4.equals );\n\n            }\n\n        }\n\n\n        this.setUniforms( this.uniformObj );\n        this.setBlockUniforms( this.uniformObj );\n        this.uniformObj = {};\n\n        return this;\n\n    },\n\n    renderModel( model ) {\n\n        if ( Shader.cullFace !== ( this.cullFace && model.cullFace ) ) {\n\n            this.gl[( ( this.cullFace && model.cullFace ) ? 'enable' : 'disable' )]( this.gl.CULL_FACE );\n            Shader.cullFace = ( this.cullFace && model.cullFace );\n\n        }\n\n        if ( Shader.blend !== ( this.blend || model.blend ) ) {\n\n            this.gl[( ( this.blend || model.blend ) ? 'enable' : 'disable' )]( this.gl.BLEND );\n            Shader.blend = ( this.blend || model.blend );\n\n        }\n\n        if ( Shader.depth !== ( this.depth && model.depth ) ) {\n\n            this.gl.depthMask( ( this.depth && model.depth ) );\n            Shader.depth = ( this.depth && model.depth );\n\n        }\n\n        if ( Shader.sampleBlend !== ( this.sampleBlend || model.sampleBlend ) ) {\n\n            this.gl[( ( this.sampleBlend || model.sampleBlend ) ? 'enable' : 'disable' )]( this.gl.SAMPLE_ALPHA_TO_COVERAGE );\n            Shader.sampleBlend = ( this.sampleBlend || model.sampleBlend );\n\n        }\n\n        model.preRender( this.gl, this._customAttrib ? this : undefined );\n        this.setUniformObj( model.uniformObj );\n        this.setWorldMatrix( model.transform.getWorldMatrix() );\n        if ( this._needNormMat )\n            this.setUniformObjProp( ShaderParams.UNIFORM_NORMAL_MAT_NAME, model.normMat, Matrix3.equals );\n\n        this.preRender(); // set uniforms\n\n        this.gl.bindVertexArray( model.mesh.vao );\n\n        const bufferInfo = model.mesh.bufferInfo;\n        const instanceCount = model.instanceCount;\n        if ( bufferInfo.indices || bufferInfo.elementType )\n            if ( typeof instanceCount === 'number' )\n                this.gl.drawElementsInstanced( model.drawMode, bufferInfo.numElements, bufferInfo.elementType === undefined ? this.gl.UNSIGNED_SHORT : bufferInfo.elementType, model.offset, instanceCount );\n            else\n                this.gl.drawElements( model.drawMode, bufferInfo.numElements, bufferInfo.elementType === undefined ? this.gl.UNSIGNED_SHORT : bufferInfo.elementType, model.offset ); // eslint-disable-line\n        else\n        /* eslint-disable */ // eslint bug\n            if ( typeof instanceCount === 'number' )\n                this.gl.drawArraysInstanced( model.drawMode, model.offset, bufferInfo.numElements, instanceCount );\n            else\n                this.gl.drawArrays( model.drawMode, model.offset, bufferInfo.numElements );\n        /* eslint-enable */\n        this.gl.bindVertexArray( null );\n\n        return this;\n\n    },\n\n    setDefines( ...defines ) {\n\n        if ( defines.length > 0 ) {\n\n            let index = - 1;\n            const currentProgNum = this.programMap.length;\n            for ( let i = 0; i < currentProgNum; i ++ ) {\n\n                const defs = this.programMap[ i ];\n                let equals = false;\n\n                if ( defs.length === defines.length ) {\n\n                    equals = true;\n                    for ( let j = 0; j < defines.length; j ++ )\n                        if ( defs.indexOf( defines[ j ] ) < 0 ) {\n\n                            equals = false;\n                            break;\n\n                        }\n\n                }\n\n                if ( equals ) {\n\n                    index = i;\n                    break;\n\n                }\n\n            }\n\n            if ( index < 0 ) {\n\n                this.currentShaders = Shader.injectDefines( this.shaders, ...defines );\n                this.programs[ currentProgNum ] = createProgram( this.gl, ...this.currentShaders, this.opts );\n                this.program = this.programs[ currentProgNum ];\n                this.programMap[ currentProgNum ] = defines;\n                this.updateProgram( currentProgNum );\n                return this;\n\n            }\n\n            if ( this.program === this.programs[ index ] )\n                return this;\n\n            this.program = this.programs[ index ];\n            this.updateProgram( index );\n            return this;\n\n        }\n\n        if ( this.programMap.length > 0 ) {\n\n            if ( this.program === this.programs[ 0 ] )\n                return this;\n\n            this.program = this.programs[ 0 ];\n            this.updateProgram( 0 );\n            return this;\n\n        }\n\n        this.currentShaders = this.shaders;\n        this.programs[ 0 ] = createProgram( this.gl, ...this.shaders, this.opts );\n        this.program = this.programs[ 0 ];\n        this.programMap[ 0 ] = [];\n        this.updateProgram( 0 );\n        return this;\n\n    },\n\n    updateProgram( index = - 1 ) {\n\n        if ( index > - 1 && index < this.programInfos.length ) {\n\n            this.attribSetters = this.programInfos[ index ].attribSetters;\n            this.uniformSetters = this.programInfos[ index ].uniformSetters;\n            this.uniformBlockSpec = this.programInfos[ index ].uniformBlockSpec;\n            this.uniformBlockInfos = this.programInfos[ index ].uniformBlockInfos;\n            this.currentShaders = this.programInfos[ index ].shaders;\n            this._needMVPMat = this.programInfos[ index ]._needMVPMat;\n            this._needVPMat = this.programInfos[ index ]._needVPMat;\n            this._needCamPos = this.programInfos[ index ]._needCamPos;\n            this._needNormMat = this.programInfos[ index ]._needNormMat;\n            this._customAttrib = this.programInfos[ index ]._customAttrib;\n\n        } else {\n\n            this.gl.useProgram( this.program );\n            this.attribSetters = createAttributesSetters( this.gl, this.program );\n            this.uniformSetters = createUniformSetters( this.gl, this.program );\n            this.uniformBlockSpec = createUniformBlockSpec( this.gl, this.program );\n            this.uniformBlockInfos = createUniformBlockInfos( this.gl, this.program, this.uniformBlockSpec );\n            this._needMVPMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, ShaderParams.UNIFORM_MVP_MAT_NAME );\n            this._needVPMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, ShaderParams.UNIFORM_VP_MAT_NAME );\n            this._needCamPos = Object.prototype.hasOwnProperty.call( this.uniformSetters, ShaderParams.UNIFORM_CAMPOS );\n            this._needNormMat = Object.prototype.hasOwnProperty.call( this.uniformSetters, ShaderParams.UNIFORM_NORMAL_MAT_NAME );\n            this._customAttrib = Object.keys( this.attribSetters ).filter( attrib => [ ShaderParams.ATTRIB_POSITION_NAME, ShaderParams.ATTRIB_UV_NAME, ShaderParams.ATTRIB_NORMAL_NAME, ShaderParams.ATTRIB_BARYCENTRIC_NAME ].indexOf( attrib ) < 0 ).length > 0;\n            this.programInfos[ index ] = {\n                attribSetters: this.attribSetters,\n                uniformSetters: this.uniformSetters,\n                uniformBlockSpec: this.uniformBlockSpec,\n                uniformBlockInfos: this.uniformBlockInfos,\n                shaders: this.currentShaders,\n                _needMVPMat: this._needMVPMat,\n                _needVPMat: this._needVPMat,\n                _needCamPos: this._needCamPos,\n                _needNormMat: this._needNormMat,\n                _customAttrib: this._customAttrib,\n            };\n            this.uniformObjs[ index ] = Object.assign( {}, this.currentUniformObj );\n\n        }\n\n        Shader.currentProgram = null;\n        this._programUpdated = true;\n        this.currentUniformObj = this.uniformObjs[ index ];\n\n    },\n\n} );\n\nfunction insertToString( string, position, value ) {\n\n    return [ string.slice( 0, position ), value, string.slice( position ) ].join( '' );\n\n}\n\nObject.assign( Shader, {\n\n    currentProgram: null,\n    cullFace: true,\n    blend: false,\n    depth: true,\n    sampleBlend: false,\n\n    injectDefines( shader, ...defines ) {\n\n        if ( Array.isArray( shader ) )\n            return shader.map( shadersrc => Shader.injectDefines( shadersrc, ...defines ) );\n\n        const index = shader.indexOf( '\\n' ) + 1;\n        let newShader = shader;\n\n        let define;\n        for ( let i = 0; i < defines.length; i ++ ) {\n\n            define = `#define ${defines[ i ]}\\n`;\n            if ( shader.indexOf( define ) < 0 )\n                newShader = insertToString( newShader, index, define );\n\n        }\n\n        return newShader;\n\n    },\n\n    removeDefines( shader, ...defines ) {\n\n        let newShader = shader;\n\n        let define;\n        for ( let i = 0; i < defines.length; i ++ ) {\n\n            define = `#define ${defines[ i ]}\\n`;\n            if ( shader.indexOf( define ) > 0 )\n                newShader = newShader.replace( define, '' );\n\n        }\n\n        return newShader;\n\n    },\n\n} );\n\nexport { Shader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/commonVAO.vs.glsl';\nimport fs from './shadersrc/commonVAO.fs.glsl';\n\nfunction CommonVAOShader( gl ) {\n\n    Shader.call( this, gl, CommonVAOShader.vs, CommonVAOShader.fs );\n\n    this.deactivate();\n\n}\n\nCommonVAOShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: CommonVAOShader,\n\n} );\n\nObject.assign( CommonVAOShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { CommonVAOShader };\n","import { Transform } from './Transform';\nimport { createVertexArray } from '../renderer/vertexArray';\nimport { createBufferInfoFromArrays } from '../renderer/attributes';\nimport { CommonVAOShader } from '../shader/CommonVAOShader';\nimport { ShaderParams } from '../renderer/constant';\n\nconst getDefaultShader = ( function () {\n\n    let commonVAOShader;\n\n    return function getDefaultShader( gl ) { // eslint-disable-line\n\n        if ( ! commonVAOShader )\n            commonVAOShader = new CommonVAOShader( gl );\n\n        return commonVAOShader;\n\n    };\n\n}() );\n\nfunction Model( mesh ) {\n\n    this.mesh = mesh;\n    this.enablePick = true;\n    this.transform = new Transform();\n    this.node = null;\n    this._uniformObj = {};\n\n}\n\nObject.defineProperties( Model.prototype, {\n\n    isModel: {\n\n        get() {\n\n            return true;\n\n        },\n\n    },\n\n    name: {\n\n        get() {\n\n            return this._name || this.mesh.name;\n\n        },\n\n        set( value ) {\n\n            this._name = value;\n\n        },\n\n    },\n\n    normMat: {\n\n        get() {\n\n            return this.transform.normMat;\n\n        },\n\n    },\n\n    matrix: {\n\n        get() {\n\n            return this.transform.matrix.raw;\n\n        },\n\n    },\n\n    positionInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ];\n\n        },\n\n    },\n\n    uvInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ ShaderParams.ATTRIB_UV_NAME ];\n\n        },\n\n    },\n\n    normalInfo: {\n\n        get() {\n\n            return this.mesh.attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ];\n\n        },\n\n    },\n\n    uniformObj: {\n\n        get() {\n\n            return this._uniformObj;\n\n        },\n\n    },\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( array ) {\n\n            this.setPosition( array );\n\n        },\n    },\n\n    scale: {\n\n        get() {\n\n            return this.transform.scale;\n\n        },\n\n        set( array ) {\n\n            this.setScale( array );\n\n        },\n\n    },\n\n    rotation: {\n\n        get() {\n\n            return this.transform.rotation;\n\n        },\n\n        set( array ) {\n\n            this.setRotation( array );\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this.transform.quaternion;\n\n        },\n\n        set( arrayQuat ) {\n\n            this.setQuaternion( arrayQuat );\n\n        },\n\n    },\n\n    drawMode: {\n\n        get() {\n\n            if ( this._drawMode !== undefined )\n                return this._drawMode;\n            return this.mesh.drawMode;\n\n        },\n\n        set( v ) {\n\n            this._drawMode = v;\n\n        },\n\n    },\n\n    cullFace: {\n\n        get() {\n\n            if ( this._cullFace !== undefined )\n                return this._cullFace;\n            return this.mesh.cullFace;\n\n        },\n\n        set( v ) {\n\n            this._cullFace = v;\n\n        },\n\n    },\n\n    blend: {\n\n        get() {\n\n            if ( this._blend !== undefined )\n                return this._blend;\n            return this.mesh.blend;\n\n        },\n\n        set( v ) {\n\n            this._blend = v;\n\n        },\n\n    },\n\n    depth: {\n\n        get() {\n\n            if ( this._depth !== undefined )\n                return this._depth;\n            return this.mesh.depth;\n\n        },\n        set( v ) {\n\n            this._depth = v;\n\n        },\n\n    },\n\n    sampleBlend: {\n\n        get() {\n\n            if ( this._sampleBlend !== undefined )\n                return this._sampleBlend;\n            return this.mesh.sampleBlend;\n\n        },\n\n        set( v ) {\n\n            this._sampleBlend = v;\n\n        },\n\n    },\n\n    instanceCount: {\n\n        get() {\n\n            if ( this._instanceCount !== undefined )\n                return this._instanceCount;\n            return this.mesh.instanceCount;\n\n        },\n\n        set( v ) {\n\n            this._instanceCount = v;\n\n        },\n\n    },\n\n    offset: {\n\n        get() {\n\n            if ( this._offset !== undefined )\n                return this._offset;\n            return this.mesh.offset;\n\n        },\n\n        set( v ) {\n\n            this._offset = v;\n\n        },\n\n    },\n\n    updateVao: {\n\n        get() {\n\n            return this.mesh._updateVao;\n\n        },\n\n        set( v ) {\n\n            this.mesh._updateVao = !! v;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Model.prototype, {\n\n    setScale( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setScale( ...( args[ 0 ].scale ) );\n\n        this.transform.setScale( ...args );\n        return this;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setPosition( ...( args[ 0 ].position.getArray() ) );\n\n        this.transform.setPosition( ...args );\n        return this;\n\n    },\n\n    setRotation( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setRotation( ...( args[ 0 ].rotation.getArray() ) );\n\n        this.transform.setRotation( ...args );\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args[ 0 ] instanceof Transform )\n            return this.setQuaternion( ...( args[ 0 ].quaternion.getArray() ) );\n\n        this.transform.setQuaternion( ...args );\n        return this;\n\n    },\n\n    setTransform( transform ) {\n\n        this.transform = transform;\n        return this;\n\n    },\n\n    preRender( gl, shader = getDefaultShader( gl ) ) {\n\n        this.createBufferInfo( gl ).createVAO( gl, shader );\n        return this;\n\n    },\n\n    createVAO( gl, shader = getDefaultShader( gl ) ) {\n\n        if ( this.mesh._updateVao && this.mesh.vao ) {\n\n            gl.deleteVertexArray( this.mesh.vao );\n            this.mesh._updateVao = false;\n            this.mesh.vao = null;\n\n        }\n\n        if ( ! this.mesh.vao )\n            this.mesh.vao = createVertexArray( gl, this.mesh.bufferInfo, shader.program, shader.attribSetters );\n\n        return this;\n\n    },\n\n    createBufferInfo( gl ) {\n\n        if ( ! this.mesh.bufferInfo ) {\n\n            this.mesh.bufferInfo = createBufferInfoFromArrays( gl, this.mesh.attribArrays );\n            this.bufferInfo = this.mesh.bufferInfo;\n\n        }\n        return this;\n\n    },\n\n    setUniformObj( obj ) {\n\n        Object.assign( this._uniformObj, obj );\n        return this;\n\n    },\n\n} );\n\nexport { Model };\n","import { Vector3 } from './Vector3';\nimport { PMath } from './Math';\n\n// https://github.com/mourner/simplify-js/blob/3d/simplify.js\n\nfunction getSquareDistance( p1, p2 ) {\n\n    const dx = p1.x - p2.x;\n    const dy = p1.y - p2.y;\n    const dz = p1.z - p2.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n}\n\nfunction getSquareSegmentDistance( p, p1, p2 ) {\n\n    let x = p1.x;\n    let y = p1.y;\n    let z = p1.z;\n\n    let dx = p2.x - x;\n    let dy = p2.y - y;\n    let dz = p2.z - z;\n\n    if ( dx !== 0 || dy !== 0 || dz !== 0 ) {\n\n        const t = ( ( p.x - x ) * dx + ( p.y - y ) * dy + ( p.z - z ) * dz ) /\n                ( dx * dx + dy * dy + dz * dz );\n\n        if ( t > 1 ) {\n\n            x = p2.x;\n            y = p2.y;\n            z = p2.z;\n\n        } else if ( t > 0 ) {\n\n            x += dx * t;\n            y += dy * t;\n            z += dz * t;\n\n        }\n\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n    dz = p.z - z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n}\n\nfunction simplifyRadialDistance( points, sqTolerance ) {\n\n    let prevPoint = points[ 0 ];\n    const newPoints = [ prevPoint ];\n    let point;\n\n    for ( let i = 1, len = points.length; i < len; i ++ ) {\n\n        point = points[ i ];\n\n        if ( getSquareDistance( point, prevPoint ) > sqTolerance ) {\n\n            newPoints.push( point );\n            prevPoint = point;\n\n        }\n\n    }\n\n    if ( prevPoint !== point )\n        newPoints.push( point );\n\n\n    return newPoints;\n\n}\n\nfunction simplifyDouglasPeucker( points, sqTolerance ) {\n\n    const len = points.length;\n    const MarkerArray = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n    const markers = new MarkerArray( len );\n\n    let first = 0;\n    let last = len - 1;\n\n    const stack = [];\n    const newPoints = [];\n\n    let i;\n    let maxSqDist;\n    let sqDist;\n    let index;\n\n    markers[ first ] = markers[ last ] = 1; // eslint-disable-line\n\n    while ( last ) {\n\n        maxSqDist = 0;\n\n        for ( i = first + 1; i < last; i ++ ) {\n\n            sqDist = getSquareSegmentDistance( points[ i ], points[ first ], points[ last ] );\n\n            if ( sqDist > maxSqDist ) {\n\n                index = i;\n                maxSqDist = sqDist;\n\n            }\n\n        }\n\n        if ( maxSqDist > sqTolerance ) {\n\n            markers[ index ] = 1;\n            stack.push( first, index, index, last );\n\n        }\n\n        last = stack.pop();\n        first = stack.pop();\n\n    }\n\n    for ( i = 0; i < len; i ++ )\n        if ( markers[ i ] )\n            newPoints.push( points[ i ] );\n\n    return newPoints;\n\n}\n\nfunction simplify( points, tolerance, highestQuality ) {\n\n    const sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDistance( points, sqTolerance ); // eslint-disable-line\n    points = simplifyDouglasPeucker( points, sqTolerance ); // eslint-disable-line\n\n    return points;\n\n}\n\nconst BezierCurve = {\n\n    getPoint( p0, p1, p2, p3, t, out = new Vector3() ) {\n\n        t = PMath.clamp( t, 0, 1 ); // eslint-disable-line\n        const invt = 1 - t;\n\n        out.x = invt * invt * invt * p0.x + // eslint-disable-line\n                3 * invt * invt * t * p1.x +\n                3 * invt * t * t * p2.x +\n                t * t * t * p3.x;\n\n        out.y = invt * invt * invt * p0.y + // eslint-disable-line\n                3 * invt * invt * t * p1.y +\n                3 * invt * t * t * p2.y +\n                t * t * t * p3.y;\n\n        out.z = invt * invt * invt * p0.z + // eslint-disable-line\n                3 * invt * invt * t * p1.z +\n                3 * invt * t * t * p2.z +\n                t * t * t * p3.z;\n\n        return out;\n\n    },\n\n    getPoints( p0, p1, p2, p3, tolerance, numPoints = 100, highlyMinify = true ) {\n\n        const points = [];\n        for ( let i = 0; i < numPoints; i ++ ) {\n\n            const t = i / ( numPoints - 1 );\n            points.push( BezierCurve.getPoint( p0, p1, p2, p3, t ) );\n\n        }\n\n        return tolerance ? simplify( points, tolerance, highlyMinify ) : points;\n\n    },\n\n    simplify,\n\n};\n\nexport { BezierCurve };\n","import { ShaderParams, BeginMode } from '../renderer/constant';\nimport { Model } from '../model/Model';\nimport { getTypedArray } from '../renderer/typedArray';\nimport { getNumComponents } from '../renderer/attributes';\nimport { BezierCurve } from '../math/BezierCurve';\n\nfunction Mesh( name, attribArrays = {}, options ) {\n\n    Object.keys( attribArrays ).forEach( ( prop ) => {\n\n        if ( prop !== 'indices' ) {\n\n            attribArrays[ prop ].data = getTypedArray( attribArrays[ prop ].data ); //eslint-disable-line\n            attribArrays[ prop ].numComponents = getNumComponents( attribArrays[ prop ], prop );//eslint-disable-line\n\n        }\n\n\n    } );\n\n    Object.assign( this, {\n        name,\n        attribArrays,\n        _bufferInfo: null,\n        drawMode: BeginMode.TRIANGLES,\n        cullFace: true,\n        blend: false,\n        depth: true,\n        sampleBlend: false,\n        instanceCount: undefined,\n        offset: 0,\n    }, options );\n\n}\n\nObject.defineProperties( Mesh.prototype, {\n\n    isMesh: {\n\n        get() {\n\n            return true;\n\n        },\n\n    },\n\n    bufferInfo: {\n\n        get() {\n\n            return this._bufferInfo;\n\n        },\n\n        set( v ) {\n\n            this._bufferInfo = v;\n            this._updateVao = true;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Mesh.prototype, {\n\n    updateBufferInfo( obj ) {\n\n        if ( this._bufferInfo ) {\n\n            let updated = false;\n            Object.keys( this._bufferInfo ).forEach( ( key ) => {\n\n                if ( obj[ key ] ) {\n\n                    this._bufferInfo[ key ] = obj[ key ];\n                    updated = true;\n\n                }\n\n                if ( key === 'attribs' )\n                    Object.keys( this._bufferInfo.attribs ).forEach( ( attrib ) => {\n\n                        if ( obj[ attrib ] ) {\n\n                            this._bufferInfo.attribs[ attrib ] = obj[ attrib ];\n                            updated = true;\n\n                        }\n\n                    } );\n\n\n            } );\n\n            if ( updated ) this._updateVao = true;\n\n        }\n\n    },\n\n} );\n\nconst GridAxis = {};\n\nObject.assign( GridAxis, {\n\n    createModel( name, size, div ) {\n\n        return new Model( GridAxis.createMesh( name, size, div ) );\n\n    },\n\n    createMesh( name = 'GridAxis', size = 10, div = 20 ) {\n\n        const vertices = [];\n        const color = [];\n        const step = size / div;\n        const half = size / 2;\n\n        let p;\n        for ( let i = 0; i <= div; i ++ ) {\n\n            p = - half + ( i * step );\n            vertices.push( p );\n            vertices.push( 0 );\n            vertices.push( half );\n            color.push( 0 );\n\n            vertices.push( p );\n            vertices.push( 0 );\n            vertices.push( - half );\n            color.push( 0 );\n\n            vertices.push( - half );\n            vertices.push( 0 );\n            vertices.push( p );\n            color.push( 0 );\n\n            vertices.push( half );\n            vertices.push( 0 );\n            vertices.push( p );\n            color.push( 0 );\n\n        }\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 1 );\n\n        vertices.push( half );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 1 );\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 2 );\n\n        vertices.push( 0 );\n        vertices.push( half );\n        vertices.push( 0 );\n        color.push( 2 );\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( 0 );\n        color.push( 3 );\n\n        vertices.push( 0 );\n        vertices.push( 0 );\n        vertices.push( half );\n        color.push( 3 );\n\n        const attribArrays = {\n            a_color: { data: color, numComponents: 1 },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices };\n\n        return new Mesh( name, attribArrays, { drawMode: BeginMode.LINES } );\n\n    },\n\n} );\n\nconst Quad = {};\n\nObject.assign( Quad, {\n\n    createModel( name, size, x, y ) {\n\n        return new Model( Quad.createMesh( name, size, x, y ) );\n\n    },\n\n    createMesh( name = 'Quad', size, x, y ) {\n\n        const attribArrays = Quad.createVertices( size, x, y );\n        return new Mesh( name, attribArrays, {\n            cullFace: false,\n        } );\n\n    },\n\n    createVertices( size = 1, x = 0, y = 0 ) {\n\n        const helfSize = size / 2;\n        const vertices = [\n            x + - 1 * helfSize, y + 1 * helfSize,\n            x + - 1 * helfSize, y + - 1 * helfSize,\n            x + 1 * helfSize, y + - 1 * helfSize,\n            x + 1 * helfSize, y + 1 * helfSize,\n        ];\n        const uv = [ 0, 0, 0, 1, 1, 1, 1, 0 ];\n        const normal = [\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n        ];\n        const indices = [ 0, 1, 3, 1, 2, 3 ];\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices, numComponents: 2 };\n        attribArrays[ ShaderParams.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ] = { data: normal };\n\n        return attribArrays;\n\n    },\n\n} );\n\nconst Cube = {};\n\nObject.assign( Cube, {\n\n    createModel( name, width, height, depth, x, y, z ) {\n\n        return new Model( Cube.createMesh( name, width, height, depth, x, y, z ) );\n\n    },\n\n    createMesh( name = 'Cube', width, height, depth, x, y, z ) {\n\n        const attribArrays = Cube.createVertices( width, height, depth, x, y, z );\n        return new Mesh( name, attribArrays, { cullFace: false } );\n\n    },\n\n    createVertices( width = 1, height = 1, depth = 1, x = 0, y = 0, z = 0 ) {\n\n        const w = width * 0.5;\n        const h = height * 0.5;\n        const d = depth * 0.5;\n\n        const x0 = x - w;\n        const x1 = x + w;\n        const y0 = y - h;\n        const y1 = y + h;\n        const z0 = z - d;\n        const z1 = z + d;\n\n        const vertices = [\n            x0, y1, z1, 0, // 0 Front\n            x0, y0, z1, 0, // 1\n            x1, y0, z1, 0, // 2\n            x1, y1, z1, 0, // 3\n\n            x1, y1, z0, 1, // 4 Back\n            x1, y0, z0, 1, // 5\n            x0, y0, z0, 1, // 6\n            x0, y1, z0, 1, // 7\n\n            x0, y1, z0, 2, // 7 Left\n            x0, y0, z0, 2, // 6\n            x0, y0, z1, 2, // 1\n            x0, y1, z1, 2, // 0\n\n            x0, y0, z1, 3, // 1 Bottom\n            x0, y0, z0, 3, // 6\n            x1, y0, z0, 3, // 5\n            x1, y0, z1, 3, // 2\n\n            x1, y1, z1, 4, // 3 Right\n            x1, y0, z1, 4, // 2\n            x1, y0, z0, 4, // 5\n            x1, y1, z0, 4, // 4\n\n            x0, y1, z0, 5, // 7 Top\n            x0, y1, z1, 5, // 0\n            x1, y1, z1, 5, // 3\n            x1, y1, z0, 5, // 4\n        ];\n\n        const indices = [];\n        for ( let i = 0; i < vertices.length / 4; i += 4 )\n            indices.push( i, i + 1, i + 3, i + 1, i + 2, i + 3 );\n\n        const uv = [];\n        for ( let i = 0; i < 6; i ++ )\n            uv.push( 0, 0, 0, 1, 1, 1, 1, 0 );\n\n        const normal = [\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, // Front\n            0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, // Back\n            - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, // Left\n            0, - 1, 0, 0, - 1, 0, 0, - 1, 0, 0, - 1, 0, // Bottom\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // Right\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // Top\n        ];\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices, numComponents: 4 };\n        attribArrays[ ShaderParams.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ] = { data: normal };\n\n        return attribArrays;\n\n    },\n\n} );\n\nconst Sphere = {};\n\nObject.assign( Sphere, {\n\n    createModel( name, radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) {\n\n        return new Model( Sphere.createMesh( name, radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) );\n\n    },\n\n    createMesh( name = 'sphere', radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat ) {\n\n        const attribArrays = Sphere.createVertices( radius, subdivAixs, subdivHeight, startLon, endLon, startLat, endLat );\n        return new Mesh( name, attribArrays );\n\n    },\n\n    createVertices( radius = 0.5, subdivAixs = 16, subdivHeight = 8, startLon = 0, endLon = Math.PI * 2, startLat = 0, endLat = Math.PI ) {\n\n        const latRange = endLat - startLat;\n        const lonRange = endLon - startLon;\n\n        const positions = [];\n        const normals = [];\n        const uvs = [];\n\n        for ( let y = 0; y <= subdivHeight; y ++ )\n            for ( let x = 0; x <= subdivAixs; x ++ ) {\n\n                const u = x / subdivAixs;\n                const v = y / subdivHeight;\n                const phi = lonRange * u + startLon;\n                const theta = latRange * v + startLat;\n                const sinTheta = Math.sin( theta );\n                const cosTheta = Math.cos( theta );\n                const sinPhi = Math.sin( phi );\n                const cosPhi = Math.cos( phi );\n                const ux = - cosPhi * sinTheta;\n                const uy = cosTheta;\n                const uz = sinPhi * sinTheta;\n                positions.push( radius * ux, radius * uy, radius * uz );\n                normals.push( ux, uy, uz );\n                uvs.push( u, 1 - v );\n\n            }\n\n        const numVertAround = subdivAixs + 1;\n        const indices = [];\n        for ( let x = 0; x < subdivAixs; x ++ )\n            for ( let y = 0; y < subdivHeight; y ++ ) {\n\n                const a = ( y + 0 ) * numVertAround + x + 1;\n                const b = ( y + 0 ) * numVertAround + x;\n                const c = ( y + 1 ) * numVertAround + x;\n                const d = ( y + 1 ) * numVertAround + x + 1;\n\n                if ( y !== 0 || startLat > 0 ) indices.push( a, b, d );\n                if ( y !== subdivHeight - 1 || endLat < Math.PI ) indices.push( b, c, d );\n\n            }\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: positions };\n        attribArrays[ ShaderParams.ATTRIB_UV_NAME ] = { data: uvs };\n        attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ] = { data: normals };\n\n        return attribArrays;\n\n    },\n\n} );\n\nfunction deIndexAttribs( modelMesh ) {\n\n    const mesh = modelMesh.mesh || modelMesh;\n    const attribArrays = mesh.attribArrays;\n    const indices = attribArrays.indices.data;\n    const drawMode = mesh.drawMode;\n    if ( ! indices ) return;\n\n    if ( drawMode === BeginMode.TRIANGLES ) {\n\n        Object.keys( attribArrays ).forEach( ( name ) => {\n\n            if ( name === 'indices' ) return;\n\n            const data = attribArrays[ name ].data;\n            const numComponents = attribArrays[ name ].numComponents;\n            const tempAry = [];\n            for ( let i = 0; i < indices.length; i ++ )\n                for ( let j = 0; j < numComponents; j ++ )\n                    tempAry.push( data[ indices[ i ] * numComponents + j ] );\n\n            attribArrays[ name ].data = tempAry;\n\n        } );\n\n        delete attribArrays.indices;\n        delete mesh.bufferInfo;\n        delete mesh.vao;\n\n    }\n\n}\n\nfunction addBarycentricAttrib( modelMesh, removeEdge = false ) {\n\n    const mesh = modelMesh.mesh || modelMesh;\n    const indices = mesh.attribArrays.indices.data;\n    const Q = removeEdge ? 1 : 0;\n\n    if ( mesh.drawMode === BeginMode.TRIANGLES ) {\n\n        if ( mesh.attribArrays.indices )\n            deIndexAttribs( modelMesh );\n\n        const numVert = mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data.length / mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].numComponents;\n        const barycentrics = [];\n        let lastVerts = [];\n        let curVerts = [];\n        let map = [];\n        for ( let i = 0; i < numVert / 3; i ++ ) {\n\n            curVerts = [ indices[ i * 3 + 0 ], indices[ i * 3 + 1 ], indices[ i * 3 + 2 ] ];\n            map = curVerts.map( vert => lastVerts.indexOf( vert ) ); // eslint-disable-line\n            if ( map[ 0 ] === 1 && map[ 2 ] === 2 ) { // abd bcd\n\n                barycentrics.push(\n                    0, 1, 0,\n                    0, 0, 1,\n                    1, 0, Q,\n                );\n                lastVerts = [];\n\n            } else {\n\n                barycentrics.push(\n                    0, 0, 1,\n                    0, 1, 0,\n                    1, 0, Q,\n                );\n                lastVerts = curVerts;\n\n            }\n\n\n        }\n\n        mesh.attribArrays[ ShaderParams.ATTRIB_BARYCENTRIC_NAME ] = { data: barycentrics, numComponents: 3 };\n\n        delete mesh.bufferInfo;\n        delete mesh.vao;\n\n    }\n\n}\n\nconst Curve = {\n\n    createModel( name, points, tolerence, numPoints, highlyMinify ) {\n\n        return new Model( Curve.createMesh( name, points, tolerence, numPoints, highlyMinify ) );\n\n    },\n\n    createMesh( name = 'curve', points, tolerence, numPoints, highlyMinify ) {\n\n        let bpoints = [];\n        for ( let i = 0; i < Math.floor( ( points.length - 1 ) / 3 ); i ++ ) {\n\n            bpoints.pop();\n            bpoints = bpoints.concat( BezierCurve.getPoints( points[ i * 3 + 0 ], points[ i * 3 + 1 ], points[ i * 3 + 2 ], points[ i * 3 + 3 ], tolerence, numPoints, highlyMinify ) );\n\n        }\n        bpoints = bpoints.map( vec3 => vec3.getArray() );\n        const vertices = bpoints.reduce( ( a, b ) => a.concat( b ) );\n\n        const attribArrays = {};\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices };\n\n        return new Mesh( name, attribArrays, { drawMode: BeginMode.LINE_STRIP } );\n\n    },\n\n};\n\nexport { Mesh, GridAxis, Quad, Cube, Sphere, deIndexAttribs, addBarycentricAttrib, Curve };\n","function Render( callback, fps ) {\n\n    const self = this;\n    this.lastTime = null;\n    this.callback = callback;\n    this.isActive = false;\n    this.fps = 0;\n\n    if ( typeof ( fps ) === 'number' && fps > 0 ) {\n\n        this.frameTimeLimit = 1 / fps;\n\n        this.run = function () {\n\n            const currentTime = performance.now();\n            const timespan = ( currentTime - self.lastTime ) / 1000;\n\n            if ( timespan >= self.frameTimeLimit ) {\n\n                self.fps = Math.floor( 1 / timespan );\n                self.lastTime = currentTime;\n                self.callback( timespan );\n\n            }\n\n            if ( self.isActive ) window.requestAnimationFrame( self.run );\n\n        };\n\n    } else\n\n        this.run = function () {\n\n            const currentTime = performance.now();\n            const timespan = ( currentTime - self.lastTime ) / 1000;\n\n            self.fps = Math.floor( 1 / timespan );\n            self.lastTime = currentTime;\n\n            self.callback( timespan );\n            if ( self.isActive ) window.requestAnimationFrame( self.run );\n\n        };\n\n}\n\nObject.assign( Render.prototype, {\n\n    start() {\n\n        this.isActive = true;\n        this.lastTime = performance.now();\n        window.requestAnimationFrame( this.run );\n        return this;\n\n    },\n\n    stop() {\n\n        this.isActive = false;\n\n    },\n\n} );\n\nexport { Render };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/gridaxis.vs.glsl';\nimport fs from './shadersrc/gridaxis.fs.glsl';\n\nfunction GridAxisShader( gl ) {\n\n    Shader.call( this, gl, GridAxisShader.vs, GridAxisShader.fs );\n\n    this.setUniformObj( { u_colors: [ 0.5, 0.5, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1 ] } );\n\n    this.deactivate();\n\n}\n\nGridAxisShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n    constructor: GridAxisShader,\n} );\n\nObject.assign( GridAxisShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { GridAxisShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/singleTexture.vs.glsl';\nimport fs from './shadersrc/singleTexture.fs.glsl';\n\nfunction FlatTextureShader( gl, texture ) {\n\n    Shader.call( this, gl, FlatTextureShader.vs, FlatTextureShader.fs );\n\n    this.setUniformObj( { u_texture: texture } );\n\n    this.deactivate();\n\n}\n\nFlatTextureShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: FlatTextureShader,\n\n} );\n\nObject.assign( FlatTextureShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { FlatTextureShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/skybox.vs.glsl';\nimport fs from './shadersrc/skybox.fs.glsl';\n\nfunction DynamicSkyboxShader( gl, dayTex, nightTex = dayTex, rate = 0.5 ) {\n\n    Shader.call( this, gl, DynamicSkyboxShader.vs, DynamicSkyboxShader.fs );\n\n    this.setUniformObj( { u_dayTex: dayTex, u_nightTex: nightTex, u_rate: rate } );\n\n    this.deactivate();\n\n}\n\nDynamicSkyboxShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: DynamicSkyboxShader,\n\n    setRate( r ) {\n\n        this.setUniformObj( { u_rate: r } );\n        return this;\n\n    },\n\n    setTexture( dayTex, nightTex = dayTex ) {\n\n        this.setUniformObj( { u_dayTex: dayTex, u_nightTex: nightTex } );\n        return this;\n\n    },\n\n    updateCamera() {\n\n        this.setProjMatrix( this.camera.projMat );\n        this.setViewMatrix( this.camera.getOrientMatrix() );\n        return this;\n\n    },\n\n} );\n\nObject.assign( DynamicSkyboxShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { DynamicSkyboxShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/phongLightSimple.vs.glsl';\nimport fs from './shadersrc/phongLightSimple.fs.glsl';\n\nfunction PointlightShader( gl ) {\n\n    Shader.call( this, gl, PointlightShader.vs, PointlightShader.fs );\n\n    this.setUniformObj( {\n        position: [ 10, 10, 10 ],\n        color: [ 1.0, 1.0, 1.0 ],\n        ambientColor: [ 0.07, 0.07, 0.07 ],\n        shiness: 20.0,\n        diffuseFactor: 0.3,\n        specularFactor: 0.1,\n        isFlat: false,\n        isBlinn: true,\n        isGamma: true,\n    } );\n\n    this.deactivate();\n\n}\n\nPointlightShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: PointlightShader,\n\n} );\n\nObject.assign( PointlightShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { PointlightShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorPoint.vs.glsl';\nimport fs from './shadersrc/colorPoint.fs.glsl';\n\nfunction ColorPointShader( gl, pointSize = 5.0, color = [ 255 / 255, 105 / 255, 180 / 255, 125 / 255 ] ) {\n\n    Shader.call( this, gl, ColorPointShader.vs, ColorPointShader.fs );\n\n    this.setPointSize( pointSize );\n\n    this.setColor( color );\n\n    this.deactivate();\n\n}\n\nColorPointShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorPointShader,\n\n    setColor( color ) {\n\n        this.setUniformObj( { u_color: color } );\n\n        if ( color[ 3 ] !== 1 )\n            this.blend = true;\n        else\n            this.blend = false;\n\n        return this;\n\n    },\n\n    setPointSize( size ) {\n\n        this.setUniformObj( { u_pSize: size } );\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorPointShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorPointShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/phongLight.vs.glsl';\nimport fs from './shadersrc/phongLight.fs.glsl';\n\nfunction PhongLightShader( gl ) {\n\n    Shader.call( this, gl, PhongLightShader.vs, PhongLightShader.fs );\n\n    this.setUniformObj( {\n        position: [ 10, 10, 10 ],\n        color: [ 1.0, 1.0, 1.0 ],\n        ambientColor: [ 0.15, 0.15, 0.15 ],\n        falloff: 0.15,\n        radius: 5.0,\n        shiness: 20.0,\n        specularFactor: 0.1,\n        roughness: 0.5,\n        albedo: 0.85,\n        isFlat: false,\n        isGamma: true,\n    } );\n\n    this.deactivate();\n\n}\n\nPhongLightShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: PhongLightShader,\n\n} );\n\nObject.assign( PhongLightShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { PhongLightShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorpick.vs.glsl';\nimport fs from './shadersrc/colorpick.fs.glsl';\n\nfunction ColorpickShader( gl ) {\n\n    Shader.call( this, gl, ColorpickShader.vs, ColorpickShader.fs );\n\n    this.setColor( [ 0.0, 0.0, 0.0 ] );\n\n    this.deactivate();\n\n}\n\nColorpickShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorpickShader,\n\n    setColor( color ) {\n\n        this.setUniformObj( { u_color: color } );\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorpickShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorpickShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/wireframe.vs.glsl';\nimport fs from './shadersrc/wireframe.fs.glsl';\n\nfunction WireframeShader( gl ) {\n\n    Shader.call( this, gl, WireframeShader.vs, WireframeShader.fs );\n    this.sampleBlend = true;\n    this.setUniformObj( {\n        thickness: 0.5,\n        screenWidth: true,\n        stroke: [ 0 / 255, 157 / 255, 118 / 255, 1.0 ],\n        fill: [ 255 / 255, 147 / 255, 172 / 255, 0.0 ],\n        backStroke: [ 0 / 255, 88 / 255, 83 / 255, 1.0 ],\n        feather: 1.0,\n        colorBack: false,\n        noiseSmall: false,\n        noiseBig: false,\n        squeeze: false,\n        squeezeEndpoint: 0.5,\n        squeezeMiddle: 1.0,\n        dash: false,\n        dashRepeats: 10,\n        dashLength: 0.5,\n        dashOverlap: true,\n        dashAnimate: false,\n        dualStroke: false,\n        secondThickness: 0.2,\n    } );\n    this.deactivate();\n\n}\n\nWireframeShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: WireframeShader,\n\n    preRender() {\n\n        if ( this.currentUniformObj.stroke[ 3 ] < 1.0 || this.currentUniformObj.fill[ 3 ] < 1.0 ) {\n\n            this.sampleBlend = true;\n            this.cullFace = false;\n\n        } else {\n\n            this.sampleBlend = false;\n            this.cullFace = true;\n\n        }\n\n        Shader.prototype.preRender.call( this );\n\n    },\n\n} );\n\nObject.assign( WireframeShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { WireframeShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/meshline.vs.glsl';\nimport fs from './shadersrc/meshline.fs.glsl';\n\nfunction MeshLineShader( gl ) {\n\n    Shader.call( this, gl, MeshLineShader.vs, MeshLineShader.fs );\n\n    this.setUniformObj( {\n        linewidth: 1.0,\n        color: [ 255 / 255, 105 / 255, 180 / 255, 255 / 255 ],\n        screenSize: true,\n        tile: 0.3,\n    } );\n\n    this.blend = true;\n    this.depth = false;\n\n    this.deactivate();\n\n}\n\nMeshLineShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: MeshLineShader,\n\n    preRender() {\n\n        this.setUniformObj( {\n            resolution: [ this.gl.drawingBufferWidth, this.gl.drawingBufferHeight ],\n            near: this.camera.near,\n            far: this.camera.far,\n        } );\n\n        Shader.prototype.preRender.call( this );\n\n    },\n\n} );\n\nObject.assign( MeshLineShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { MeshLineShader };\n","import { Shader } from './Shader';\nimport { createTransformFeedbackInfo, createTransformFeedback } from '../renderer/program';\nimport { createBufferInfoFromArrays } from '../renderer/attributes';\n\nfunction TransformShader( gl, vs, fs, transformFeedbackVaryings, transformFeedbackMode ) {\n\n    Shader.call( this, gl, vs, fs, { transformFeedbackVaryings, transformFeedbackMode } );\n\n    this.transformfeedbackInfo = createTransformFeedbackInfo( gl, this.program );\n    this._customAttrib = true;\n    this.deactivate();\n\n}\n\nTransformShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: TransformShader,\n\n    createBufferInfo( attribArrays ) {\n\n        Object.keys( attribArrays ).forEach( ( prop ) => {\n\n            const options = attribArrays[ prop ];\n            if ( typeof options === 'number' )\n                attribArrays[ prop ] = { data: options, drawType: this.gl.STREAM_COPY }; // eslint-disable-line\n            else if ( typeof options.drawType === 'undefined' )\n                attribArrays[ prop ].drawType = this.gl.STREAM_COPY; // eslint-disable-line\n\n        } );\n        return createBufferInfoFromArrays( this.gl, attribArrays );\n\n    },\n\n    createTransformFeedback( bufferInfo ) {\n\n        return createTransformFeedback( this.gl, this.program, this.transformfeedbackInfo, bufferInfo );\n\n    },\n\n    transform( transformFeedback, model ) {\n\n        this.gl.enable( this.gl.RASTERIZER_DISCARD );\n\n        this.activate();\n        this.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, transformFeedback );\n        this.gl.beginTransformFeedback( model.mesh.drawMode );\n        Shader.prototype.renderModel.call( this, model );\n        this.gl.endTransformFeedback();\n        this.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, null );\n\n        this.gl.disable( this.gl.RASTERIZER_DISCARD );\n\n        return this;\n\n    },\n\n} );\n\nexport { TransformShader };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/gltf.vs.glsl';\nimport fs from './shadersrc/gltf.fs.glsl';\nimport { PMath } from '../math/Math';\n\nfunction GLTFShader( gl ) {\n\n    Shader.call( this, gl, GLTFShader.vs, GLTFShader.fs, { validateProgram: false } );\n\n    this.deactivate();\n    this._maxVertexAttribs = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n}\n\nfunction getMorphTargetDefine( num ) {\n\n    return `MORPH_TARGET_NUM ${num}`;\n\n}\nconst MorphTargetNumPrefix = 'MORPH_TARGET_NUM ';\nconst HasMorphPositionDefine = 'HAS_MORPH_POSITION';\nconst HasMorphNormalDefine = 'HAS_MORPH_NORMAL';\nconst HasMorphTangentDefine = 'HAS_MORPH_TANGENT';\nconst MORPH_POSITION_PREFIX = 'a_morphPositions_';\nconst MORPH_NORMAL_PREFIX = 'a_morphNromals_';\nconst MORPH_TANGENT_PREFIX = 'a_morphTangents_';\nconst MORPH_WEIGHT_UNIFORM = 'u_morphWeights';\n\nGLTFShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: GLTFShader,\n\n    makeSafe( model ) {\n\n        if ( ! model.makeSafeGLTF ) {\n\n            const attribs = Object.keys( model.mesh.attribArrays );\n            if ( attribs.length > this._maxVertexAttribs ) {\n\n                const attribNum = attribs.length;\n                const defines = model.defines;\n                const morphInfo = {};\n                let morphAttribCount = 0;\n                if ( defines.indexOf( HasMorphPositionDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphPosition = true;\n\n                }\n                if ( defines.indexOf( HasMorphNormalDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphNormal = true;\n\n                }\n                if ( defines.indexOf( HasMorphTangentDefine ) > - 1 ) {\n\n                    morphAttribCount ++;\n                    morphInfo.morphTangent = true;\n\n                }\n\n                const morphDefine = ( defines.filter( define => define.startsWith( MorphTargetNumPrefix ) ) )[ 0 ];\n                defines.splice( defines.indexOf( morphDefine ), 1 );\n                const originCount = Number( morphDefine.slice( MorphTargetNumPrefix.length ) );\n\n                let morphCount = originCount;\n                let activerAttribNum = attribNum;\n                while ( activerAttribNum > this._maxVertexAttribs ) {\n\n                    morphCount --;\n                    activerAttribNum -= morphAttribCount;\n\n                }\n\n                if ( morphCount > 0 ) {\n\n                    defines.push( getMorphTargetDefine( morphCount ) );\n                    morphInfo.morphTargetNum = morphCount;\n                    morphInfo.originCount = originCount;\n\n                    morphInfo.originPositionArrays = [];\n                    morphInfo.originNormalArrays = [];\n                    morphInfo.originTangentArrays = [];\n                    for ( let i = 0; i < originCount; i ++ ) {\n\n                        if ( morphInfo.morphPosition )\n                            morphInfo.originPositionArrays.push( model.mesh.attribArrays[ MORPH_POSITION_PREFIX + i ] );\n                        if ( morphInfo.morphNormal )\n                            morphInfo.originNormalArrays.push( model.mesh.attribArrays[ MORPH_NORMAL_PREFIX + i ] );\n                        if ( morphInfo.morphTangent )\n                            morphInfo.originTangentArrays.push( model.mesh.attribArrays[ MORPH_TANGENT_PREFIX + i ] );\n\n                    }\n                    if ( morphInfo.originPositionArrays.length < 1 ) delete morphInfo.originPositionArrays;\n                    if ( morphInfo.originNormalArrays.length < 1 ) delete morphInfo.originNormalArrays;\n                    if ( morphInfo.originTangentArrays.length < 1 ) delete morphInfo.originTangentArrays;\n\n                    if ( ! model.bufferInfo ) model.createBufferInfo( this.gl );\n\n                    morphInfo.originPositionBufferInfo = [];\n                    morphInfo.originNormalBufferInfo = [];\n                    morphInfo.originTangentBufferInfo = [];\n                    const bufferInfo = model.mesh.bufferInfo.attribs;\n                    for ( let i = 0; i < morphInfo.originCount; i ++ ) {\n\n                        if ( morphInfo.morphPosition )\n                            morphInfo.originPositionBufferInfo.push( bufferInfo[ MORPH_POSITION_PREFIX + i ] );\n                        if ( morphInfo.morphNormal )\n                            morphInfo.originNormalBufferInfo.push( bufferInfo[ MORPH_NORMAL_PREFIX + i ] );\n                        if ( morphInfo.morphTangent )\n                            morphInfo.originTangentBufferInfo.push( bufferInfo[ MORPH_TANGENT_PREFIX + i ] );\n\n                    }\n                    if ( morphInfo.originPositionBufferInfo.length < 1 ) delete morphInfo.originPositionBufferInfo;\n                    if ( morphInfo.originNormalBufferInfo.length < 1 ) delete morphInfo.originNormalBufferInfo;\n                    if ( morphInfo.originTangentBufferInfo.length < 1 ) delete morphInfo.originTangentBufferInfo;\n\n\n                    model.morphInfo = morphInfo; // eslint-disable-line\n\n                }\n\n                console.warn( `model '${model.name}' use ${morphCount} morph targets instead of origin's ${originCount} morph targets, so animate maybe get strange behaver.` );\n\n            }\n\n            model.makeSafeGLTF = true; // eslint-disable-line\n\n        }\n\n        return this;\n\n    },\n\n    resortMorph: ( function () {\n\n        function compareWeight( a, b ) {\n\n            return b.weight - a.weight;\n\n        }\n\n        function compareNum( a, b ) {\n\n            return b - a;\n\n        }\n\n        return function resortMorph( model ) {\n\n            if ( model.morphInfo ) {\n\n                const morphInfo = model.morphInfo;\n                const bufferInfo = {};\n                const {\n                    lastWeight, morphTargetNum, originPositionBufferInfo, originNormalBufferInfo, originTangentBufferInfo,\n                } = morphInfo;\n                const currentWeight = model.uniformObj[ MORPH_WEIGHT_UNIFORM ];\n\n                if ( ! lastWeight || ! PMath.arrayEquals( currentWeight, lastWeight ) ) {\n\n                    morphInfo.lastWeight = currentWeight.slice();\n                    const newWeights = currentWeight.slice().sort( compareNum );\n                    const uniformObj = {};\n                    uniformObj[ MORPH_WEIGHT_UNIFORM ] = newWeights;\n                    model.setUniformObj( uniformObj );\n\n                    const weights = [];\n                    for ( let i = 0; i < currentWeight.length; i ++ ) // in case weight equals\n                        weights[ i ] = { weight: currentWeight[ i ] };\n                    const sort = weights.slice().sort( compareWeight );\n                    const origin = sort.map( w => weights.indexOf( w ) );\n                    for ( let i = 0; i < morphTargetNum; i ++ ) {\n\n                        if ( originPositionBufferInfo )\n                            bufferInfo[ MORPH_POSITION_PREFIX + i ] = originPositionBufferInfo[ origin[ i ] ];\n                        if ( originNormalBufferInfo )\n                            bufferInfo[ MORPH_NORMAL_PREFIX + i ] = originNormalBufferInfo[ origin[ i ] ];\n                        if ( originTangentBufferInfo )\n                            bufferInfo[ MORPH_TANGENT_PREFIX + i ] = originTangentBufferInfo[ origin[ i ] ];\n\n                    }\n                    model.mesh.updateBufferInfo( bufferInfo );\n\n                }\n\n            }\n\n            return this;\n\n        };\n\n    }() ),\n\n    renderModel( model ) {\n\n        if ( model.defines ) this.makeSafe( model ).resortMorph( model ).setDefines( ...model.defines );\n        return Shader.prototype.renderModel.call( this, model );\n\n    },\n\n} );\n\nObject.assign( GLTFShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { GLTFShader };\n","import { Model } from './Model';\nimport { Mesh } from './Primatives';\nimport { ShaderParams } from '../renderer/constant';\nimport { createBufferFromArray } from '../renderer/attributes';\n\nfunction MeshLineModel( meshModel, widthCallback, name ) {\n\n    const mesh = meshModel.mesh || meshModel;\n    let array;\n    if ( mesh && mesh.attribArrays && mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] ) {\n\n        if ( mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].numComponents !== 3 ) {\n\n            console.error( `MeshLine need 3 dimensions points array, but received ${mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].numComponents} dimensions array.` );\n            return null;\n\n        }\n        array = mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data;\n\n    } else if ( Array.isArray( mesh ) ) {\n\n        if ( mesh.length % 3 !== 0 ) {\n\n            console.error( 'MeshLine need 3 dimensions points array, but received array\\'s length divided by 3 not 0.' );\n            return null;\n\n        }\n        array = mesh;\n\n    } else {\n\n        console.error( `MeshLine need 3 dimensions points array, but received Object ${meshModel}` );\n        return null;\n\n    }\n\n    this.widthCallback = widthCallback;\n    const meshc = this.process( array, name || ( mesh.name && `${mesh.name}_Meshline` ) || 'MeshLine' );\n\n    Model.call( this, meshc );\n\n}\n\nMeshLineModel.prototype = Object.assign( Object.create( Model.prototype ), {\n\n    constructor: MeshLineModel,\n\n    comparePos( idx1, idx2 ) {\n\n        const ai = idx1 * 6;\n        const bi = idx2 * 6;\n        return ( this.positions[ ai ] === this.positions[ bi ] && this.positions[ ai + 1 ] === this.positions[ bi + 1 ] && this.positions[ ai + 2 ] === this.positions[ bi + 2 ] );\n\n    },\n\n    copyPos( idx ) {\n\n        const ai = idx * 6;\n        return [ this.positions[ ai ], this.positions[ ai + 1 ], this.positions[ ai + 2 ] ];\n\n    },\n\n    process( array, name ) {\n\n        this.positions = [];\n        this.conters = [];\n\n        for ( let i = 0; i < array.length; i += 3 ) {\n\n            const c = i / ( array.length - 3 );\n            this.positions.push( array[ i ], array[ i + 1 ], array[ i + 2 ] );\n            this.positions.push( array[ i ], array[ i + 1 ], array[ i + 2 ] );\n            this.conters.push( c );\n            this.conters.push( c );\n\n        }\n\n        const l = this.positions.length / 6;\n\n        this.previous = [];\n        this.next = [];\n        this.side = [];\n        this.width = [];\n        this.indices = [];\n        this.uv = [];\n\n        for ( let i = 0; i < l; i ++ ) {\n\n            this.side.push( 1 );\n            this.side.push( - 1 );\n\n        }\n\n        let w;\n        for ( let i = 0; i < l; i ++ ) {\n\n            if ( this.widthCallback ) w = this.widthCallback( i / l - 1 );\n            else w = 1;\n            this.width.push( w );\n            this.width.push( w );\n\n        }\n\n        for ( let i = 0; i < l; i ++ ) {\n\n            this.uv.push( i / ( l - 1 ), 0 );\n            this.uv.push( i / ( l - 1 ), 1 );\n\n        }\n\n        let v;\n        if ( this.comparePos( 0, l - 1 ) )\n            v = this.copyPos( l - 2 );\n        else\n            v = this.copyPos( 0 );\n\n        this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n        this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        for ( let i = 0; i < l - 1; i ++ ) {\n\n            v = this.copyPos( i );\n            this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n            this.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        }\n\n        for ( let i = 1; i < l; i ++ ) {\n\n            v = this.copyPos( i );\n            this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n            this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        }\n\n        if ( this.comparePos( l - 1, 0 ) )\n            v = this.copyPos( 1 );\n        else\n            v = this.copyPos( l - 1 );\n\n        this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n        this.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n        for ( let i = 0; i < l - 1; i ++ ) {\n\n            const n = i * 2;\n            this.indices.push( n, n + 1, n + 2 );\n            this.indices.push( n + 1, n + 3, n + 2 );\n\n        }\n\n        this.positionArray = [];\n        this.positionArray.push( this.previous[ 0 ], this.previous[ 1 ], this.previous[ 2 ], 0, this.previous[ 0 ], this.previous[ 1 ], this.previous[ 2 ], 0 );\n        for ( let i = 0; i < this.positions.length / 3; i ++ )\n            this.positionArray.push( this.positions[ i * 3 ], this.positions[ i * 3 + 1 ], this.positions[ i * 3 + 2 ], this.side[ i ] );\n\n        this.positionArray.push( this.next[ this.next.length - 3 ], this.next[ this.next.length - 2 ], this.next[ this.next.length - 1 ], 0, this.next[ this.next.length - 3 ], this.next[ this.next.length - 2 ], this.next[ this.next.length - 1 ], 0 );\n\n        const attribArrays = {\n            indices: { data: this.indices },\n            a_previous: { data: this.previous, numComponents: 3, stride: 4 * Float32Array.BYTES_PER_ELEMENT },\n            a_next: {\n                data: this.next, numComponents: 3, offset: 16 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT,\n            },\n            a_side: {\n                data: this.side, numComponents: 1, offset: 11 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT,\n            },\n            a_width: { data: this.width, numComponents: 1 },\n            a_counters: { data: this.conters, numComponents: 1 },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: this.positions, offset: 8 * Float32Array.BYTES_PER_ELEMENT, stride: 4 * Float32Array.BYTES_PER_ELEMENT };\n        attribArrays[ ShaderParams.ATTRIB_UV_NAME ] = { data: this.uv };\n\n        return new Mesh( name, attribArrays );\n\n    },\n\n    createBufferInfo( gl ) {\n\n        if ( ! this.mesh.bufferInfo ) {\n\n            const positionBuffer = createBufferFromArray( gl, this.positionArray, 'position' );\n            this.mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].buffer = positionBuffer;\n            this.mesh.attribArrays.a_previous.buffer = positionBuffer;\n            this.mesh.attribArrays.a_next.buffer = positionBuffer;\n            this.mesh.attribArrays.a_side.buffer = positionBuffer;\n\n        }\n\n        Model.prototype.createBufferInfo.call( this, gl );\n        return this;\n\n    },\n\n} );\n\nexport { MeshLineModel };\n","import { isArrayBuffer, getGLTypeFromTypedArray, getTypedArrayTypeFromGLType } from './typedArray';\nimport { isWebGL2, glEnumToString } from './utils';\nimport { DefaultColor } from './constant';\n\nconst defaults = {\n    textureColor: DefaultColor.Foreground,\n    textureOptions: {},\n};\n\n/* PixelFormat */\nconst ALPHA = 0x1906;\nconst RGB = 0x1907;\nconst RGBA = 0x1908;\nconst LUMINANCE = 0x1909;\nconst LUMINANCE_ALPHA = 0x190A;\nconst DEPTH_COMPONENT = 0x1902;\nconst DEPTH_STENCIL = 0x84F9;\n\nconst R8 = 0x8229;\nconst R8_SNORM = 0x8F94;\nconst R16F = 0x822D;\nconst R32F = 0x822E;\nconst R8UI = 0x8232;\nconst R8I = 0x8231;\nconst RG16UI = 0x823A;\nconst RG16I = 0x8239;\nconst RG32UI = 0x823C;\nconst RG32I = 0x823B;\nconst RG8 = 0x822B;\nconst RG8_SNORM = 0x8F95;\nconst RG16F = 0x822F;\nconst RG32F = 0x8230;\nconst RG8UI = 0x8238;\nconst RG8I = 0x8237;\nconst R16UI = 0x8234;\nconst R16I = 0x8233;\nconst R32UI = 0x8236;\nconst R32I = 0x8235;\nconst RGB8 = 0x8051;\nconst SRGB8 = 0x8C41;\nconst RGB565 = 0x8D62;\nconst RGB8_SNORM = 0x8F96;\nconst R11F_G11F_B10F = 0x8C3A;\nconst RGB9_E5 = 0x8C3D;\nconst RGB16F = 0x881B;\nconst RGB32F = 0x8815;\nconst RGB8UI = 0x8D7D;\nconst RGB8I = 0x8D8F;\nconst RGB16UI = 0x8D77;\nconst RGB16I = 0x8D89;\nconst RGB32UI = 0x8D71;\nconst RGB32I = 0x8D83;\nconst RGBA8 = 0x8058;\nconst SRGB8_ALPHA8 = 0x8C43;\nconst RGBA8_SNORM = 0x8F97;\nconst RGB5_A1 = 0x8057;\nconst RGBA4 = 0x8056;\nconst RGB10_A2 = 0x8059;\nconst RGBA16F = 0x881A;\nconst RGBA32F = 0x8814;\nconst RGBA8UI = 0x8D7C;\nconst RGBA8I = 0x8D8E;\nconst RGB10_A2UI = 0x906F;\nconst RGBA16UI = 0x8D76;\nconst RGBA16I = 0x8D88;\nconst RGBA32I = 0x8D82;\nconst RGBA32UI = 0x8D70;\n\nconst DEPTH_COMPONENT16 = 0x81A5;\nconst DEPTH_COMPONENT24 = 0x81A6;\nconst DEPTH_COMPONENT32F = 0x8CAC;\nconst DEPTH32F_STENCIL8 = 0x8CAD;\nconst DEPTH24_STENCIL8 = 0x88F0;\n\n/* DataType */\nconst BYTE = 0x1400;\nconst UNSIGNED_BYTE = 0x1401;\nconst SHORT = 0x1402;\nconst UNSIGNED_SHORT = 0x1403;\nconst INT = 0x1404;\nconst UNSIGNED_INT = 0x1405;\nconst FLOAT = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\nconst HALF_FLOAT = 0x140B;\nconst HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8 = 0x84FA;\n\nconst RG = 0x8227;\nconst RG_INTEGER = 0x8228;\nconst RED = 0x1903;\nconst RED_INTEGER = 0x8D94;\nconst RGB_INTEGER = 0x8D98;\nconst RGBA_INTEGER = 0x8D99;\n\nconst textureInternalFormatInfo = {};\n{\n\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = textureInternalFormatInfo;\n    // unsized formats\n    t[ ALPHA ] = {\n        textureFormat: ALPHA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 1, 2, 2, 4 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ LUMINANCE ] = {\n        textureFormat: LUMINANCE, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 1, 2, 2, 4 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ LUMINANCE_ALPHA ] = {\n        textureFormat: LUMINANCE_ALPHA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 2, 4, 4, 8 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT ],\n    };\n    t[ RGB ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 3, 6, 6, 12, 2 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5 ],\n    };\n    t[ RGBA ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 8, 8, 16, 2, 2 ], type: [ UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1 ],\n    };\n\n    // sized formats\n    t[ R8 ] = {\n        textureFormat: RED, colorRenderable: true, textureFilterable: true, bytesPerElement: 1, type: UNSIGNED_BYTE,\n    };\n    t[ R8_SNORM ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: true, bytesPerElement: 1, type: BYTE,\n    };\n    t[ R16F ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 4, 2 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ R32F ] = {\n        textureFormat: RED, colorRenderable: false, textureFilterable: false, bytesPerElement: 4, type: FLOAT,\n    };\n    t[ R8UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 1, type: UNSIGNED_BYTE,\n    };\n    t[ R8I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 1, type: BYTE,\n    };\n    t[ R16UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: UNSIGNED_SHORT,\n    };\n    t[ R16I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: SHORT,\n    };\n    t[ R32UI ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT,\n    };\n    t[ R32I ] = {\n        textureFormat: RED_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: INT,\n    };\n    t[ RG8 ] = {\n        textureFormat: RG, colorRenderable: true, textureFilterable: true, bytesPerElement: 2, type: UNSIGNED_BYTE,\n    };\n    t[ RG8_SNORM ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: true, bytesPerElement: 2, type: BYTE,\n    };\n    t[ RG16F ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 8, 4 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RG32F ] = {\n        textureFormat: RG, colorRenderable: false, textureFilterable: false, bytesPerElement: 8, type: FLOAT,\n    };\n    t[ RG8UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: UNSIGNED_BYTE,\n    };\n    t[ RG8I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 2, type: BYTE,\n    };\n    t[ RG16UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_SHORT,\n    };\n    t[ RG16I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: SHORT,\n    };\n    t[ RG32UI ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: UNSIGNED_INT,\n    };\n    t[ RG32I ] = {\n        textureFormat: RG_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: INT,\n    };\n    t[ RGB8 ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ SRGB8 ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ RGB565 ] = {\n        textureFormat: RGB, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 3, 2 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5 ],\n    };\n    t[ RGB8_SNORM ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: 3, type: BYTE,\n    };\n    t[ R11F_G11F_B10F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6, 4 ], type: [ FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV ],\n    };\n    t[ RGB9_E5 ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6, 4 ], type: [ FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV ],\n    };\n    t[ RGB16F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 12, 6 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RGB32F ] = {\n        textureFormat: RGB, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: FLOAT,\n    };\n    t[ RGB8UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 3, type: UNSIGNED_BYTE,\n    };\n    t[ RGB8I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 3, type: BYTE,\n    };\n    t[ RGB16UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 6, type: UNSIGNED_SHORT,\n    };\n    t[ RGB16I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 6, type: SHORT,\n    };\n    t[ RGB32UI ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: UNSIGNED_INT,\n    };\n    t[ RGB32I ] = {\n        textureFormat: RGB_INTEGER, colorRenderable: false, textureFilterable: false, bytesPerElement: 12, type: INT,\n    };\n    t[ RGBA8 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ SRGB8_ALPHA8 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ RGBA8_SNORM ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: true, bytesPerElement: 4, type: BYTE,\n    };\n    t[ RGB5_A1 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 2, 4 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV ],\n    };\n    t[ RGBA4 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: [ 4, 2 ], type: [ UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4 ],\n    };\n    t[ RGB10_A2 ] = {\n        textureFormat: RGBA, colorRenderable: true, textureFilterable: true, bytesPerElement: 4, type: UNSIGNED_INT_2_10_10_10_REV,\n    };\n    t[ RGBA16F ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: true, bytesPerElement: [ 16, 8 ], type: [ FLOAT, HALF_FLOAT ],\n    };\n    t[ RGBA32F ] = {\n        textureFormat: RGBA, colorRenderable: false, textureFilterable: false, bytesPerElement: 16, type: FLOAT,\n    };\n    t[ RGBA8UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_BYTE,\n    };\n    t[ RGBA8I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: BYTE,\n    };\n    t[ RGB10_A2UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT_2_10_10_10_REV,\n    };\n    t[ RGBA16UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: UNSIGNED_SHORT,\n    };\n    t[ RGBA16I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 8, type: SHORT,\n    };\n    t[ RGBA32I ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 16, type: INT,\n    };\n    t[ RGBA32UI ] = {\n        textureFormat: RGBA_INTEGER, colorRenderable: true, textureFilterable: false, bytesPerElement: 16, type: UNSIGNED_INT,\n    };\n    // Sized Internal\n    t[ DEPTH_COMPONENT16 ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: [ 2, 4 ], type: [ UNSIGNED_SHORT, UNSIGNED_INT ],\n    };\n    t[ DEPTH_COMPONENT24 ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT,\n    };\n    t[ DEPTH_COMPONENT32F ] = {\n        textureFormat: DEPTH_COMPONENT, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: FLOAT,\n    };\n    t[ DEPTH24_STENCIL8 ] = {\n        textureFormat: DEPTH_STENCIL, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: UNSIGNED_INT_24_8,\n    };\n    t[ DEPTH32F_STENCIL8 ] = {\n        textureFormat: DEPTH_STENCIL, colorRenderable: true, textureFilterable: false, bytesPerElement: 4, type: FLOAT_32_UNSIGNED_INT_24_8_REV,\n    };\n\n    Object.keys( t ).forEach( ( internalFormat ) => {\n\n        const info = t[ internalFormat ];\n        info.bytesPerElementMap = {};\n        if ( Array.isArray( info.bytesPerElement ) )\n            info.bytesPerElement.forEach( ( bytesPerElement, ndx ) => {\n\n                const type = info.type[ ndx ];\n                info.bytesPerElementMap[ type ] = bytesPerElement;\n\n            } );\n        else {\n\n            const { type } = info;\n            info.bytesPerElementMap[ type ] = info.bytesPerElement;\n\n        }\n\n    } );\n\n}\n\nfunction empty() {\n}\n\nfunction getFormatAndTypeFromInternalFormat( internalFromat ) {\n\n    const info = textureInternalFormatInfo[ internalFromat ];\n\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n\n\n    return {\n        format: info.textureFormat,\n        type: Array.isArray( info.type ) ? info.type[ 0 ] : info.type,\n    };\n\n}\n\nfunction make1Pixel( color ) {\n\n    const colorUsed = color || defaults.textureColor;\n    if ( isArrayBuffer( colorUsed ) ) return colorUsed;\n    return new Uint8Array( [ colorUsed[ 0 ], colorUsed[ 1 ], colorUsed[ 2 ], colorUsed[ 3 ] ] );\n\n}\n\nfunction setTextureTo1PixelColor( gl, tex, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    if ( opts.color === false ) return;\n\n    const color = make1Pixel( options.color );\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let i = 0; i < 6; i ++ )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n    else if ( target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY )\n        gl.texImage3D( target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n    else\n        gl.texImage2D( target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color );\n\n}\n\nconst getDefaultCrossOrigin = ( function () {\n\n    const expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi; // eslint-disable-line\n    const regex = new RegExp( expression );\n\n    return function getDefaultCrossOrigin( url ) { // eslint-disable-line\n\n        if ( url.match( regex ) && ( new URL( url ) ).origin !== window.location.origin )\n            return 'anonymous';\n\n        return undefined;\n\n    };\n\n}() );\n\nfunction loadImage( url, crossOrigin, callback ) {\n\n    const cb = callback || empty;\n    let img = new Image();\n    const cors = crossOrigin !== undefined ? crossOrigin : getDefaultCrossOrigin( url );\n    if ( cors !== undefined )\n        img.crossOrigin = cors;\n\n\n    function clearEventHandlers() {\n\n        img.removeEventListener( 'error', onError ); // eslint-disable-line\n        img.removeEventListener( 'load', onLoad ); // eslint-disable-line\n        img = null;\n\n    }\n\n    function onError() {\n\n        const msg = `couldn't load image: ${url}`;\n        cb( msg, img );\n        clearEventHandlers();\n\n    }\n\n    function onLoad() {\n\n        cb( null, img );\n        clearEventHandlers();\n\n    }\n\n    img.addEventListener( 'error', onError );\n    img.addEventListener( 'load', onLoad );\n    img.src = url;\n    return img;\n\n}\n\nconst lastPackState = {};\n\nfunction savePatcState( gl, options ) {\n\n    if ( options.colorspaceConversion !== undefined ) {\n\n        lastPackState.colorspaceConversion = gl.getParameter( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL );\n        gl.pixelStorei( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion );\n\n    }\n    if ( options.premultiplyAlpha !== undefined ) {\n\n        lastPackState.premultiplyAlpha = gl.getParameter( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL );\n        gl.pixelStorei( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha );\n\n    }\n    if ( options.flipY !== undefined ) {\n\n        lastPackState.flipY = gl.getParameter( gl.UNPACK_FLIP_Y_WEBGL );\n        gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, options.flipY );\n\n    }\n\n}\n\nfunction restorePackState( gl, options ) {\n\n    if ( options.colorspaceConversion !== undefined )\n        gl.pixelStorei( gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion );\n    if ( options.premultiplyAlpha !== undefined )\n        gl.pixelStorei( gl.UNPACH_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha );\n    if ( options.flipY !== undefined )\n        gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY );\n\n}\n\nfunction getCubeFacesOrder( gl, options ) {\n\n    const opts = options || {};\n    return opts.cubeFaceOrder || [\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n        gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n\n}\n\nfunction getCubeFacesWithIdx( gl, options ) {\n\n    const faces = getCubeFacesOrder( gl, options );\n\n    const facesWithIdx = faces.map( ( face, idx ) => ( { face, idx } ) );\n\n    facesWithIdx.sort( ( a, b ) => ( a.face - b.face ) );\n\n    return facesWithIdx;\n\n}\n\nfunction shouldAutoSetTextureFiltering( options ) {\n\n    return options.auto === true || ( options.auto === undefined && options.level === undefined );\n\n}\n\nfunction isPowerOf2( value ) {\n\n    return ( value & ( value - 1 ) ) === 0;\n\n}\n\nfunction canGenerateMipmap( gl, width, height, internalFormat ) {\n\n    if ( ! isWebGL2( gl ) )\n        return isPowerOf2( width ) && isPowerOf2( height );\n\n    const info = textureInternalFormatInfo[ internalFormat ];\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n    return info.colorRenderable && info.textureFilterable;\n\n}\n\nfunction canFilter( internalFormat ) {\n\n    const info = textureInternalFormatInfo[ internalFormat ];\n    if ( ! info )\n        throw new Error( 'unknow internal format' );\n\n    return info.textureFilterable;\n\n}\n\nfunction setTextureFiltering( gl, tex, options, widthP, heightP, internalFormatP, typeP ) {\n\n    const opts = options || defaults.textureOptions;\n    const internalFormat = internalFormatP || gl.RGBA;\n    const type = typeP || gl.UNSIGNED_SHORT;\n    const target = opts.target || gl.TEXTURE_2D;\n    const width = widthP || opts.width;\n    const height = heightP || opts.height;\n    gl.bindTexture( target, tex );\n    if ( canGenerateMipmap( gl, width, height, internalFormat, type ) )\n        gl.generateMipmap( target );\n    else {\n\n        const filtering = canFilter( internalFormat ) ? gl.LINEAR : gl.NEAREST;\n        gl.texParameteri( target, gl.TEXTURE_MIN_FILTER, filtering );\n        gl.texParameteri( target, gl.TEXTURE_MAG_FILTER, filtering );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\n    }\n\n}\n\nconst WebGLSamplerCtor = window.WebGLSampler || function NoWebGLSampler() {};\n\nfunction setTextureSamplerParameters( gl, target, parameteriFn, options ) {\n\n    if ( options.minMag ) {\n\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_FILTER, options.minMag );\n        parameteriFn.call( gl, target, gl.TEXTURE_MAG_FILTER, options.minMag );\n\n    }\n\n    if ( options.min )\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_FILTER, options.min );\n\n    if ( options.mag )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAG_FILTER, options.mag );\n\n    if ( options.wrap ) {\n\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_S, options.wrap );\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_T, options.wrap );\n        if ( target === gl.TEXTURE_3D || target instanceof WebGLSamplerCtor )\n            parameteriFn.call( gl, target, gl.TEXTURE_WRAP_R, options.wrap );\n\n    }\n\n    if ( options.wrapR )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_R, options.wrapR );\n\n    if ( options.wrapS )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_S, options.wrapS );\n\n    if ( options.wrapT )\n        parameteriFn.call( gl, target, gl.TEXTURE_WRAP_T, options.wrapT );\n\n    if ( options.minLod )\n        parameteriFn.call( gl, target, gl.TEXTURE_MIN_LOD, options.minLod );\n\n    if ( options.maxLod )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAX_LOD, options.maxLod );\n\n    if ( options.baseLevel )\n        parameteriFn.call( gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel );\n\n    if ( options.maxLevel )\n        parameteriFn.call( gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel );\n\n}\n\nfunction setTextureParameters( gl, tex, options ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    setTextureSamplerParameters( gl, target, gl.texParameteri, options );\n\n}\n\nconst ctx = document.createElement( 'canvas' ).getContext( '2d' );\n\nfunction setTextureFromElement( gl, tex, element, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    const level = opts.level || 0;\n    let { width, height } = element;\n    const internalFormat = opts.internalFormat || opts.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = opts.format || formatType.format;\n    const type = opts.type || formatType.type;\n\n    savePatcState( gl, opts );\n    gl.bindTexture( target, tex );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        const imgWidth = element.width;\n        const imgHeight = element.height;\n        let size;\n        let slices;\n        if ( imgWidth / 6 === imgHeight ) {\n\n            size = imgHeight;\n            slices = [ 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0 ];\n\n        } else if ( imgHeight / 6 === imgWidth ) {\n\n            size = imgWidth;\n            slices = [ 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5 ];\n\n        } else if ( imgWidth / 3 === imgHeight / 2 ) {\n\n            size = imgWidth / 3;\n            slices = [ 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1 ];\n\n        } else if ( imgWidth / 2 === imgHeight / 3 ) {\n\n            size = imgWidth / 2;\n            slices = [ 0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2 ];\n\n        } else\n            throw new Error( `can't guess cube map from element: ${element.src ? element.src : element.nodeName}` );\n\n        ctx.canvas.width = size;\n        ctx.canvas.height = size;\n        width = size;\n        height = size;\n\n        getCubeFacesWithIdx( gl, options ).forEach( ( f ) => {\n\n            const xOffset = slices[ ( f.idx * 2 ) + 0 ] * size;\n            const yOffset = slices[ ( f.idx * 2 ) + 1 ] * size;\n            ctx.drawImage( element, xOffset, yOffset, size, size, 0, 0, size, size );\n            gl.texImage2D( f.face, level, internalFormat, format, type, ctx.canvas );\n\n        } );\n\n        ctx.canvas.width = 1;\n        ctx.canvas.height = 1;\n\n    } else if ( target === gl.TEXTURE_3D ) {\n\n        const smallest = Math.min( element.width, element, height );\n        const largest = Math.max( element.width, element.height );\n        const depth = largest / smallest;\n        if ( depth % 1 !== 0 )\n            throw new Error( 'can not compute TEXTURE_3D dimensions of element' );\n\n        const xMult = element.width === largest ? 1 : 0;\n        const yMult = element.height === largest ? 1 : 0;\n        gl.texImage3D( target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null );\n        ctx.canvas.width = smallest;\n        ctx.canvas.height = smallest;\n        for ( let d = 0; d < depth; d ++ ) {\n\n            const srcX = d * smallest * xMult;\n            const srcY = d * smallest * yMult;\n            const srcW = smallest;\n            const srcH = smallest;\n            const dstX = 0;\n            const dstY = 0;\n            const dstW = smallest;\n            const dstH = smallest;\n            ctx.drawImage( element, srcX, srcY, srcW, srcH, dstX, dstY, dstW, dstH );\n            gl.texSubImage3D( target, level, 0, 0, d, smallest, smallest, 1, format, type, ctx.canvas );\n\n        }\n\n        ctx.canvas.width = 1;\n        ctx.canvas.height = 1;\n\n    } else\n        gl.texImage2D( target, level, internalFormat, format, type, element );\n\n    restorePackState( gl, options );\n\n    if ( shouldAutoSetTextureFiltering( opts ) )\n        setTextureFiltering( gl, tex, options, width, height, internalFormat, type );\n\n    setTextureParameters( gl, tex, options );\n    return tex;\n\n}\n\nfunction loadTextureFromUrl( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const opts = options || defaults.textureOptions;\n    setTextureTo1PixelColor( gl, tex, opts );\n    const asyncOpts = Object.assign( {}, opts );\n    const img = loadImage( opts.src, asyncOpts.crossOrigin, ( err, imgBK ) => {\n\n        if ( err )\n            cb( err, tex, img );\n        else {\n\n            setTextureFromElement( gl, tex, imgBK, asyncOpts );\n            cb( null, tex, imgBK );\n\n        }\n\n    } );\n    return img;\n\n}\n\nfunction getTextureTypeFromArrayType( gl, src, defaultType ) {\n\n    if ( isArrayBuffer( src ) )\n        return getGLTypeFromTypedArray( src );\n\n\n    return defaultType || gl.UNSIGNED_BYTE;\n\n}\n\nfunction getBytesPerElementForInternalFromat( internalFromat, type ) {\n\n    const info = textureInternalFormatInfo[ internalFromat ];\n    if ( ! info )\n        throw new Error( 'unknown internal format' );\n    const bytesPerElement = info.bytesPerElementMap[ type ];\n    if ( bytesPerElement === undefined )\n        throw new Error( 'unknown internal format' );\n    return bytesPerElement;\n\n}\n\nfunction guessDimensions( gl, target, width, height, numElements ) {\n\n    if ( numElements % 1 !== 0 )\n        throw new Error( 'can\\'t guess dimensions' );\n\n    let cWith;\n    let cHeight;\n    if ( ! width && ! height ) {\n\n        const size = Math.sqrt( numElements / ( target === gl.TEXTURE_CUBE_MAP ? 6 : 1 ) );\n        if ( size % 1 === 0 ) {\n\n            cWith = size;\n            cHeight = size;\n\n        } else {\n\n            cWith = numElements;\n            cHeight = 1;\n\n        }\n\n    } else if ( ! height ) {\n\n        cHeight = numElements / width;\n        if ( cHeight % 1 )\n            throw new Error( 'can\\'t guess dimensions' );\n\n    } else if ( ! width ) {\n\n        cWith = numElements / height;\n        if ( cWith % 1 )\n            throw new Error( 'can\\'t guess dimensions' );\n\n    }\n\n    return {\n        width: cWith,\n        height: cHeight,\n    };\n\n}\n\nfunction setTextureFromArray( gl, tex, src, options ) {\n\n    const opts = options || defaults.textureOptions;\n    const target = opts.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    let { width, height, depth } = opts;\n    const level = opts.level || 0;\n    const internalFromat = opts.internalFormat || opts.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = opts.format || formatType.format;\n    const type = opts.format || getTextureTypeFromArrayType( gl, src, formatType.type );\n    let typedSrc = src;\n    if ( ! isArrayBuffer( typedSrc ) ) {\n\n        const Type = getTypedArrayTypeFromGLType( type );\n        typedSrc = new Type( src );\n\n    } else if ( typedSrc instanceof Uint8ClampedArray )\n        typedSrc = new Uint8Array( typedSrc.buffer );\n\n    const bytesPerElement = getBytesPerElementForInternalFromat( internalFromat, type );\n    const numElements = typedSrc.byteLength / bytesPerElement;\n    if ( numElements % 1 )\n        throw new Error( `length wrong for format: ${glEnumToString( gl, format )}` );\n\n    let dimensions;\n    if ( target === gl.TEXTURE_3D )\n        if ( ! width && ! height && ! depth ) {\n\n            const size = Math.cbrt( numElements );\n            if ( size % 1 !== 0 )\n                throw new Error( `can't guess size of array of numElements: ${numElements}` );\n            width = size;\n            height = size;\n            depth = size;\n\n        } else if ( width && ( ! height || ! depth ) ) {\n\n            dimensions = guessDimensions( gl, target, height, depth, numElements / width );\n            height = dimensions.width;\n            depth = dimensions.height;\n\n        } else if ( height && ( ! width || ! depth ) ) {\n\n            dimensions = guessDimensions( gl, target, width, depth, numElements / height );\n            width = dimensions.width;\n            depth = dimensions.height;\n\n        } else {\n\n            dimensions = guessDimensions( gl, target, width, height, numElements / depth );\n            width = dimensions.width;\n            height = dimensions.height;\n\n        }\n    else {\n\n        dimensions = guessDimensions( gl, target, width, height, numElements );\n        width = dimensions.width;\n        height = dimensions.height;\n\n    }\n\n\n    gl.pixelStorei( gl.UNPACK_ALIGNMENT, opts.unpackAlignment || 1 );\n    savePatcState( gl, options );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        const elementsPerElement = bytesPerElement / typedSrc.BYTES_PER_ELEMENT;\n        const faceSize = ( numElements / 6 ) * elementsPerElement;\n\n        getCubeFacesWithIdx( gl, options ).forEach( ( f ) => {\n\n            const offset = faceSize * f.idx;\n            const data = typedSrc.subarray( offset, offset + faceSize );\n            gl.texImage2D( f.face, level, internalFromat, width, height, 0, format, type, data );\n\n        } );\n\n    } else if ( target === gl.TEXTURE_3D )\n        gl.texImage3D( target, level, internalFromat, width, height, depth, 0, format, type, typedSrc );\n    else\n        gl.texImage2D( target, level, internalFromat, width, height, 0, format, type, typedSrc );\n\n\n    restorePackState( gl, options );\n    return {\n        width,\n        height,\n        depth,\n        type,\n    };\n\n}\n\nfunction loadCubeMapFromUrls( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const urls = options.src;\n    if ( urls.length !== 6 )\n        throw new Error( 'there must be 6 urls for a cubemap' );\n    const level = options.level || 0;\n    const internalFromat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = options.format || formatType.format;\n    const type = options.type || gl.UNSIGNED_BYTE;\n    const target = options.target || gl.TEXTURE_2D;\n    if ( target !== gl.TEXTURE_CUBE_MAP )\n        throw new Error( 'target must be TEXTURE_CUBE_MAP' );\n\n    setTextureTo1PixelColor( gl, tex, options );\n\n    const opts = Object.assign( {}, options );\n    let numToLoad = 6;\n    const errors = [];\n    const faces = getCubeFacesOrder( gl, opts );\n    let imgs;\n\n    function uploadImg( faceTarget ) {\n\n        return function ( err, img ) {\n\n            numToLoad -= 1;\n            if ( err )\n                errors.push( err );\n            else {\n\n                savePatcState( gl, opts );\n                gl.bindTexture( target, tex );\n                if ( numToLoad === 5 )\n                    getCubeFacesOrder( gl ).forEach( ( otherTarget ) => {\n\n                        gl.texImage2D( otherTarget, level, internalFromat, format, type, img );\n\n                    } );\n                else\n                    gl.texImage2D( faceTarget, level, internalFromat, format, type, img );\n\n                restorePackState( gl, opts );\n                if ( shouldAutoSetTextureFiltering( opts ) )\n                    gl.generateMipmap( target );\n\n            }\n\n            if ( numToLoad === 0 )\n                cb( errors.length ? errors : undefined, imgs, tex );\n\n        };\n\n    }\n\n    imgs = urls.map( ( url, idx ) => loadImage( url, opts.crossOrigin, uploadImg( faces[ idx ] ) ) );\n\n}\n\nfunction loadSlicesFromUrls( gl, tex, options, callback ) {\n\n    const cb = callback || empty;\n    const urls = options.src;\n    const internalFromat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    const format = options.format || formatType.format;\n    const type = options.type || gl.UNSIGNED_BYTE;\n    const target = options.target || gl.TEXTURE_2D_ARRAY;\n    if ( target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY )\n        throw new Error( 'target must be TEXTURE_3D or TEXTURE_2D_ARRAY' );\n\n    setTextureTo1PixelColor( gl, tex, options );\n\n    const opts = Object.assign( {}, options );\n    let numToLoad = urls.length;\n    const errors = [];\n    let imgs;\n    const level = opts.level || 0;\n    let width = opts.width;\n    let height = opts.height;\n    const depth = urls.length;\n    let firstImage = true;\n\n    function uploadImg( slice ) {\n\n        return function ( err, img ) {\n\n            numToLoad -= 1;\n            if ( err )\n                errors.push( err );\n            else {\n\n                savePatcState( gl, opts );\n                gl.bindTexture( target, tex );\n\n                if ( firstImage ) {\n\n                    firstImage = false;\n                    width = opts.width || img.width;\n                    height = opts.width || img.width;\n                    gl.texImage3D( target, level, internalFromat, width, height, depth, 0, format, type, null );\n\n                    for ( let s = 0; s < depth; s ++ )\n                        gl.texSubImage3D( target, level, 0, 0, s, width, height, 1, format, type, img );\n\n                } else {\n\n                    let src = img;\n                    if ( img.width !== width || img.height !== height ) {\n\n                        src = ctx.canvas;\n                        ctx.canvas.width = width;\n                        ctx.canvas.height = height;\n                        ctx.drawImage( img, 0, 0, width, height );\n\n                    }\n\n                    gl.texSubImage3D( target, level, 0, 0, slice, width, height, 1, format, type, src );\n\n                    if ( src === ctx.canvas ) {\n\n                        ctx.canvas.width = 0;\n                        ctx.canvas.height = 0;\n\n                    }\n\n                }\n\n                restorePackState( gl, opts );\n                if ( shouldAutoSetTextureFiltering( opts ) )\n                    gl.generateMipmap( target );\n\n\n            }\n\n            if ( numToLoad === 0 )\n                cb( errors.length ? errors : undefined, imgs, tex );\n\n        };\n\n    }\n\n    imgs = urls.map( ( url, idx ) => loadImage( url, opts.crossOrigin, uploadImg( idx ) ) );\n\n}\n\nfunction setEmptyTexture( gl, tex, options ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    const level = options.level || 0;\n    const internalFormat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = options.format || formatType.format;\n    const type = options.type || formatType.type;\n\n    savePatcState( gl, options );\n\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let ii = 0; ii < 6; ++ ii )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null );\n    else if ( target === gl.TEXTURE_3D )\n        gl.texImage3D( target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null );\n    else\n        gl.texImage2D( target, level, internalFormat, options.width, options.height, 0, format, type, null );\n\n    restorePackState( gl, options );\n\n}\n\nfunction createTexture( gl, options, callback ) {\n\n    const cb = callback || empty;\n    const opts = options || defaults.textureOptions;\n    const tex = gl.createTexture();\n    const target = opts.target || gl.TEXTURE_2D;\n    let width = opts.width || 1;\n    let height = opts.height || 1;\n    const internalFromat = opts.internalFromat || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFromat );\n    let type = opts.type || formatType.type;\n    gl.bindTexture( target, tex );\n    if ( target === gl.TEXTURE_CUBE_MAP ) {\n\n        gl.texParameteri( target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n        gl.texParameteri( target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\n    }\n\n    const src = opts.src;\n    if ( src )\n        if ( typeof ( src ) === 'string' ) {\n\n            loadTextureFromUrl( gl, tex, opts, cb );\n\n        } else if ( isArrayBuffer( src ) ||\n            ( Array.isArray( src ) && (\n                typeof src[ 0 ] === 'number' ||\n                Array.isArray( src[ 0 ] ) ||\n                isArrayBuffer( src[ 0 ] )\n            ) ) ) {\n\n            const dimensions = setTextureFromArray( gl, tex, src, opts );\n            width = dimensions.width;\n            height = dimensions.height;\n            type = dimensions.type;\n\n        } else if ( Array.isArray( src ) && typeof ( src[ 0 ] ) === 'string' ) {\n\n            if ( target === gl.TEXTURE_CUBE_MAP )\n                loadCubeMapFromUrls( gl, tex, options, cb );\n            else\n                loadSlicesFromUrls( gl, tex, opts, cb );\n\n        } else if ( src instanceof HTMLElement ) {\n\n            setTextureFromElement( gl, tex, src, opts );\n            width = src.width;\n            height = src.height;\n\n        } else {\n\n            throw new Error( 'unsupported src type' );\n\n        }\n    else\n        setEmptyTexture( gl, tex, opts );\n\n    if ( shouldAutoSetTextureFiltering( options ) )\n        setTextureFiltering( gl, tex, opts, width, height, internalFromat, type );\n\n    setTextureParameters( gl, tex, opts );\n\n    return tex;\n\n}\n\nfunction isAsyncSrc( src ) {\n\n    return typeof src === 'string' ||\n           ( Array.isArray( src ) && typeof src[ 0 ] === 'string' );\n\n}\n\nfunction createTextures( gl, textureOptions, callback ) {\n\n    const cb = callback || empty;\n    let numLoading = 0;\n    const errors = [];\n    const textures = [];\n    const images = {};\n\n    function callCallbackWhenReady() {\n\n        if ( numLoading === 0 )\n            setTimeout( () => {\n\n                cb( errors.length ? errors : undefined, textures, images );\n\n            }, 0 );\n\n    }\n\n    Object.keys( textureOptions ).forEach( ( name ) => {\n\n        const options = textureOptions[ name ];\n\n        let onLoadFn;\n        if ( isAsyncSrc( options.src ) ) {\n\n            onLoadFn = function ( err, tex, img ) {\n\n                images[ name ] = img;\n                numLoading -= 1;\n                if ( err )\n                    errors.push( err );\n\n                callCallbackWhenReady();\n\n            };\n\n            numLoading += 1;\n\n        }\n\n        textures[ name ] = createTexture( gl, options, onLoadFn );\n\n    } );\n\n    callCallbackWhenReady();\n\n    return textures;\n\n}\n\nfunction resizeTexture( gl, tex, options, width = options.width, height = options.height ) {\n\n    const target = options.target || gl.TEXTURE_2D;\n    gl.bindTexture( target, tex );\n    const level = options.level || 0;\n    const internalFormat = options.internalFormat || options.format || gl.RGBA;\n    const formatType = getFormatAndTypeFromInternalFormat( internalFormat );\n    const format = options.format || formatType.format;\n    let type;\n    const src = options.src;\n\n    if ( src && ( isArrayBuffer( src ) || ( Array.isArray( src ) && typeof ( src[ 0 ] ) === 'number' ) ) )\n        type = options.type || getTextureTypeFromArrayType( gl, src, formatType.type );\n    else\n        type = options.type || formatType.type;\n\n    if ( target === gl.TEXTURE_CUBE_MAP )\n        for ( let i = 0; i < 6; i ++ )\n            gl.texImage2D( gl.TEXTURE_CUBE_MAP_NEGATIVE_X + i, level, internalFormat, width, height, 0, format, type, null );\n    else\n        gl.texImage2D( target, level, internalFormat, width, height, 0, format, type, null );\n\n}\n\nexport { createTexture, createTextures, resizeTexture };\n","import { DefaultColor } from './constant';\n\nfunction getContext( canvasOrId, opts ) {\n\n    let canvas;\n    if ( typeof canvasOrId === 'string' )\n        canvas = document.getElementById( canvasOrId );\n    else\n        canvas = canvasOrId;\n\n    const names = [ 'webgl2', 'experimental-webgl2', 'webgl', 'experimental-webgl' ];\n    let context = null;\n    for ( let i = 0; i < names.length; i ++ ) {\n\n        context = canvas.getContext( names[ i ], opts );\n        if ( context ) {\n\n            console.log( `renderer: ${context.getParameter( context.VERSION ) || names[ i ]}` );\n            break;\n\n        }\n\n    }\n\n    if ( ! context )\n        throw new Error( 'Please use a decent browser, this browser not support WebglContext.' );\n\n    return context;\n\n}\n\nfunction resizeCanvasToDisplaySize( canvas, multiplier ) {\n\n    let mult = multiplier || 1;\n    mult = Math.max( 0, mult );\n    const width = canvas.clientWidth * mult | 0;\n    const height = canvas.clientHeight * mult | 0;\n    if ( canvas.width !== width || canvas.height !== height ) {\n\n        canvas.width = width; // eslint-disable-line\n        canvas.height = height; // eslint-disable-line\n        return true;\n\n    }\n    return false;\n\n}\n\nfunction clear(\n    gl,\n    r = DefaultColor.BackgroundNormalized[ 0 ],\n    g = DefaultColor.BackgroundNormalized[ 1 ],\n    b = DefaultColor.BackgroundNormalized[ 2 ],\n    a = DefaultColor.BackgroundNormalized[ 3 ],\n) {\n\n    gl.clearColor( r, g, b, a );\n    gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n}\n\nexport { getContext, resizeCanvasToDisplaySize, clear };\n","import { getContext, clear, resizeCanvasToDisplaySize } from './webgl';\n\nfunction Renderer( canvasOrId, opts ) {\n\n    this.context = getContext( canvasOrId, opts );\n    this.canvas = this.context.canvas;\n    this.multiplier = 1.0;\n\n    this.context.cullFace( this.context.BACK );\n    this.context.frontFace( this.context.CCW );\n    this.context.enable( this.context.CULL_FACE );\n    this.context.enable( this.context.DEPTH_TEST );\n    this.context.depthFunc( this.context.LEQUAL );\n    this.context.blendFunc( this.context.SRC_ALPHA, this.context.ONE_MINUS_SRC_ALPHA );\n\n}\n\nObject.assign( Renderer.prototype, {\n\n    clear( ...args ) {\n\n        if ( Array.isArray( args[ 0 ] ) )\n            clear( this.context, ...args[ 0 ] );\n        else\n            clear( this.context, ...args );\n\n        return this;\n\n    },\n\n    setSize( width, height ) {\n\n        this.canvas.style.width = width;\n        this.canvas.style.height = height;\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.context.viewport( 0, 0, this.canvas.width, this.canvas.height );\n        return this;\n\n    },\n\n    fixCanvasToDisplay( multiplier, updateViewport = true ) {\n\n        if ( typeof multiplier === 'number' && multiplier > 0 && this.multiplier !== multiplier )\n            this.multiplier = multiplier;\n\n        if ( resizeCanvasToDisplaySize( this.canvas, this.multiplier ) ) {\n\n            if ( updateViewport )\n                this.context.viewport( 0, 0, this.canvas.width, this.canvas.height );\n            return true;\n\n        }\n\n        return false;\n\n    },\n\n} );\n\nexport { Renderer };\n","import { Matrix4 } from '../math/Matrix4';\nimport { Transform } from '../model/Transform';\nimport { Vector3 } from '../math/Vector3';\nimport { PMath } from '../math/Math';\n\nfunction Camera() {\n\n    this.transform = new Transform();\n    this.projMat = Matrix4.identity();\n    this.viewMat = Matrix4.identity();\n    this.target = new Vector3();\n    this.up = new Vector3( 0, 1, 0 );\n\n}\n\nObject.defineProperties( Camera.prototype, {\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( v ) {\n\n            this.transform.position = v;\n\n        },\n\n    },\n\n    matrix: {\n\n        get() {\n\n            return this.transform.worldMatrix.raw;\n\n        },\n\n    },\n\n    vec3Position: {\n\n        get() {\n\n            return this.transform.vec3Position;\n\n        },\n\n    },\n\n    isCamera: {\n\n        get() {\n\n            return true;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Camera.prototype, {\n\n    getOrientMatrix() {\n\n        const mat = new Float32Array( this.viewMat );\n        mat[ 12 ] = mat[ 13 ] = mat[ 14 ] = 0.0; // eslint-disable-line\n        return mat;\n\n    },\n\n    lookAt( target ) {\n\n        if ( target )\n            this.target = target;\n\n        Matrix4.lookAt( this.viewMat, this.transform.position, this.target.getArray(), this.up.getArray() );\n        Matrix4.invert( this.transform.matrix.raw, this.viewMat );\n        Matrix4.decompose( this.transform.matrix.raw, this.transform.vec3Position.raw, this.transform.quatQuaternion.raw, this.transform.vec3Scale.raw );\n        Matrix4.copy( this.transform.worldMatrix.raw, this.transform.matrix.raw );\n        this.transform.quaternion = this.transform.quaternion; // update rotation\n        this.transform.markNeedUpdate( false );\n\n        return this;\n\n    },\n\n    setTransform( transform ) {\n\n        this.transform = transform;\n        return this;\n\n    },\n\n    updateViewMatFromModelMat() {\n\n        Matrix4.invert( this.viewMat, this.matrix );\n\n    },\n\n} );\n\nfunction PerspectiveCamera( fov = 45, aspectRatio = 1.5, near = 0.01, far = 1000, fixAspectRatio = false ) {\n\n    Camera.call( this );\n\n    this.fov = fov;\n    this.aspectRatio = aspectRatio;\n    this.near = near;\n    this.far = far;\n    this.fixAspectRatio = fixAspectRatio;\n\n    Matrix4.perspective( this.projMat, this.fovRadian, aspectRatio, near, far );\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    isPerspectiveCamera: true,\n\n    updateProjMatrix( aspectRatio ) {\n\n        if ( ! this.fixAspectRatio && aspectRatio )\n            this.aspectRatio = aspectRatio;\n\n        Matrix4.perspective( this.projMat, this.fovRadian, this.aspectRatio, this.near, this.far );\n\n        return this;\n\n    },\n\n} );\n\nObject.defineProperties( PerspectiveCamera.prototype, {\n\n    fov: {\n        get() {\n\n            return this._fov;\n\n        },\n        set( degree ) {\n\n            this._fov = degree;\n            this.fovRadian = PMath.degree2Radian( this._fov );\n\n        },\n    },\n\n} );\n\nfunction OrthographicCamera( size, aspectRatio, near = 1, far = size * 2, fixAspectRatio = false ) {\n\n    Camera.call( this );\n\n    this.size = size;\n    this.aspectRatio = aspectRatio;\n    this.near = near;\n    this.far = far;\n    this.zoom = 1;\n    this.fixAspectRatio = fixAspectRatio;\n\n    this.left = this.size * this.aspectRatio / - 2;\n    this.right = this.size * this.aspectRatio / 2;\n    this.bottom = this.size / - 2;\n    this.top = this.size / 2;\n\n    Matrix4.ortho( this.projMat, this.left / this.zoom, this.right / this.zoom, this.bottom / this.zoom, this.top / this.zoom, this.near / this.zoom, this.far / this.zoom );\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    isOrthographicCamera: true,\n\n    updateProjMatrix( aspectRatio ) {\n\n        if ( ! this.fixAspectRatio && aspectRatio )\n            this.aspectRatio = aspectRatio;\n\n        this.left = this.size * this.aspectRatio / - 2;\n        this.right = this.size * this.aspectRatio / 2;\n        Matrix4.ortho( this.projMat, this.left / this.zoom, this.right / this.zoom, this.bottom / this.zoom, this.top / this.zoom, this.near / this.zoom, this.far / this.zoom );\n\n        return this;\n\n    },\n\n} );\n\nexport { PerspectiveCamera, OrthographicCamera };\n","function Vector2( x, y ) {\n\n    this.raw = [];\n    this.x = x || 0;\n    this.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n    x: {\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n    },\n\n    y: {\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n    },\n\n    width: {\n\n        get() {\n\n            return this.raw[ 0 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 0 ] = v;\n\n        },\n\n    },\n\n    height: {\n\n        get() {\n\n            return this.raw[ 1 ];\n\n        },\n\n        set( v ) {\n\n            this.raw[ 1 ] = v;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n    set( x, y ) {\n\n        this.x = x;\n        this.y = y;\n        return this;\n\n    },\n\n    setX( x ) {\n\n        this.x = x;\n        return this;\n\n    },\n\n    setY( y ) {\n\n        this.y = y;\n        return this;\n\n    },\n\n    clone() {\n\n        return new Vector2( this.x, this.y );\n\n    },\n\n    copy( v ) {\n\n        this.x = v.x;\n        this.y = v.y;\n\n        return this;\n\n    },\n\n    add( v ) {\n\n        this.x += v.x;\n        this.y += v.y;\n\n        return this;\n\n    },\n\n    sub( v ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n\n        return this;\n\n    },\n\n    subVectors( a, b ) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        return this;\n\n    },\n\n    clamp( min, max ) {\n\n        this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n        this.y = Math.min( min.y, Math.min( max.y, this.y ) );\n\n        return this;\n\n    },\n\n} );\n\nexport { Vector2 };\n","import { PMath } from './Math';\n\nfunction Spherical( radius, phi, theta ) {\n\n    this.radius = ( radius !== undefined ) ? radius : 1.0;\n    this.phi = ( phi !== undefined ) ? phi : 0;\n    this.theta = ( theta !== undefined ) ? theta : 0;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n    set( radius, phi, theta ) {\n\n        this.radius = radius;\n        this.phi = phi;\n        this.theta = theta;\n\n        return this;\n\n    },\n\n    clone() {\n\n        return new Spherical().copy( this );\n\n    },\n\n    copy( other ) {\n\n        this.radius = other.radius;\n        this.phi = other.phi;\n        this.theta = other.theta;\n\n        return this;\n\n    },\n\n    makeSafe: ( function () {\n\n        const ESP = 0.000001;\n\n        return function makeSafe() {\n\n            this.phi = Math.max( ESP, Math.min( Math.PI - ESP, this.phi ) );\n            return this;\n\n        };\n\n    }() ),\n\n    setFromVecor3( vec3 ) {\n\n        this.radius = vec3.length();\n        if ( this.radius === 0 ) {\n\n            this.theta = 0;\n            this.phi = 0;\n\n        } else {\n\n            this.theta = Math.atan2( vec3.x, vec3.z );\n            this.phi = Math.acos( PMath.clamp( vec3.y / this.radius, - 1, 1 ) );\n\n        }\n\n        return this;\n\n    },\n\n} );\n\nexport { Spherical };\n","/* eslint default-case: 0 */\nimport { Vector2 } from '../math/Vector2';\nimport { Vector3 } from '../math/Vector3';\nimport { Spherical } from '../math/Spherical';\n\nfunction OrbitControls( camera, domElement, controler ) {\n\n    this.controler = controler;\n    this.camera = camera;\n    this.domElement = ( domElement !== undefined ) ? domElement : document;\n    this.enable = true;\n    this.target = new Vector3();\n\n    this.minDistance = 0.1;\n    this.maxDistance = Infinity;\n\n    this.minZoom = 0.01;\n    this.maxZoom = Infinity;\n\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI;\n\n    this.minAzimuthAngle = - Infinity;\n    this.maxAzimuthAngle = Infinity;\n\n    this.enableDamping = false;\n    this.dampingFactor = 0.08;\n    this.zoomFactor = 0.2;\n\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    this.enableRotate = true;\n    this.rotateSpeed = 0.8;\n\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0;\n\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0;\n\n    this.enableKeys = true;\n    this.keys = {\n        LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40,\n    };\n    this.mouseButtons = {\n        ORBIT: 0, ZOOM: 1, PAN: 2,\n    };\n\n    // update\n    this._offset = new Vector3();\n    this._spherical = new Spherical();\n    this._sphericalDelta = new Spherical();\n    this._sphericalDump = new Spherical();\n    this._zoomFrag = 0;\n    this._scale = 1;\n    this._panOffset = new Vector3();\n    this._isMouseUp = true;\n\n    // pan\n    this._vPan = new Vector3();\n\n    // state\n    this._rotateStart = new Vector2();\n    this._rotateEnd = new Vector2();\n    this._rotateDelta = new Vector2();\n\n    this._panStart = new Vector2();\n    this._panEnd = new Vector2();\n    this._panDelta = new Vector2();\n\n    this._zoomStart = new Vector2();\n    this._zoomEnd = new Vector2();\n    this._zoomDelta = new Vector2();\n\n    this.STATE = {\n        NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM: 4, TOUCH_PAN: 5,\n    };\n    this._state = this.STATE.NONE;\n\n    this.eventListeners = [\n        { type: 'mousedown', listener: this.onMouseDown.bind( this ) },\n        { type: 'wheel', listener: this.onMouseWheel.bind( this ) },\n        { type: 'keydown', listener: this.onKeyDown.bind( this ) },\n        { type: 'touchstart', listener: this.onTouchStart.bind( this ) },\n        { type: 'touchend', listener: this.onTouchEnd.bind( this ) },\n        { type: 'touchmove', listener: this.onTouchMove.bind( this ) },\n    ];\n\n    this.mouseMoveUpListeners = [\n        { type: 'mousemove', listener: this.onMouseMove.bind( this ) },\n        { type: 'mouseup', listener: this.onMouseUp.bind( this ) },\n    ];\n\n    this.controler.addListeners( this.eventListeners );\n\n    this.update();\n\n}\n\nObject.assign( OrbitControls.prototype, {\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners, this.mouseMoveUpListeners );\n\n    },\n\n    update() {\n\n        if ( ! this.enable ) return;\n\n        const position = this.camera.vec3Position;\n\n        this._offset.copy( position ).sub( this.target );\n        this._spherical.setFromVecor3( this._offset );\n\n        if ( this.autoRotate && this._state === this.STATE.NONE )\n            this.rotateLeft( this.getAutoRotationAngle() );\n\n        this._spherical.theta += this._sphericalDelta.theta;\n        this._spherical.phi += this._sphericalDelta.phi;\n\n        this._spherical.theta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, this._spherical.theta ) );\n        this._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n        this._spherical.makeSafe();\n\n        if ( this._scale !== 1 )\n            this._zoomFrag = this._spherical.radius * ( this._scale - 1 );\n\n        this._spherical.radius += this._zoomFrag;\n\n        this._spherical.radius = Math.max( this.minDistance, Math.min( this.maxDistance, this._spherical.radius ) );\n\n        this.target.add( this._panOffset );\n        this._offset.setFromSpherical( this._spherical );\n        position.copy( this.target ).add( this._offset );\n\n        this.camera.lookAt( this.target );\n\n        if ( this.enableDamping === true ) {\n\n            this._sphericalDump.theta *= ( 1 - this.dampingFactor );\n            this._sphericalDump.phi *= ( 1 - this.dampingFactor );\n            this._zoomFrag *= ( 1 - this.zoomFactor );\n\n            if ( this._isMouseUp ) {\n\n                this._sphericalDelta.theta = this._sphericalDump.theta;\n                this._sphericalDelta.phi = this._sphericalDump.phi;\n\n            } else\n                this._sphericalDelta.set( 0, 0, 0 );\n\n        } else {\n\n            this._sphericalDelta.set( 0, 0, 0 );\n            this._zoomFrag = 0;\n\n        }\n\n        this._scale = 1;\n        this._panOffset.set( 0, 0, 0 );\n\n    },\n\n    getAutoRotationAngle() {\n\n        return 2 * Math.PI / 60 / 60 / this.autoRotateSpeed;\n\n    },\n\n    getZoomScale() {\n\n        return Math.pow( 0.95, this.zoomSpeed ); // eslint-disable-line\n\n    },\n\n    rotateLeft( angle ) {\n\n        this._sphericalDelta.theta -= angle;\n        if ( this.enableDamping )\n            this._sphericalDump.theta = - angle;\n\n    },\n\n    rotateUp( angle ) {\n\n        this._sphericalDelta.phi -= angle;\n        if ( this.enableDamping )\n            this._sphericalDump.phi = - angle;\n\n    },\n\n    panLeft( distance, worldMatrix ) {\n\n        this._vPan.setFromArray( worldMatrix, 0 );\n        this._vPan.multiScalar( - distance );\n\n        this._panOffset.add( this._vPan );\n\n    },\n\n    panUp( distance, worldMatrix ) {\n\n        this._vPan.setFromArray( worldMatrix, 4 );\n        this._vPan.multiScalar( distance );\n\n        this._panOffset.add( this._vPan );\n\n    },\n\n    pan( deltaX, deltaY ) {\n\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        if ( this.camera.isPerspectiveCamera ) {\n\n            const position = this.camera.vec3Position;\n            this._vPan.copy( position ).sub( this.target );\n            let targetDisitance = this._vPan.length();\n\n            targetDisitance *= ( this.camera.fov / 2 ) * ( Math.PI / 180.0 );\n\n            this.panLeft( 2 * deltaX * ( targetDisitance / element.clientHeight ), this.camera.matrix );\n            this.panUp( 2 * deltaY * ( targetDisitance / element.clientHeight ), this.camera.matrix );\n\n        } else if ( this.camera.isOrthographicCamera ) {\n\n            this.panLeft( deltaX * ( this.camera.right - this.camera.left ) / this.camera.zoom / element.clientHeight, this.camera.matrix );\n            this.panUp( deltaY * ( this.camera.top - this.camera.bottom ) / this.camera.zoom / element.clientHeight, this.camera.matrix );\n\n        }\n\n    },\n\n    zoomIn( zoomScale ) {\n\n        if ( this.camera.isPerspectiveCamera )\n            this._scale /= zoomScale;\n        else if ( this.camera.isOrthographicCamera ) {\n\n            this.camera.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.camera.zoom * zoomScale ) );\n            this.camera.updateProjMatrix();\n\n        }\n\n    },\n\n    zoomOut( zoomScale ) {\n\n        if ( this.camera.isPerspectiveCamera )\n            this._scale *= zoomScale;\n        else if ( this.camera.isOrthographicCamera ) {\n\n            this.camera.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.camera.zoom / zoomScale ) );\n            this.camera.updateProjMatrix();\n\n        }\n\n    },\n\n    handleMouseDownRotate( event ) {\n\n        this._rotateStart.set( event.clientX, event.clientY );\n\n    },\n\n    handleMouseDownZoom( event ) {\n\n        this._zoomStart.set( event.clientX, event.clientY );\n\n    },\n\n    handleMouseDownPan( event ) {\n\n        this._panStart.set( event.clientX, event.clientY );\n\n    },\n\n    handleMouseMoveRotate( event ) {\n\n        this._rotateEnd.set( event.clientX, event.clientY );\n        this._rotateDelta.subVectors( this._rotateEnd, this._rotateStart );\n\n        const element = this.domElement === document ? document.body : this.domElement;\n\n        this.rotateLeft( 2 * Math.PI * ( this._rotateDelta.x / element.clientWidth ) * this.rotateSpeed );\n        this.rotateUp( 2 * Math.PI * ( this._rotateDelta.y / element.clientHeight ) * this.rotateSpeed );\n\n        this._rotateStart.copy( this._rotateEnd );\n\n        this.update();\n\n    },\n\n    handleMouseMoveZoom( event ) {\n\n        this._zoomEnd.set( event.clientX, event.clientY );\n        this._zoomDelta.subVectors( this._zoomEnd, this._zoomStart );\n\n        if ( this._zoomDelta.y > 0 )\n            this.zoomIn( this.getZoomScale() );\n        else if ( this._zoomDelta.y < 0 )\n            this.zoomOut( this.getZoomScale() );\n\n        this._zoomStart.copy( this._zoomEnd );\n\n        this.update();\n\n    },\n\n    handleMouseMovePan( event ) {\n\n        this._panEnd.set( event.clientX, event.clientY );\n        this._panDelta.subVectors( this._panEnd, this._panStart );\n\n        this.pan( this._panDelta.x, this._panDelta.y );\n\n        this._panStart.copy( this._panEnd );\n\n        this.update();\n\n    },\n\n    handleMouseWheel( event ) {\n\n        if ( event.deltaY < 0 )\n            this.zoomOut( this.getZoomScale() );\n        else if ( event.deltaY > 0 )\n            this.zoomIn( this.getZoomScale() );\n\n        this.update();\n\n    },\n\n    handleKeyDown( event ) {\n\n        switch ( event.keyCode ) {\n\n        case this.keys.UP:\n            this.pan( 0, this.keyPanSpeed );\n            this.update();\n            break;\n        case this.keys.BOTTOM:\n            this.pan( 0, - this.keyPanSpeed );\n            this.update();\n            break;\n        case this.keys.LEFT:\n            this.pan( this.keyPanSpeed, 0 );\n            this.update();\n            break;\n        case this.keys.RIGHT:\n            this.pan( - this.keyPanSpeed, 0 );\n            this.update();\n            break;\n\n        }\n\n    },\n\n    handleTouchStartRotate( event ) {\n\n        this._rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n    },\n\n    handleTouchStartZoom( event ) {\n\n        const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n        const distance = Math.sqrt( dx * dx + dy * dy );\n\n        this._zoomStart.set( 0, distance );\n\n    },\n\n    handleTouchStartPan( event ) {\n\n        this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n    },\n\n    handleTouchMoveRotate( event ) {\n\n        this._rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        this._rotateDelta.subVectors( this._rotateEnd, this._rotateStart );\n\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        this.rotateLeft( 2 * Math.PI * this._rotateDelta.x / element.clientWidth * this.rotateSpeed );\n        this.rotateUp( 2 * Math.PI * this._rotateDelta.y / element.clientHeight * this.rotateSpeed );\n\n        this._rotateStart.copy( this._rotateEnd );\n\n        this.update();\n\n    },\n\n    handleTouchMoveZoom( event ) {\n\n        const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n        const distance = Math.sqrt( dx * dx + dy * dy );\n\n        this._zoomEnd.set( 0, distance );\n\n        this._zoomDelta.subVectors( this._zoomEnd, this._zoomStart );\n\n        if ( this._zoomDelta.y > 0 )\n            this.zoomOut( this.getZoomScale() );\n        else if ( this._zoomDelta.y < 0 )\n            this.zoomIn( this.getZoomScale() );\n\n        this._zoomStart.copy( this._zoomEnd );\n\n        this.update();\n\n    },\n\n    handleTouchMovePan( event ) {\n\n        this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        this._panDelta.subVectors( this._panEnd, this._panStart );\n\n        this.pan( this._panDelta.x, this._panDelta.y );\n\n        this._panStart.copy( this._panEnd );\n\n        this.update();\n\n    },\n\n    onMouseDown( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n\n        this._isMouseUp = false;\n\n        switch ( event.button ) {\n\n        case this.mouseButtons.ORBIT:\n            if ( this.enableRotate === false ) return;\n\n            this.handleMouseDownRotate( event );\n            this._state = this.STATE.ROTATE;\n            break;\n\n        case this.mouseButtons.ZOOM:\n            if ( this.enableZoom === false ) return;\n\n            this.handleMouseDownZoom( event );\n            this._state = this.STATE.ZOOM;\n            break;\n\n        case this.mouseButtons.PAN:\n            if ( this.enablePan === false ) return;\n\n            this.handleMouseDownPan( event );\n            this._state = this.STATE.PAN;\n            break;\n\n        }\n\n        if ( this._state !== this.STATE.NONE )\n            this.controler.addListeners( this.mouseMoveUpListeners );\n\n    },\n\n    onMouseMove( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n\n        switch ( this._state ) {\n\n        case this.STATE.ROTATE:\n            if ( this.enableRotate === false ) return;\n\n            this.handleMouseMoveRotate( event );\n            break;\n\n        case this.STATE.ZOOM:\n            if ( this.enableZoom === false ) return;\n\n            this.handleMouseMoveZoom( event );\n            break;\n\n        case this.STATE.PAN:\n            if ( this.enablePan === false ) return;\n\n            this.handleMouseMovePan( event );\n            break;\n\n        }\n\n    },\n\n    onMouseUp() {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = true;\n\n        this.controler.removeListeners( this.mouseMoveUpListeners );\n\n        this._state = this.STATE.NONE;\n\n    },\n\n    onMouseWheel( event ) {\n\n        if ( this.enable === false || this.enableZoom === false || ( this._state !== this.STATE.NONE && this._state !== this.STATE.ROTATE ) ) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.handleMouseWheel( event );\n\n    },\n\n    onKeyDown( event ) {\n\n        if ( this.enable === false || this.enableKeys === false || this.enablePan === false ) return;\n\n        this.handleKeyDown( event );\n\n    },\n\n    onTouchStart( event ) {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = false;\n\n        switch ( event.touches.length ) {\n\n        case 1: // one-fingered touch: rotate\n\n            if ( this.enableRotate === false ) return;\n\n            this.handleTouchStartRotate( event );\n\n            this._state = this.STATE.TOUCH_ROTATE;\n\n            break;\n\n        case 2: // two-fingered touch: dolly\n\n            if ( this.enableZoom === false ) return;\n\n            this.handleTouchStartZoom( event );\n\n            this._state = this.STATE.TOUCH_ZOOM;\n\n            break;\n\n        case 3: // three-fingered touch: pan\n\n            if ( this.enablePan === false ) return;\n\n            this.handleTouchStartPan( event );\n\n            this._state = this.STATE.TOUCH_PAN;\n\n            break;\n\n        default:\n\n            this._state = this.STATE.NONE;\n\n        }\n\n    },\n\n    onTouchMove( event ) {\n\n        if ( this.enable === false ) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch ( event.touches.length ) {\n\n        case 1: // one-fingered touch: rotate\n\n            if ( this.enableRotate === false ) return;\n            if ( this._state !== this.STATE.TOUCH_ROTATE ) return;\n            this.handleTouchMoveRotate( event );\n\n            break;\n\n        case 2: // two-fingered touch: dolly\n\n            if ( this.enableZoom === false ) return;\n            if ( this._state !== this.STATE.TOUCH_ZOOM ) return;\n\n            this.handleTouchMoveZoom( event );\n\n            break;\n\n        case 3: // three-fingered touch: pan\n\n            if ( this.enablePan === false ) return;\n            if ( this._state !== this.STATE.TOUCH_PAN ) return;\n\n            this.handleTouchMovePan( event );\n\n            break;\n\n        default:\n\n            this._state = this.STATE.NONE;\n\n        }\n\n    },\n\n    onTouchEnd() {\n\n        if ( this.enable === false ) return;\n\n        this._isMouseUp = true;\n\n        this._state = this.STATE.NONE;\n\n    },\n\n    onContextMenu( event ) {\n\n        if ( this.enable === false ) return;\n        event.preventDefault();\n\n    },\n\n} );\n\nexport { OrbitControls };\n","\nfunction FileLoader( files ) {\n\n    this.files = [];\n    this.items = [];\n    this.addFiles( files );\n\n}\n\nObject.assign( FileLoader, {\n\n    getFilename( url ) {\n\n        if ( url ) {\n\n            const m = url.toString().match( /.*\\/(.+?)\\./ );\n            if ( m && m.length > 1 )\n                return m[ 1 ];\n\n        }\n        return '';\n\n    },\n\n    getExtension( url ) {\n\n        return url.split( '.' ).pop().toLowerCase();\n\n    },\n\n    getBasename( url ) {\n\n        return url.split( /[\\\\/]/ ).pop();\n\n    },\n\n    getBasepath( url ) {\n\n        const basename = FileLoader.getBasename( url );\n        return url.slice( 0, url.length - basename.length );\n\n    },\n\n} );\n\nObject.assign( FileLoader.prototype, {\n\n    addFiles( files ) {\n\n        if ( files && ! Array.isArray( files ) )\n            return this.addFile( files );\n\n        return files && files.forEach( ( file ) => {\n\n            if ( Array.isArray( file ) )\n                return this.addFiles( file );\n            return this.addFile( file );\n\n        } );\n\n    },\n\n    addFile( filepath ) {\n\n        const file = filepath.file || filepath;\n        const type = filepath.type || FileLoader.getExtension( file );\n        const name = filepath.name || FileLoader.getFilename( file );\n        if ( this.files.indexOf( file ) < 0 ) {\n\n            this.files.push( file );\n            this.items.push( { file, type, name } );\n\n        }\n\n    },\n\n    load() {\n\n        const promises = [];\n        const names = [];\n\n        this.items.forEach( ( item ) => {\n\n            const { name, file, type } = item;\n            if ( ! FileLoader.types[ type ] )\n                throw new Error( `unsupport file format \".${type}\", file path: ${file}` );\n\n            const promise = FileLoader.types[ type ]( file );\n            promises.push( promise );\n            names.push( name );\n\n        } );\n\n        return Promise.all( promises )\n            .then( ( files ) => {\n\n                const result = {};\n                files.forEach( ( file, idx ) => {\n\n                    result[ names[ idx ] ] = file;\n\n                } );\n\n                return Promise.resolve( result );\n\n            } );\n\n    },\n\n} );\n\nObject.assign( FileLoader, {\n\n    decodeText( array ) {\n\n        if ( typeof TextDecoder !== 'undefined' )\n            return new TextDecoder().decode( array );\n\n        let s = '';\n        for ( let i = 0, il = array.length; i < il; i ++ )\n            s += String.fromCharCode( array[ i ] );\n\n        return decodeURIComponent( escape( s ) );\n\n    },\n\n    types: {\n\n        obj( file ) {\n\n            return fetch( file )\n                .then( response => response.text() );\n\n        },\n\n        gltf( file ) {\n\n            return fetch( file )\n                .then( response => response.json() )\n                .then( ( json ) => {\n\n                    const buffers = json.buffers;\n                    const loader = new FileLoader();\n                    const basepath = FileLoader.getBasepath( file );\n\n                    for ( let i = 0; i < buffers.length; i ++ ) {\n\n                        const uri = buffers[ i ].uri;\n                        if ( uri.startsWith( 'data:' ) ) continue;\n\n                        const filepath = basepath + uri;\n                        loader.addFile( { file: filepath, type: 'gltf_bin', name: uri } );\n\n                    }\n\n                    const images = json.images || [];\n                    const imageRes = {};\n                    for ( let i = 0; i < images.length; i ++ ) {\n\n                        const uri = images[ i ].uri;\n                        if ( ! uri || uri.startsWith( 'data:' ) ) continue;\n\n                        const filepath = basepath + uri;\n                        imageRes[ uri ] = filepath;\n\n                    }\n\n                    return loader.load().then( ( files ) => {\n\n                        Object.assign( files, imageRes );\n                        json.resources = files; // eslint-disable-line\n                        return json;\n\n                    } );\n\n                } );\n\n        },\n\n        gltf_bin( file ) {\n\n            return fetch( file )\n                .then( response => response.arrayBuffer() );\n\n        },\n\n        glb( file ) {\n\n            return fetch( file )\n                .then( response => response.arrayBuffer() )\n                .then( ( arrayBuffer ) => {\n\n                    const BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n                    const BINARY_EXTENSION_HEADER_LENGTH = 12;\n                    const BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n                    let content = null;\n                    let body = null;\n\n                    const headerView = new DataView( arrayBuffer, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n                    this.header = {\n                        magic: FileLoader.decodeText( new Uint8Array( arrayBuffer.slice( 0, 4 ) ) ),\n                        version: headerView.getUint32( 4, true ),\n                        length: headerView.getUint32( 8, true ),\n                    };\n\n                    if ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC )\n                        throw new Error( 'GLTFLoader: Unsupported glTF-Binary header.' );\n                    else if ( this.header.version < 2.0 )\n                        throw new Error( 'GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n                    const chunkView = new DataView( arrayBuffer, BINARY_EXTENSION_HEADER_LENGTH );\n                    let chunkIndex = 0;\n\n                    while ( chunkIndex < chunkView.byteLength ) {\n\n                        const chunkLength = chunkView.getUint32( chunkIndex, true );\n                        chunkIndex += 4;\n\n                        const chunkType = chunkView.getUint32( chunkIndex, true );\n                        chunkIndex += 4;\n\n                        if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n                            const contentArray = new Uint8Array( arrayBuffer, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n                            content = FileLoader.decodeText( contentArray );\n\n                        } else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n                            const byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                            body = arrayBuffer.slice( byteOffset, byteOffset + chunkLength );\n\n                        }\n\n                        chunkIndex += chunkLength;\n\n                    }\n\n                    if ( content ) {\n\n                        const json = JSON.parse( content );\n                        if ( json.buffers && body )\n                            for ( let i = 0; i < json.buffers.length; i ++ ) {\n\n                                const buffer = json.buffers[ i ];\n                                if ( typeof buffer.uri === 'undefined' ) {\n\n                                    buffer.isParsed = true;\n                                    buffer.dbuffer = body;\n\n                                }\n\n                            }\n\n                        // load outer resource\n                        const buffers = json.buffers;\n                        const loader = new FileLoader();\n                        const basepath = FileLoader.getBasepath( file );\n\n                        for ( let i = 0; i < buffers.length; i ++ ) {\n\n                            if ( buffers[ i ].isParsed ) continue;\n                            const uri = buffers[ i ].uri;\n                            if ( uri.startsWith( 'data:' ) ) continue;\n\n                            const filepath = basepath + uri;\n                            loader.addFile( { file: filepath, type: 'gltf_bin', name: uri } );\n\n                        }\n\n                        const images = json.images || [];\n                        const imageRes = {};\n                        for ( let i = 0; i < images.length; i ++ ) {\n\n                            const uri = images[ i ].uri;\n                            if ( ! uri || uri.startsWith( 'data:' ) ) continue;\n\n                            const filepath = basepath + uri;\n                            imageRes[ uri ] = filepath;\n\n                        }\n\n                        return loader.load().then( ( files ) => {\n\n                            Object.assign( files, imageRes );\n                                    json.resources = files; // eslint-disable-line\n                            return json;\n\n                        } );\n\n                    }\n\n                    throw new Error( 'GLTFLoader: bin file do not have gltf json.' );\n\n                } );\n\n        },\n\n    },\n} );\n\nexport { FileLoader };\n","import { FileLoader } from './Fileloader';\nimport { Mesh } from '../model/Primatives';\n\nfunction LinePaser( ) {\n\n    this.line = '';\n    this.cArray = [];\n\n}\n\nObject.assign( LinePaser.prototype, {\n\n    init( line ) {\n\n        this.line = line.trim().split( ' ' );\n\n    },\n\n    getType() {\n\n        return this.line[ 0 ];\n\n    },\n\n    getFloatData( count ) {\n\n        let length = count;\n        this.cArray = [];\n        while ( length > 0 )\n            this.cArray.unshift( parseFloat( this.line[ length -- ] ) );\n\n        return this.cArray;\n\n    },\n\n} );\n\nconst ObjLoader = {\n    flipYUV: true,\n};\n\nObject.assign( ObjLoader, {\n\n    load( filePath ) {\n\n        const name = 'OBJLOADER';\n        const loader = new FileLoader( { file: filePath, name } );\n        return loader.load()\n            .then( res => ObjLoader.parse( res[ name ] ) );\n\n    },\n\n    parse( objText, flipYUV ) {\n\n        const flip = flipYUV === undefined ? ObjLoader.flipYUV : flipYUV;\n        const lines = objText.split( '\\n' );\n        lines.push( null );\n        let line;\n        let index = 0;\n\n        let currentObject = null;\n        const objects = [];\n\n        let v = [];\n        let vt = [];\n        let vn = [];\n\n        const oVert = [];\n        const oUV = [];\n        const oNorm = [];\n        const oIndex = [];\n\n        const fCache = {};\n        let vertCount = 0;\n        let isQuad = false;\n        let i;\n        let ary;\n        let ind;\n\n        line = lines[ index ++ ];\n        const linePaser = new LinePaser();\n        let type;\n        while ( line !== null ) {\n\n            linePaser.init( line );\n            line = lines[ index ++ ];\n            type = linePaser.getType();\n\n            switch ( type ) {\n\n            case 'v':\n                v = v.concat( linePaser.getFloatData( 3 ) );\n                continue;\n            case 'vt':\n                vt = vt.concat( linePaser.getFloatData( 2 ) );\n                continue;\n            case 'vn':\n                vn = vn.concat( linePaser.getFloatData( 3 ) );\n                continue;\n            case 'f':\n                linePaser.line.shift();\n\n                if ( linePaser.line.length < 3 ) // less than 3 vertex\n                    continue;\n\n                isQuad = false;\n\n                for ( i = 0; i < linePaser.line.length; i ++ ) {\n\n                    if ( i > 3 ) {\n\n                        console.error( 'OBJ Loader not support multiple vertices face!' );\n                        break;\n\n                    }\n\n                    if ( i === 3 && ! isQuad ) {\n\n                        i = 2;\n                        isQuad = true;\n\n                    }\n\n                    if ( linePaser.line[ i ] in fCache )\n                        oIndex.push( fCache[ linePaser.line[ i ] ] );\n                    else {\n\n                        ary = linePaser.line[ i ].split( '/' );\n\n                        ind = ( parseInt( ary[ 0 ], 10 ) - 1 ) * 3;\n                        oVert.push( v[ ind ], v[ ind + 1 ], v[ ind + 2 ] );\n\n                        ind = ( parseInt( ary[ 2 ], 10 ) - 1 ) * 3;\n                        oNorm.push( vn[ ind ], vn[ ind + 1 ], vn[ ind + 2 ] );\n\n                        if ( ary[ 1 ] !== '' ) {\n\n                            ind = ( parseInt( ary[ 1 ], 10 ) - 1 ) * 2;\n                            oUV.push( vt[ ind ], flip ? ( 1 - vt[ ind + 1 ] ) : vt[ ind + 1 ] );\n\n                        }\n\n                        fCache[ linePaser.line[ i ] ] = vertCount;\n                        oIndex.push( vertCount );\n                        vertCount ++;\n\n                    }\n\n                    if ( i === 3 && isQuad )\n                        oIndex.push( fCache[ linePaser.line[ 0 ] ] );\n\n                }\n                continue;\n            case 'o':\n            case 'g':\n                if ( currentObject !== null ) {\n\n                    const attribArrays = {\n                        a_position: { data: oVert.slice() },\n                        indices: { data: oIndex.slice() },\n                    };\n\n                    if ( oUV.length > 0 )\n                        attribArrays.a_uv = { data: oUV.slice() };\n\n                    if ( oNorm.length > 0 )\n                        attribArrays.a_normal = { data: oNorm.slice() };\n\n                    objects.push( new Mesh( currentObject, attribArrays ) );\n\n                }\n\n                currentObject = linePaser.line[ 1 ];\n                oVert.length = 0;\n                oIndex.length = 0;\n                oUV.length = 0;\n                oNorm.length = 0;\n                vertCount = 0;\n                continue;\n            default:\n                continue;\n\n            }\n\n        }\n\n        if ( currentObject !== null ) {\n\n            const attribArrays = {\n                a_position: { data: oVert },\n                indices: { data: oIndex },\n            };\n\n            if ( oUV.length > 0 )\n                attribArrays.a_uv = { data: oUV };\n\n            if ( oNorm.length > 0 )\n                attribArrays.a_normal = { data: oNorm };\n\n            objects.push( new Mesh( currentObject, attribArrays ) );\n\n        }\n\n        return objects;\n\n    },\n\n} );\n\nexport { ObjLoader };\n","import { Transform } from '../model/Transform';\nimport { Matrix4 } from '../math/Matrix4';\n\nlet nodeCount = 0;\n\nfunction Node( nameModel ) {\n\n    if ( typeof nameModel === 'string' )\n        this.name = nameModel;\n    else if ( !! nameModel && nameModel.isModel )\n        this.setModel( nameModel );\n    else if ( !! nameModel && nameModel.isCamera )\n        this.setCamera( nameModel );\n\n    this.name = this.name || `NODE_${nodeCount ++}`;\n    this.children = [];\n    this.parent = null;\n    this.transform = this.transform ? this.transform : new Transform();\n    this._updatedThisFrame = false;\n    this.afterUpdateMatrix = [];\n\n}\n\nObject.defineProperties( Node.prototype, {\n\n    matrix: {\n\n        get() {\n\n            return this.transform.matrix;\n\n        },\n\n    },\n\n    worldMatrix: {\n\n        get() {\n\n            return this.transform.worldMatrix;\n\n        },\n\n    },\n\n    needUpdateWorldMatrix: {\n\n        get() {\n\n            return this.transform.needUpdateWorldMatrix;\n\n        },\n\n        set( v ) {\n\n            this.transform.needUpdateWorldMatrix = !! v;\n\n        },\n\n    },\n\n    position: {\n\n        get() {\n\n            return this.transform.position;\n\n        },\n\n        set( v ) {\n\n            this.setPosition( v );\n\n        },\n\n    },\n\n    quaternion: {\n\n        get() {\n\n            return this.transform.quaternion;\n\n        },\n\n        set( v ) {\n\n            this.setQuaternion( v );\n\n        },\n\n    },\n\n    scale: {\n\n        get() {\n\n            return this.transform.scale;\n\n        },\n\n        set( v ) {\n\n            return this.setScale( v );\n\n        },\n\n    },\n\n    updatedThisFrame: {\n\n        get() {\n\n            return this._updatedThisFrame;\n\n        },\n\n    },\n\n} );\n\nObject.assign( Node, {\n\n    remove( node ) {\n\n        if ( node.parent ) {\n\n            const idx = node.parent.children.indexOf( node );\n\n            if ( idx > - 1 )\n                node.parent.children.splice( idx, 1 );\n\n            node.parent = null; // eslint-disable-line\n\n        } else\n            node = undefined; // eslint-disable-line\n\n    },\n\n    updateWorldMatrix( node, parent ) {\n\n        if ( node.needUpdateWorldMatrix )\n\n            if ( parent ) {\n\n                node.transform.updateMatrix();\n                Matrix4.mult( node.worldMatrix.raw, parent.worldMatrix.raw, node.matrix.raw );\n\n            } else\n                Matrix4.copy( node.worldMatrix.raw, node.matrix.raw );\n\n    },\n\n    updateNormalAndDirection( node ) {\n\n        if ( node.needUpdateWorldMatrix ) {\n\n            node.transform.updateNormalMatrix().updateDirection();\n            node.needUpdateWorldMatrix = false; // eslint-disable-line\n            node._updatedThisFrame = true; // eslint-disable-line\n\n        } else\n            node._updatedThisFrame = false; // eslint-disable-line\n\n    },\n\n    updateMatrixMarker( node, parent ) {\n\n        if ( node.transform._needUpdateMatrix || ( parent && parent.needUpdateWorldMatrix ) )\n            node.needUpdateWorldMatrix = true; // eslint-disable-line\n\n    },\n\n    afterUpdateMatrix( node ) {\n\n        for ( let i = 0; i < node.afterUpdateMatrix.length; i ++ ) {\n\n            const { handler, trigerNodes } = node.afterUpdateMatrix[ i ];\n            if ( typeof handler === 'function' && trigerNodes.filter( n => n.updatedThisFrame ).length > 0 )\n                handler( node, trigerNodes );\n\n        }\n\n    },\n\n} );\n\nObject.assign( Node.prototype, {\n\n    traverse( executeFun ) {\n\n        executeFun( this, this.parent );\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traverse( executeFun );\n\n    },\n\n    traversePostOrder( executeFun ) {\n\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traversePostOrder( executeFun );\n        executeFun( this, this.parent );\n\n    },\n\n    traverseTwoExeFun( execuFunPre, execuFunPost ) {\n\n        execuFunPre( this, this.parent );\n        for ( let i = 0; i < this.children.length; i ++ )\n            this.children[ i ].traverseTwoExeFun( execuFunPre, execuFunPost );\n        execuFunPost( this, this.parent );\n\n    },\n\n    remove( node = this ) {\n\n        Node.remove( node );\n        return this;\n\n    },\n\n    addToParent( parent ) {\n\n        if ( this.parent )\n            Node.remove( this );\n\n        parent.children.push( this );\n        node.parent = this; // eslint-disable-line\n\n        return this;\n\n    },\n\n    addChild( nodelike ) {\n\n        let node = nodelike;\n        if ( typeof nodelike === 'string' || nodelike.isModel || nodelike.isCamera )\n            node = new Node( nodelike );\n\n        if ( node.parent )\n            Node.remove( node );\n\n        this.children.push( node );\n        node.parent = this;\n\n        return this;\n\n    },\n\n    setPosition( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setPosition( ...args[ 0 ].position );\n\n        this.transform.setPosition( ...args );\n        return this;\n\n    },\n\n    setQuaternion( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setQuaternion( ...args[ 0 ].quaternion );\n\n        this.transform.setQuaternion( ...args );\n        return this;\n\n    },\n\n    setScale( ...args ) {\n\n        if ( args[ 0 ] instanceof Node )\n            return this.setScale( ...args[ 0 ].scale );\n\n        this.transform.setScale( ...args );\n        return this;\n\n    },\n\n    updateMatrix() {\n\n        this.traverse( Node.updateMatrixMarker );\n        this.traverseTwoExeFun( Node.updateWorldMatrix, Node.updateNormalAndDirection );\n        this.traverse( Node.afterUpdateMatrix );\n        return this;\n\n    },\n\n    setModel( model ) {\n\n        if ( this.transform )\n            model.setTransform( this.transform.clone() );\n\n        model.node = this; // eslint-disable-line\n        this.model = model;\n        this.name = this.model.name || `NODE_${nodeCount ++}_MODEL`;\n        this.transform = this.model.transform;\n        this.needUpdateWorldMatrix = true;\n\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        if ( this.transform )\n            camera.setTransform( this.transform.clone() );\n\n        camera.node = this; // eslint-disable-line\n        this.camera = camera;\n        this.name = this.camera.name || `NODE_${nodeCount ++}_CAMERA`;\n        this.camera.name = this.name;\n        this.transform = this.camera.transform;\n        this.needUpdateWorldMatrix = true;\n\n        return this;\n\n    },\n\n    findInChildren( property, value ) {\n\n        let finded = false;\n\n        function find( node ) {\n\n            if ( ! finded )\n                if ( node[ property ] === value )\n                    finded = node;\n\n        }\n\n        this.traverse( find );\n\n        return finded;\n\n    },\n\n} );\n\nexport { Node };\n","/* eslint no-loop-func: 0 */\nimport { getTypedArrayTypeFromGLType } from '../renderer/typedArray';\nimport { ShaderParams, TextureFilters } from '../renderer/constant';\nimport { Model } from '../model/Model';\nimport { Mesh } from '../model/Primatives';\nimport { Node } from '../scene/Node';\nimport { Matrix4 } from '../math/Matrix4';\nimport { FileLoader } from './Fileloader';\nimport { PerspectiveCamera, OrthographicCamera } from '../camera/Camera';\nimport { PMath } from '../math/Math';\n\nfunction GLTFLoader() {\n\n    this.currentSceneName = 'null';\n\n}\n\nfunction errorMiss( nodeType, index ) {\n\n    if ( index !== undefined )\n        console.error( `glTF not have ${nodeType} on index ${index}` );\n    else\n        console.error( `glTF not have ${nodeType} property` );\n    return false;\n\n}\n\nObject.defineProperties( GLTFLoader, {\n\n    version: {\n\n        get() {\n\n            if ( this.version )\n                return this.version;\n            else if ( this.json ) {\n\n                if ( ! this.json.asset )\n                    return errorMiss( 'asset' );\n\n                this.version = this.json.asset.version;\n                if ( this.json.asset.minVersion )\n                    this.version += `\\r minVersion${this.json.asset.minVersion}`;\n\n                return this.version;\n\n            }\n\n            console.warn( 'glTF not loaded.' );\n            return null;\n\n        },\n    },\n\n    generator: {\n\n        get() {\n\n            return this._generator;\n\n        },\n\n    },\n\n} );\n\nObject.assign( GLTFLoader.prototype, {\n\n    load( file, sceneId ) {\n\n        const name = 'GLTFLOADER';\n        const loader = new FileLoader( { file, name } );\n        return loader.load()\n            .then( res => this.parse( res[ name ], sceneId ) );\n\n    },\n\n    parse( json, sceneId ) {\n\n        this.gltf = json;\n\n        const { version, generator } = this.gltf.asset;\n        this._generator = generator;\n        if ( version !== '2.0' ) {\n\n            console.error( `GlTFLoader only support glTF 2.0 for now! Received glTF version: ${this.version}` );\n            return false;\n\n        }\n\n        const result = {\n            nodes: this.parseScene( sceneId ),\n            animations: this.parseAnimations(),\n            name: this.currentSceneName,\n        };\n\n        return this.convertToNode( result );\n\n    },\n\n    parseAnimations() {\n\n        const result = [];\n        const animations = this.gltf.animations;\n        if ( animations )\n            for ( let i = 0; i < animations.length; i ++ ) {\n\n                const animation = animations[ i ];\n                const { name, channels, samplers } = animation;\n                const clips = [];\n                if ( channels && samplers )\n                    for ( let j = 0; j < channels.length; j ++ ) {\n\n                        const channel = channels[ j ];\n                        const sampler = samplers[ channel.sampler ];\n                        if ( ! sampler ) {\n\n                            errorMiss( `animations[${i}].channels[${j}].sampler`, channel.sampler );\n                            continue;\n\n                        }\n\n                        const input = this.parseAccessor( sampler.input ).data;\n                        const outputData = this.parseAccessor( sampler.output );\n                        const output = outputData.data;\n                        const numComponents = outputData.numComponents;\n                        const interpolation = sampler.interpolation || 'LINEAR';\n                        const gltfNodeIdx = channel.target.node;\n                        const path = channel.target.path;\n\n                        if ( ! input || ! output ) continue;\n\n                        let combinedOutput = output;\n                        if ( numComponents !== 1 || input.length !== output.length ) {\n\n                            const numComp = output.length / input.length;\n                            combinedOutput = [];\n                            for ( let k = 0; k < input.length; k ++ )\n                                combinedOutput.push( output.slice( numComp * k, numComp * ( k + 1 ) ) );\n\n                        }\n\n                        let nodeProperty = path;\n                        const extras = {};\n                        switch ( path ) {\n\n                        case 'translation':\n                            nodeProperty = 'position';\n                            break;\n                        case 'rotation':\n                            nodeProperty = 'quaternion';\n                            break;\n                        case 'scale':\n                            nodeProperty = 'scale';\n                            break;\n                        case 'weights':\n                            nodeProperty = 'weights';\n                            extras.uniformName = GLTFLoader.MORPH_WEIGHT_UNIFORM;\n                            break;\n                        default:\n                            console.error( `unsupported animation sampler path ${path}` );\n                            nodeProperty = false;\n\n                        }\n\n                        if ( ! nodeProperty ) continue;\n\n                        const clip = {\n                            times: input,\n                            values: combinedOutput,\n                            findFlag: GLTFLoader.GLTF_NODE_INDEX_PROPERTY,\n                            findValue: gltfNodeIdx,\n                            targetProp: nodeProperty,\n                            method: interpolation,\n                            extras,\n                        };\n\n                        clips.push( clip );\n\n                    }\n\n                result.push( {\n                    name: name || String( i ),\n                    clips,\n                } );\n\n            }\n\n        return result;\n\n    },\n\n    parseScene( sceneId ) {\n\n        const loadScene = sceneId || this.gltf.scene || 0;\n        const scene = this.gltf.scenes[ loadScene ];\n\n        if ( typeof scene === 'undefined' )\n            return errorMiss( 'scene', loadScene );\n\n        this.currentSceneName = scene.name || 'GLTF_NO_NAME_SCENE';\n\n        const result = [];\n        const nodes = scene.nodes;\n        for ( let i = 0; i < nodes.length; i ++ ) {\n\n            const node = this.parseNode( nodes[ i ] );\n            if ( node )\n                result.push( node );\n\n        }\n\n        return result;\n\n    },\n\n    convertToNode( infos ) {\n\n        const rootNode = new Node( infos.name );\n        const nodes = infos.nodes;\n        const animations = infos.animations;\n        const textures = [];\n        const skins = [];\n        const cameras = [];\n\n        function parseNode( nodeInfo, parentNode ) {\n\n            const node = new Node( nodeInfo.name );\n\n            node[ GLTFLoader.GLTF_NODE_INDEX_PROPERTY ] = nodeInfo.nodeId;\n\n            if ( nodeInfo.matrix ) {\n\n                nodeInfo.translation = [ 0, 0, 0 ]; // eslint-disable-line\n                nodeInfo.rotation = [ 0, 0, 0, 1 ]; // eslint-disable-line\n                nodeInfo.scale = [ 1, 1, 1 ]; // eslint-disable-line\n                Matrix4.decompose( nodeInfo.matrix, nodeInfo.translation, nodeInfo.rotation, nodeInfo.scale );\n\n            }\n\n            if ( nodeInfo.translation )\n                node.position = nodeInfo.translation;\n            if ( nodeInfo.rotation )\n                node.quaternion = nodeInfo.rotation;\n            if ( nodeInfo.scale )\n                node.scale = nodeInfo.scale;\n\n            parentNode.addChild( node );\n\n            if ( nodeInfo.camera ) {\n\n                const camera = nodeInfo.camera;\n                if ( camera.type === 'perspective' ) {\n\n                    const {\n                        yfov, znear, aspectRatio, zfar, name,\n                    } = camera;\n                    const fov = PMath.radian2Degree( yfov );\n                    const fixAspectRatio = typeof aspectRatio !== 'undefined';\n                    const far = zfar === undefined ? Number.POSITIVE_INFINITY : zfar;\n                    const perspectiveCamera = new PerspectiveCamera( fov, aspectRatio, znear, far, fixAspectRatio );\n                    perspectiveCamera.name = name;\n                    node.setCamera( perspectiveCamera );\n                    perspectiveCamera.rawData = camera;\n                    cameras.push( perspectiveCamera );\n\n                }\n\n                if ( camera.type === 'orthographic' ) {\n\n                    const {\n                        name, xmag, ymag, zfar, znear,\n                    } = camera;\n                    const orthographicCamera = new OrthographicCamera( ymag, xmag / ymag, znear, zfar, true );\n                    orthographicCamera.name = name;\n                    node.setCamera( orthographicCamera );\n                    orthographicCamera.rawData = camera;\n                    cameras.push( orthographicCamera );\n\n                }\n\n            }\n            if ( nodeInfo.primitives ) {\n\n                const models = [];\n                for ( let i = 0; i < nodeInfo.primitives.length; i ++ ) {\n\n                    const primitive = nodeInfo.primitives[ i ];\n                    const { attribArrays, modelName, drawMode } = primitive;\n                    if ( ! primitive.attribArrays.mesh ) {\n\n                        const mesh = new Mesh( primitive.meshName, attribArrays );\n                        primitive.attribArrays = { attribArrays, mesh };\n\n                    }\n\n                    const model = new Model( primitive.attribArrays.mesh );\n                    model.name = modelName;\n                    model.drawMode = drawMode;\n\n                    const uniformobj = {};\n                    const skinDefines = ( nodeInfo.skin && nodeInfo.skin.defines ) || [];\n                    model.defines = primitive.defines.concat( skinDefines );\n                    // parse material\n                    if ( primitive.material ) {\n\n                        const {\n                            baseColorTexture, baseColorFactor, metallicFactor, roughnessFactor, doubleSided,\n                            metallicRoughnessTexture, normalTexture, occlusionTexture, emissiveTexture, enableBlend, alphaCutoff,\n                        } = primitive.material;\n\n                        model.mesh.cullFace = ! doubleSided;\n                        model.mesh.sampleBlend = !! enableBlend;\n\n                        if ( alphaCutoff !== undefined )\n                            uniformobj[ GLTFLoader.ALPHA_CUTOFF_UNIFORM ] = alphaCutoff;\n                        uniformobj[ GLTFLoader.BASE_COLOR_UNIFORM ] = baseColorFactor;\n                        uniformobj[ GLTFLoader.METALROUGHNESS_UNIFORM ] = [ metallicFactor, roughnessFactor ];\n\n                        if ( baseColorTexture && baseColorTexture.texture ) {\n\n                            const idx = textures.indexOf( baseColorTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( baseColorTexture.texture );\n                                baseColorTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( baseColorTexture.textureIdx === undefined ) baseColorTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.BASE_COLOR_TEXTURE_UNIFORM ] = baseColorTexture.textureIdx;\n\n                        }\n\n                        if ( metallicRoughnessTexture && metallicRoughnessTexture.texture ) {\n\n                            const idx = textures.indexOf( metallicRoughnessTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( metallicRoughnessTexture.texture );\n                                metallicRoughnessTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( metallicRoughnessTexture.textureIdx === undefined ) metallicRoughnessTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.METALROUGHNESS_TEXTURE_UNIFORM ] = metallicRoughnessTexture.textureIdx;\n\n                        }\n\n                        if ( normalTexture && normalTexture.texture ) {\n\n                            const idx = textures.indexOf( normalTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( normalTexture.texture );\n                                normalTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( normalTexture.textureIdx === undefined ) normalTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.NORMAL_TEXTURE_UNIFORM ] = normalTexture.textureIdx;\n                            uniformobj[ GLTFLoader.NORMAL_SCALE_UNIFORM ] = normalTexture.scale;\n\n                        }\n\n                        if ( occlusionTexture && occlusionTexture.texture ) {\n\n                            const idx = textures.indexOf( occlusionTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( occlusionTexture.texture );\n                                occlusionTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( occlusionTexture.textureIdx === undefined ) occlusionTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.OCCLUSION_TEXTURE_UNIFORM ] = occlusionTexture.textureIdx;\n                            uniformobj[ GLTFLoader.OCCLUSION_FACTOR_UNIFORM ] = occlusionTexture.strength;\n\n                        }\n\n                        if ( emissiveTexture && emissiveTexture.texture ) {\n\n                            const idx = textures.indexOf( emissiveTexture.texture );\n                            if ( idx < 0 ) {\n\n                                textures.push( emissiveTexture.texture );\n                                emissiveTexture.textureIdx = textures.length - 1;\n\n                            }\n                            if ( ! model.textures ) model.textures = {};\n                            if ( emissiveTexture.textureIdx === undefined ) emissiveTexture.textureIdx = idx;\n                            model.textures[ GLTFLoader.EMISSIVE_TEXTURE_UNIFORM ] = emissiveTexture.textureIdx;\n                            uniformobj[ GLTFLoader.EMISSIVE_FACTOR_UNIFORM ] = emissiveTexture.emissiveFactor;\n\n                        }\n\n\n                    }\n\n                    // morph targets\n                    if ( primitive.weights )\n                        uniformobj[ GLTFLoader.MORPH_WEIGHT_UNIFORM ] = primitive.weights;\n\n                    model.setUniformObj( uniformobj );\n\n                    if ( nodeInfo.primitives.length < 2 )\n                        node.setModel( model );\n                    else\n                        node.addChild( model );\n\n                    models.push( model );\n\n                }\n\n                if ( node.children.length > 0 )\n                    node.gltfPrimitives = node.children;\n\n                if ( nodeInfo.skin )\n\n                    if ( skins.indexOf( nodeInfo.skin ) > - 1 )\n                        nodeInfo.skin.models.push( ...models );\n                    else {\n\n                        node.skin = Object.assign( nodeInfo.skin, { models } );\n                        skins.push( node.skin );\n\n                    }\n\n\n            }\n            return node;\n\n        }\n\n        function trivarse( trivarseFun, parentNode, nodeInfos ) {\n\n            for ( let i = 0; i < nodeInfos.length; i ++ ) {\n\n                const node = trivarseFun( nodeInfos[ i ], parentNode );\n                trivarse( trivarseFun, node, nodeInfos[ i ].children );\n\n            }\n\n        }\n\n        trivarse( parseNode, rootNode, nodes );\n\n        // apply skins\n        if ( skins.length ) {\n\n            const handlers = []; // help uglify use different name\n            for ( let i = 0; i < skins.length; i ++ ) {\n\n                const {\n                    joints, skeleton, inverseBindMatrices, models,\n                } = skins[ i ];\n\n                const jointNum = joints.length;\n                const globalJointTransformNodes = [];\n                for ( let j = 0; j < jointNum; j ++ )\n                    globalJointTransformNodes[ j ] = rootNode.findInChildren( GLTFLoader.GLTF_NODE_INDEX_PROPERTY, joints[ j ] );\n\n                let skeletonNode;\n                if ( skeleton !== GLTFLoader.SCENE_ROOT_SKELETON )\n                    skeletonNode = rootNode.findInChildren( GLTFLoader.GLTF_NODE_INDEX_PROPERTY, skeleton );\n                else\n                    skeletonNode = rootNode;\n                skins[ i ].skeletonNode = skeletonNode; // do not know how to use it\n\n                const frag = new Array( 16 );\n                const fragWorld = new Array( 16 );\n                handlers[ i ] = function updateJointUniformFunc() {\n\n                    for ( let k = 0; k < models.length; k ++ ) {\n\n                        const model = models[ k ];\n                        const globalTransformNode = model.node;\n                        let jointMats = [];\n                        Matrix4.invert( fragWorld, globalTransformNode.transform.getWorldMatrix() );\n\n                        for ( let n = 0; n < jointNum; n ++ ) {\n\n                            Matrix4.mult( frag, fragWorld, globalJointTransformNodes[ n ].transform.getWorldMatrix() );\n                            if ( inverseBindMatrices[ n ] !== GLTFLoader.IDENTITY_INVERSE_BIND_MATRICES )\n                                Matrix4.mult( frag, frag, inverseBindMatrices[ n ] );\n                            jointMats = jointMats.concat( frag );\n\n                        }\n\n                        const uniformObj = {};\n                        uniformObj[ GLTFLoader.JOINT_MATRICES_UNIFORM ] = jointMats;\n                        model.setUniformObj( uniformObj );\n\n                    }\n\n                };\n\n                rootNode.afterUpdateMatrix.push( {\n                    type: 'skin', skinName: skins[ i ].name, handler: handlers[ i ], trigerNodes: [ skeletonNode, ...globalJointTransformNodes ],\n                } );\n\n            }\n\n        }\n\n\n        // animations\n        for ( let i = 0; i < animations.length; i ++ ) {\n\n            const { clips } = animations[ i ];\n            let animateMaxTime = Number.NEGATIVE_INFINITY;\n            let animateMinTime = Number.POSITIVE_INFINITY;\n            for ( let j = 0; j < clips.length; j ++ ) {\n\n                const {\n                    findFlag, findValue, targetProp, times, extras, // method,\n                } = clips[ j ];\n\n                const node = rootNode.findInChildren( findFlag, findValue );\n                let targetNodes = [ node ];\n                if ( ! node.model && node.gltfPrimitives )\n                    targetNodes = node.gltfPrimitives;\n\n                let setTarget;\n                let resetTarget;\n                if ( targetProp === 'weights' ) {\n\n                    const resetObj = {};\n                    resetObj[ GLTFLoader.MORPH_WEIGHT_UNIFORM ] = targetNodes[ 0 ].model.uniformObj[ GLTFLoader.MORPH_WEIGHT_UNIFORM ];\n                    resetTarget = function () {\n\n                        targetNodes.forEach( ( n ) => {\n\n                            n.model.setUniformObj( resetObj );\n\n                        } );\n\n                    };\n\n                    setTarget = function ( v ) {\n\n                        const uniformobj = {};\n                        uniformobj[ extras.uniformName ] = v;\n\n                        targetNodes.forEach( ( n ) => {\n\n                            n.model.setUniformObj( uniformobj );\n\n                        } );\n\n                    };\n\n                } else {\n\n                    const defaultValues = [];\n                    for ( let m = 0; m < targetNodes.length; m ++ )\n                        defaultValues[ m ] = targetNodes[ m ][ targetProp ];\n\n                    resetTarget = function () {\n\n                        for ( let m = 0; m < targetNodes.length; m ++ )\n                            targetNodes[ m ][ targetProp ] = defaultValues[ m ];\n\n                    };\n\n                    setTarget = function ( v ) {\n\n                        targetNodes.forEach( ( n ) => {\n\n                            n[ targetProp ] = v; // eslint-disable-line\n\n                        } );\n\n                    };\n\n                }\n\n                animateMinTime = animateMinTime < times[ 0 ] ? animateMinTime : times[ 0 ];\n                animateMaxTime = animateMaxTime > times[ times.length - 1 ] ? animateMaxTime : times[ times.length - 1 ];\n\n                Object.assign( clips[ j ], { setTarget, resetTarget } );\n\n            }\n\n            Object.assign( animations[ i ], { animateMinTime, animateMaxTime } );\n\n        }\n\n        const animas = { animations, type: 'gltf' };\n        return {\n            rootNode, textures, animations: animas, cameras,\n        };\n\n    },\n\n    parseNode( nodeId ) {\n\n        const node = this.gltf.nodes[ nodeId ];\n        if ( ! node )\n            return errorMiss( 'node', nodeId );\n\n        if ( node.isParsed )\n            return node.dnode;\n\n        const {\n            name, matrix, translation, rotation, scale,\n        } = node;\n\n        const dnode = {\n            name,\n            matrix,\n            translation,\n            rotation,\n            scale,\n            nodeId,\n        };\n\n        if ( node.camera !== undefined )\n            dnode.camera = this.parseCamera( node.camera );\n\n        if ( node.mesh !== undefined )\n            dnode.primitives = this.parseMesh( node.mesh );\n\n        if ( node.skin !== undefined ) {\n\n            const skin = this.parseSkin( node.skin );\n            if ( skin )\n                dnode.skin = skin;\n\n        }\n\n        dnode.children = [];\n        if ( node.children )\n            for ( let i = 0; i < node.children.length; i ++ )\n                dnode.children.push( this.parseNode( node.children[ i ] ) );\n\n        node.dnode = dnode;\n        node.isParsed = true;\n\n        return node.dnode;\n\n    },\n\n    parseCamera( cameraId ) {\n\n        const camera = this.gltf.cameras[ cameraId ];\n\n        if ( ! camera )\n            return errorMiss( 'camera', cameraId );\n\n        if ( camera.isParsed )\n            return camera.dcamera;\n\n        camera.isParsed = true;\n        camera.dcamera = false;\n\n        const {\n            name, type, perspective, orthographic,\n        } = camera;\n\n        if ( type === 'perspective' && perspective ) {\n\n            const {\n                aspectRatio, yfov, zfar, znear,\n            } = perspective;\n            camera.dcamera = Object.assign( {}, {\n                name,\n                type,\n                yfov,\n                znear,\n                aspectRatio,\n                zfar,\n            } );\n\n        } else if ( type === 'orthographic' && orthographic ) {\n\n            const {\n                xmag, ymag, zfar, znear,\n            } = orthographic;\n            camera.dcamera = Object.assign( {}, {\n                name,\n                type,\n                xmag,\n                ymag,\n                zfar,\n                znear,\n            } );\n\n        }\n\n        return camera.dcamera;\n\n    },\n\n    parseSkin( skinId ) {\n\n        const skin = this.gltf.skins[ skinId ];\n\n        if ( ! skin )\n            return errorMiss( 'skin', skinId );\n\n        if ( skin.isParsed )\n            return skin.dskin;\n\n        const {\n            name, joints, inverseBindMatrices, skeleton,\n        } = skin;\n\n        if ( ! joints )\n            return errorMiss( 'skin.joints', skinId );\n\n        skin.isParsed = true;\n        skin.dskin = false;\n        let dskin = { name, joints, defines: [ GLTFLoader.getJointsNumDefine( joints.length ) ] };\n        dskin.skeleton = skeleton === undefined ? GLTFLoader.SCENE_ROOT_SKELETON : skeleton;\n        dskin.inverseBindMatrices = GLTFLoader.IDENTITY_INVERSE_BIND_MATRICES;\n\n        if ( inverseBindMatrices !== undefined ) {\n\n            const accessor = this.parseAccessor( inverseBindMatrices );\n            if ( accessor ) {\n\n                const array = accessor.data;\n                const matrices = [];\n                for ( let i = 0; i < array.length; i += 16 )\n                    matrices.push( array.slice( i, i + 16 ) );\n\n                dskin.inverseBindMatrices = matrices;\n\n            } else\n                dskin = false;\n\n        }\n\n        skin.dskin = dskin;\n        return skin.dskin;\n\n    },\n\n    parseMesh( meshId ) {\n\n        const mesh = this.gltf.meshes[ meshId ];\n\n        if ( ! mesh )\n            return errorMiss( 'mesh', meshId );\n\n        if ( mesh.isParsed )\n            return mesh.dprimitives;\n\n        const primitives = mesh.primitives;\n        const dprimitives = [];\n        for ( let i = 0; i < primitives.length; i ++ ) {\n\n            const primitive = primitives[ i ];\n            const {\n                attributes, indices, material, mode, name, targets,\n            } = primitive;\n\n            const dprimitive = {\n                attribArrays: {},\n                defines: [],\n            };\n            let hasNormal = false;\n            let hasTangent = false;\n            let texCoordNum = 0;\n            let jointVec8 = false;\n            let vertexColor = 0;\n            Object.keys( attributes ).forEach( ( attribute ) => {\n\n                const accessor = this.parseAccessor( attributes[ attribute ] );\n\n                if ( accessor ) {\n\n                    let attribName;\n                    switch ( attribute ) {\n\n                    case 'POSITION':\n                        attribName = ShaderParams.ATTRIB_POSITION_NAME;\n                        break;\n\n                    case 'NORMAL':\n                        attribName = ShaderParams.ATTRIB_NORMAL_NAME;\n                        hasNormal = true;\n                        break;\n\n                    case 'TANGENT':\n                        attribName = ShaderParams.ATTRIB_TANGENT_NAME;\n                        hasTangent = true;\n                        break;\n\n                    case 'TEXCOORD_0':\n                        attribName = ShaderParams.ATTRIB_UV_NAME;\n                        texCoordNum ++;\n                        break;\n\n                    case 'TEXCOORD_1':\n                        attribName = ShaderParams.ATTRIB_UV_1_NAME;\n                        texCoordNum ++;\n                        break;\n\n                    case 'JOINTS_0':\n                        attribName = ShaderParams.ATTRIB_JOINT_0_NAME;\n                        break;\n\n                    case 'JOINTS_1':\n                        attribName = ShaderParams.ATTRIB_JOINT_1_NAME;\n                        jointVec8 = true;\n                        break;\n\n                    case 'WEIGHTS_0':\n                        attribName = ShaderParams.ATTRIB_WEIGHT_0_NAME;\n                        break;\n\n                    case 'WEIGHTS_1':\n                        attribName = ShaderParams.ATTRIB_WEIGHT_1_NAME;\n                        break;\n\n                    case 'COLOR_0':\n                        attribName = ShaderParams.ATTRIB_VERTEX_COLOR_NAME;\n                        vertexColor = accessor.numComponents;\n                        break;\n\n                    default:\n                        attribName = attribute;\n\n                    }\n\n                    dprimitive.attribArrays[ attribName ] = accessor;\n\n                }\n\n            } );\n\n            if ( hasNormal ) dprimitive.defines.push( GLTFLoader.getHasNormalDefine() );\n            if ( hasTangent ) dprimitive.defines.push( GLTFLoader.getHasTangentDefine() );\n            if ( texCoordNum ) dprimitive.defines.push( GLTFLoader.getTexCoordDefine( texCoordNum ) );\n            if ( jointVec8 ) dprimitive.defines.push( GLTFLoader.getJointVec8Define() );\n            if ( vertexColor ) dprimitive.defines.push( GLTFLoader.getVertexColorDefine( vertexColor ) );\n\n            if ( indices !== undefined ) {\n\n                const accessor = this.parseAccessor( indices );\n                if ( accessor )\n                    dprimitive.attribArrays.indices = accessor;\n\n            }\n\n            const dmaterial = this.parseMaterial( material );\n            if ( dmaterial ) {\n\n                dprimitive.material = dmaterial;\n                dprimitive.defines = dprimitive.defines.concat( dmaterial.defines );\n\n            }\n\n            dprimitive.drawMode = mode === undefined ? 4 : mode;\n            dprimitive.meshName = name || GLTFLoader.getMeshNameCounter();\n            dprimitive.modelName = mesh.name || GLTFLoader.getModelNameCounter();\n\n            if ( targets ) {\n\n                dprimitive.defines.push( GLTFLoader.getMorphTargetsDefine( targets.length ) );\n                let hasPositions = false;\n                let hasNormals = false;\n                let hasTangents = false;\n                for ( let j = 0; j < targets.length; j ++ ) {\n\n                    const target = targets[ j ];\n                    Object.keys( target ).forEach( ( attribute ) => {\n\n                        const accessor = this.parseAccessor( target[ attribute ] );\n                        if ( accessor ) {\n\n                            let attribName;\n                            switch ( attribute ) {\n\n                            case 'POSITION':\n                                attribName = GLTFLoader.MORPH_POSITION_PREFIX + j;\n                                hasPositions = true;\n                                break;\n                            case 'NORMAL':\n                                attribName = GLTFLoader.MORPH_NORMAL_PREFIX + j;\n                                hasNormals = true;\n                                break;\n                            case 'TANGENT':\n                                attribName = GLTFLoader.MORPH_TANGENT_PREFIX + j;\n                                hasTangents = true;\n                                break;\n                            default:\n                                attribName = false;\n\n                            }\n\n                            if ( ! attribName )\n                                console.error( `glTF has unsupported morph target attribute ${attribute}` );\n                            else\n                                dprimitive.attribArrays[ attribName ] = accessor;\n\n                        }\n\n                    } );\n\n                }\n\n                if ( hasPositions ) dprimitive.defines.push( GLTFLoader.getMorphtargetPositionDefine() );\n                if ( hasNormals ) dprimitive.defines.push( GLTFLoader.getMorphtargetNormalDefine() );\n                if ( hasTangents ) dprimitive.defines.push( GLTFLoader.getMorphtargetTangentDefine() );\n                dprimitive.weights = mesh.weights || new Array( targets.length ).fill( 0 );\n\n            }\n\n            dprimitives.push( dprimitive );\n\n        }\n\n        mesh.dprimitives = dprimitives;\n        mesh.isParsed = true;\n\n        return mesh.dprimitives;\n\n    },\n\n    parseAccessor( accessorId ) {\n\n        const accessor = this.gltf.accessors[ accessorId ];\n        if ( ! accessor )\n            return errorMiss( 'accessor', accessorId );\n\n        if ( accessor.isParsed )\n            return accessor.daccessor;\n\n        accessor.isParsed = true;\n        accessor.daccessor = false;\n\n        const normalize = !! accessor.normalized;\n        const bufferView = this.gltf.bufferViews[ accessor.bufferView ];\n        const byteStride = bufferView && bufferView.byteStride;\n        const arrayType = getTypedArrayTypeFromGLType( accessor.componentType );\n        let numComponents = 1;\n        switch ( accessor.type ) {\n\n        case 'SCALAR':\n            numComponents = 1;\n            break;\n        case 'VEC2':\n            numComponents = 2;\n            break;\n        case 'VEC3':\n            numComponents = 3;\n            break;\n        case 'VEC4':\n        case 'MAT2':\n            numComponents = 4;\n            break;\n        case 'MAT3':\n            numComponents = 9;\n            break;\n        case 'MAT4':\n            numComponents = 16;\n            break;\n        default:\n            numComponents = 0;\n            break;\n\n        }\n        if ( numComponents === 0 ) {\n\n            console.error( `glTF has unknown data type in accessor: ${accessor.type}` );\n            return false;\n\n        }\n        const componentsBytes = numComponents * arrayType.BYTES_PER_ELEMENT;\n\n        let buffer;\n        if ( bufferView !== undefined ) {\n\n            buffer = this.parseBufferView( accessor.bufferView );\n            if ( ! buffer )\n                return accessor.daccessor;\n\n        } else\n            buffer = ( new Uint8Array( componentsBytes * accessor.count ) ).buffer;\n\n        let typedArray = this.getTypedArrayFromArrayBuffer( buffer, byteStride, accessor.byteOffset || 0, arrayType, numComponents, accessor.count );\n\n        if ( accessor.sparse ) {\n\n            const { count, indices, values } = accessor.sparse;\n            typedArray = new arrayType( typedArray ); // eslint-disable-line\n\n            const indicesByteOffset = indices.byteOffset || 0;\n            const indicesBufferView = this.gltf.bufferViews[ indices.bufferView ];\n            const indicesArrayType = getTypedArrayTypeFromGLType( indices.componentType );\n            const indicesBuffer = this.parseBufferView( indices.bufferView );\n            const indicesArray = this.getTypedArrayFromArrayBuffer( indicesBuffer, indicesBufferView.byteStride, indicesByteOffset, indicesArrayType, 1, count );\n\n            const valuesByteOffset = values.byteOffset || 0;\n            const valuesBufferView = this.gltf.bufferViews[ values.bufferView ];\n            const valuesBuffer = this.parseBufferView( values.bufferView );\n            const valuesArray = this.getTypedArrayFromArrayBuffer( valuesBuffer, valuesBufferView.byteStride, valuesByteOffset, arrayType, numComponents, count );\n\n            for ( let i = 0; i < indicesArray.length; i ++ )\n                typedArray.set( valuesArray.slice( i * numComponents, i * numComponents + numComponents ), indicesArray[ i ] * numComponents );\n\n        }\n\n        accessor.computeResult = {\n            typedArray, arrayType, numComponents,\n        };\n        accessor.daccessor = {\n            data: typedArray, numComponents, normalize,\n        };\n\n        return accessor.daccessor;\n\n    },\n\n    getTypedArrayFromArrayBuffer( buffer, byteStride, byteOffset, arrayType, numComponents, count ) {\n\n        let typedArray;\n        const componentsBytes = numComponents * arrayType.BYTES_PER_ELEMENT;\n        if ( byteStride && componentsBytes !== byteStride ) {\n\n            const arrayLength = numComponents * count;\n            typedArray = new arrayType( arrayLength ); // eslint-disable-line\n            for ( let i = 0; i < count; i ++ ) {\n\n                const componentVals = new arrayType( buffer, byteOffset + i * byteStride, numComponents ); // eslint-disable-line\n                for ( let j = 0; j < numComponents; j ++ )\n                    typedArray[ i * numComponents + j ] = componentVals[ j ];\n\n            }\n\n        } else\n            typedArray = new arrayType( buffer, byteOffset, count * numComponents ); // eslint-disable-line\n\n        return typedArray;\n\n    },\n\n    parseBufferView( bufferViewId ) {\n\n        const bufferView = this.gltf.bufferViews[ bufferViewId ];\n        if ( ! bufferView )\n            return errorMiss( 'bufferView', bufferViewId );\n\n        if ( bufferView.isParsed )\n            return bufferView.dbufferView;\n\n        bufferView.isParsed = true;\n        bufferView.dbufferView = false;\n\n        const buffer = this.parseBuffer( bufferView.buffer );\n        if ( buffer ) {\n\n            const { byteOffset, byteLength } = bufferView;\n            const bufferArray = new Uint8Array( buffer, byteOffset || 0, byteLength );\n            bufferView.dbufferView = ( new Uint8Array( bufferArray ) ).buffer;\n\n        }\n\n        return bufferView.dbufferView;\n\n    },\n\n    BASE64_MARKER: ';base64,',\n\n    parseBuffer( bufferId ) {\n\n        const buffer = this.gltf.buffers[ bufferId ];\n        if ( ! buffer )\n            return errorMiss( 'buffer', bufferId );\n\n        if ( buffer.isParsed )\n            return buffer.dbuffer;\n\n        buffer.isParsed = true;\n        buffer.dbuffer = false;\n\n        if ( buffer.uri.substr( 0, 5 ) !== 'data:' ) {\n\n            const uri = buffer.uri;\n            const arrayBuffer = this.gltf.resources[ uri ];\n            if ( arrayBuffer )\n                if ( arrayBuffer.byteLength === buffer.byteLength ) {\n\n                    buffer.dbuffer = this.gltf.resources[ uri ];\n\n                } else\n                    console.error( `load gltf resource \"${uri}\" at buffers[${bufferId} failed, ArrayBuffer.byteLength not equals buffer's byteLength]` );\n            else\n                console.error( `load gltf resource \"${uri}\" at buffers[${bufferId}] failed` );\n\n        } else {\n\n            const base64Idx = buffer.uri.indexOf( this.BASE64_MARKER ) + this.BASE64_MARKER.length;\n            const blob = window.atob( buffer.uri.substr( base64Idx ) );\n            const bytes = new Uint8Array( blob.length );\n            for ( let i = 0; i < blob.length; i ++ )\n                bytes[ i ] = blob.charCodeAt( i );\n            buffer.dbuffer = bytes.buffer;\n\n        }\n\n        return buffer.dbuffer;\n\n    },\n\n    parseMaterial( materialId ) {\n\n        let material;\n        if ( materialId === undefined )\n            material = GLTFLoader.defaultMaterial;\n        else\n            material = this.gltf.materials[ materialId ];\n\n        if ( ! material )\n            return errorMiss( 'material', materialId );\n\n        if ( material.isParsed )\n            return material.dmaterial;\n\n        const {\n            name, pbrMetallicRoughness, normalTexture, occlusionTexture, emissiveTexture, emissiveFactor,\n            alphaMode, alphaCutoff, doubleSided,\n        } = material;\n        const dmaterial = {\n            name, defines: [], doubleSided: !! doubleSided,\n        };\n\n        if ( alphaMode && alphaMode !== 'OPAQUE' ) {\n\n            if ( alphaMode === 'MASK' ) {\n\n                dmaterial.defines.push( GLTFLoader.getAlphaMaskDefine() );\n                dmaterial.alphaCutoff = alphaCutoff === undefined ? 0.5 : alphaCutoff;\n\n            }\n\n            if ( alphaMode === 'BLEND' ) {\n\n                dmaterial.defines.push( GLTFLoader.getAlphaBlendDdefine() );\n                dmaterial.enableBlend = true;\n\n            }\n\n        }\n\n        if ( pbrMetallicRoughness ) {\n\n            const {\n                baseColorFactor, metallicFactor, roughnessFactor, baseColorTexture, metallicRoughnessTexture,\n            } = pbrMetallicRoughness;\n\n            Object.assign( dmaterial, {\n                baseColorFactor: baseColorFactor || [ 1, 1, 1, 1 ],\n                metallicFactor: metallicFactor === undefined ? 1 : metallicFactor,\n                roughnessFactor: roughnessFactor === undefined ? 1 : roughnessFactor,\n            } );\n\n            if ( baseColorTexture ) {\n\n                const texture = this.parseTexture( baseColorTexture.index );\n                if ( texture ) {\n\n                    dmaterial.baseColorTexture = { texture, texCoord: baseColorTexture.texCoord || 0 };\n                    dmaterial.defines.push( GLTFLoader.getBaseColorTextureDefine() );\n\n                }\n\n            }\n\n            if ( metallicRoughnessTexture ) {\n\n                const texture = this.parseTexture( metallicRoughnessTexture.index );\n                if ( texture ) {\n\n                    dmaterial.metallicRoughnessTexture = { texture, texCoord: metallicRoughnessTexture.texCoord || 0 };\n                    dmaterial.defines.push( GLTFLoader.getMetalRoughnessDefine() );\n\n                }\n\n            }\n\n        } else\n            Object.assign( dmaterial, {\n                baseColorFactor: [ 1, 1, 1, 1 ],\n                metallicFactor: 1,\n                roughnessFactor: 1,\n            } );\n\n        if ( normalTexture ) {\n\n            const texture = this.parseTexture( normalTexture.index );\n            if ( texture ) {\n\n                dmaterial.normalTexture = { texture, texCoord: normalTexture.texCoord || 0, scale: normalTexture.scale || 1 };\n                dmaterial.defines.push( GLTFLoader.getNormalMapDefine() );\n\n            }\n\n        }\n\n        if ( occlusionTexture ) {\n\n            const texture = this.parseTexture( occlusionTexture.index );\n            if ( texture ) {\n\n                dmaterial.occlusionTexture = { texture, texCoord: occlusionTexture.texCoord || 0, strength: occlusionTexture.strength || 1 };\n                dmaterial.defines.push( GLTFLoader.getOcclusionMapDefine() );\n\n            }\n\n        }\n\n        if ( emissiveTexture && emissiveFactor ) {\n\n            const texture = this.parseTexture( emissiveTexture.index );\n            if ( texture ) {\n\n                dmaterial.emissiveTexture = { texture, texCoord: emissiveTexture.texCoord || 0, emissiveFactor };\n                dmaterial.defines.push( GLTFLoader.getEmissiveMapDefine() );\n\n            }\n\n        }\n\n        material.isParsed = true;\n        material.dmaterial = dmaterial;\n        return dmaterial;\n\n    },\n\n    parseTexture( textureId ) {\n\n        const texture = this.gltf.textures[ textureId ];\n        if ( ! texture )\n            return errorMiss( 'texture', textureId );\n\n        if ( texture.isParsed )\n            return texture.dtexture;\n\n        const { source, sampler } = texture;\n        let dtexture = {};\n        const image = this.parseImage( source );\n        const imgsampler = this.parseSampler( sampler );\n        if ( ! image || ! imgsampler ) {\n\n            dtexture = false;\n            return false;\n\n        }\n        Object.assign( dtexture, { src: image }, imgsampler );\n\n        texture.isParsed = true;\n        texture.dtexture = dtexture;\n        return dtexture;\n\n    },\n\n    parseImage( imageId ) {\n\n        const image = this.gltf.images[ imageId ];\n        if ( ! image )\n            return errorMiss( 'image', imageId );\n\n        if ( image.isParsed )\n            return image.dimage;\n\n        image.isParsed = true;\n        image.dimage = false;\n\n        if ( ! image.uri && typeof image.bufferView !== 'undefined' ) {\n\n            const arrayBuffer = this.parseBufferView( image.bufferView );\n            if ( arrayBuffer ) {\n\n                const type = image.mimeType || 'image/jpeg';\n                const arrayBufferView = new Uint8Array( arrayBuffer );\n                const blob = new Blob( [ arrayBufferView ], { type } );\n                const urlCreator = window.URL || window.webkitURL;\n                const imageUrl = urlCreator.createObjectURL( blob );\n\n                image.dimage = imageUrl;\n\n            }\n\n        }\n\n        if ( image.uri )\n            if ( image.uri.substr( 0, 5 ) !== 'data:' ) {\n\n                const uri = image.uri;\n                const imageres = this.gltf.resources[ uri ];\n                if ( imageres )\n                    image.dimage = imageres;\n\n            } else {\n\n                const img = new window.Image();\n                img.src = image.uri;\n\n                image.dimage = img;\n\n            }\n\n        return image.dimage;\n\n    },\n\n    parseSampler( samplerId ) {\n\n        if ( samplerId === undefined ) return { wrap: TextureFilters.REPEAT };\n        const sampler = this.gltf.samplers[ samplerId ];\n        if ( ! sampler )\n            return errorMiss( 'sampler', samplerId );\n\n        if ( sampler.isParsed )\n            return sampler.dsampler;\n\n        const {\n            magFilter, minFilter, wrapS, wrapT,\n        } = sampler;\n\n        const dsampler = { wrapS: wrapS || TextureFilters.REPEAT, wrapT: wrapT || TextureFilters.REPEAT };\n        if ( minFilter )\n            dsampler.min = minFilter;\n        if ( magFilter )\n            dsampler.mag = magFilter;\n\n        sampler.dsampler = dsampler;\n        sampler.isParsed = true;\n        return dsampler;\n\n    },\n\n} );\n\nObject.assign( GLTFLoader, {\n\n    getMeshNameCounter: ( function () {\n\n        let counter = 0;\n\n        return function getMeshNameCounter() {\n\n            return `GLTF_NO_NAME_PRIMITIVE_${counter ++}`;\n\n        };\n\n    }() ),\n\n    getModelNameCounter: ( function () {\n\n        let counter = 0;\n\n        return function getModelNameCounter() {\n\n            return `GLTF_NO_NAME_MESH_${counter ++}`;\n\n        };\n\n    }() ),\n\n\n    GLTF_NODE_INDEX_PROPERTY: 'GLTF_NODE_INDEX',\n\n    getTexCoordDefine( texNum ) {\n\n        return `UV_NUM ${texNum}`;\n\n    },\n\n    BASE_COLOR_UNIFORM: 'u_baseColorFactor',\n\n    BASE_COLOR_TEXTURE_UNIFORM: 'u_baseColorSampler',\n\n    METALROUGHNESS_UNIFORM: 'u_metallicRoughnessValues',\n\n    METALROUGHNESS_TEXTURE_UNIFORM: 'u_metallicRoughnessSampler',\n\n    NORMAL_TEXTURE_UNIFORM: 'u_normalSampler',\n\n    NORMAL_SCALE_UNIFORM: 'u_normalScale',\n\n    EMISSIVE_TEXTURE_UNIFORM: 'u_emissiveSampler',\n\n    EMISSIVE_FACTOR_UNIFORM: 'u_emissiveFactor',\n\n    OCCLUSION_TEXTURE_UNIFORM: 'u_occlusionSampler',\n\n    OCCLUSION_FACTOR_UNIFORM: 'u_occlusionFactor',\n\n    getVertexColorDefine( num ) {\n\n        return `HAS_VERTEXCOLOR ${num}`;\n\n    },\n\n    getBaseColorTextureDefine() {\n\n        return 'HAS_BASECOLORMAP';\n\n    },\n\n    getMetalRoughnessDefine() {\n\n        return 'HAS_METALROUGHNESSMAP';\n\n    },\n\n    getNormalMapDefine() {\n\n        return 'HAS_NORMALMAP';\n\n    },\n\n    getEmissiveMapDefine() {\n\n        return 'HAS_EMISSIVEMAP';\n\n    },\n\n    getOcclusionMapDefine() {\n\n        return 'HAS_OCCLUSIONMAP';\n\n    },\n\n    MAX_MORPH_TARGETS: 8,\n\n    MORPH_POSITION_PREFIX: 'a_morphPositions_',\n\n    MORPH_NORMAL_PREFIX: 'a_morphNromals_',\n\n    MORPH_TANGENT_PREFIX: 'a_morphTangents_',\n\n    MORPH_WEIGHT_UNIFORM: 'u_morphWeights',\n\n    getMorphTargetsDefine( targetNum ) {\n\n        return `MORPH_TARGET_NUM ${targetNum}`;\n\n    },\n\n    getMorphtargetPositionDefine() {\n\n        return 'HAS_MORPH_POSITION';\n\n    },\n\n    getMorphtargetNormalDefine() {\n\n        return 'HAS_MORPH_NORMAL';\n\n    },\n\n    getMorphtargetTangentDefine() {\n\n        return 'HAS_MORPH_TANGENT';\n\n    },\n\n    SCENE_ROOT_SKELETON: 'SCENE_ROOT',\n\n    IDENTITY_INVERSE_BIND_MATRICES: 'IDENTITY_IBM',\n\n    getJointsNumDefine( num ) {\n\n        return `JOINTS_NUM ${num}`;\n\n    },\n\n    getJointVec8Define() {\n\n        return 'JOINT_VEC8';\n\n    },\n\n    JOINT_MATRICES_UNIFORM: 'u_jointMatrix',\n\n    getHasNormalDefine() {\n\n        return 'HAS_NORMAL';\n\n    },\n\n    getHasTangentDefine() {\n\n        return 'HAS_TANGENT';\n\n    },\n\n    getHasNormalMapDefine() {\n\n        return 'HAS_NORMAL_MAP';\n\n    },\n\n    ALPHA_CUTOFF_UNIFORM: 'u_alphaCutoff',\n\n    getAlphaMaskDefine() {\n\n        return 'ALPHA_MASK';\n\n    },\n\n    getAlphaBlendDdefine() {\n\n        return 'ALPHA_BLEND';\n\n    },\n\n    defaultMaterial: {\n\n        name: 'GLTF_DEFAULT_MATERIAL',\n        emissiveFactor: [ 0, 0, 0 ],\n        alphaMode: 'OPAQUE',\n        alphaCutoff: 0.5,\n        doubleSided: false,\n        isParsed: true,\n        dmaterial: {\n            name: 'GLTF_DEFAULT_MATERIAL',\n            defines: [],\n            doubleSided: false,\n            baseColorFactor: [ 1, 1, 1, 1 ],\n            metallicFactor: 1,\n            roughnessFactor: 1,\n            emissiveFactor: [ 0, 0, 0 ],\n        },\n\n    },\n\n} );\n\nexport { GLTFLoader };\n","import { ColorPointShader } from '../shader/ColorPointShader';\nimport { Mesh } from '../model/Primatives';\nimport { Model } from '../model/Model';\nimport { ShaderParams } from '../renderer/constant';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction PointHelper( gl, data = [], pointSize, pointColor ) {\n\n    this.shader = new ColorPointShader( gl, pointSize, pointColor );\n\n    const attribArrays = {};\n    attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data, drawType: gl.DYNAMIC_DRAW };\n    this.mesh = new Mesh( 'PointHelper', attribArrays, { drawMode: gl.POINTS } );\n    this.model = new Model( this.mesh );\n    this.gl = gl;\n\n}\n\nObject.assign( PointHelper.prototype, {\n\n    render() {\n\n        this.model.transform.updateMatrix().copyToWorldMatrix();\n        this.shader.renderModel( this.model );\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        this.shader.setCamera( camera );\n        return this;\n\n    },\n\n    // array or Model.infos\n    setData( array ) {\n\n        let typedArray = array;\n\n        if ( array.data ) {\n\n            typedArray = array.data;\n            if ( array.numComponents && array.numComponents !== 3 )\n                if ( array.numComponents === 4 ) {\n\n                    typedArray = [];\n                    for ( let i = 0; i < array.data.length / 4; i ++ )\n                        typedArray.push( array.data[ i * 4 ], array.data[ i * 4 + 1 ], array.data[ i * 4 + 2 ] );\n\n                } else {\n\n                    console.error( 'array data numElement nor 3 or 4 for PointHelper.' );\n                    return null;\n\n                }\n\n        }\n\n        typedArray = getTypedArray( typedArray );\n\n        this.mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data = typedArray;\n\n        const bufferInfo = this.mesh.bufferInfo;\n        if ( bufferInfo ) {\n\n            const buffer = bufferInfo.attribs[ ShaderParams.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( this.gl, buffer, typedArray );\n\n            bufferInfo.numElements = typedArray.length / 3;\n\n        }\n\n        return this;\n\n    },\n} );\n\nexport { PointHelper };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/colorLine.vs.glsl';\nimport fs from './shadersrc/colorLine.fs.glsl';\n\nfunction ColorLineShader( gl, colors = [ 255 / 255, 105 / 255, 180 / 255, 255 / 255, 255 / 255, 182 / 255, 193 / 255, 80 / 255 ] ) {\n\n    Shader.call( this, gl, ColorLineShader.vs, ColorLineShader.fs );\n\n    this.setColors( colors );\n\n    this.deactivate();\n\n}\n\nColorLineShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ColorLineShader,\n\n    setColors( colors ) {\n\n        this.setUniformObj( { u_colors: colors } );\n\n        if ( colors[ 3 ] !== 1 || colors[ 7 ] !== 1 )\n            this.blend = true;\n        else\n            this.blend = false;\n\n        return this;\n\n    },\n\n} );\n\nObject.assign( ColorLineShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ColorLineShader };\n","import { ColorLineShader } from '../shader/ColorLineShader';\nimport { Mesh } from '../model/Primatives';\nimport { Model } from '../model/Model';\nimport { ShaderParams } from '../renderer/constant';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction LineHelper( gl, points, colors, normalLength = 0.1 ) {\n\n    this.shader = new ColorLineShader( gl, colors );\n    this.normalLength = normalLength;\n\n    const vertices = points && this._getdata( points );\n    const attribArrays = {};\n    attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices, drawType: gl.DYNAMIC_DRAW };\n    this.mesh = new Mesh( 'LineHelper', attribArrays, { drawMode: gl.LINES } );\n    this.model = new Model( this.mesh );\n    if ( points.isModel )\n        this.setTransform( points.transform );\n    this.gl = gl;\n    this.copyToWorldMatrix = true;\n\n}\n\nObject.assign( LineHelper.prototype, {\n\n    _getdata( points ) {\n\n        let normalPos = points;\n        if ( points.isModel ) {\n\n            normalPos = [ points.positionInfo.data, points.normalInfo.data ];\n            this.setTransform( points.transform );\n            this.copyToWorldMatrix = false;\n\n        }\n        if ( points.isMesh ) {\n\n            normalPos = [ points.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data, points.attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ].data ];\n            this.copyToWorldMatrix = false;\n\n        }\n\n        if ( normalPos.length && normalPos.length === 2 ) {\n\n            const vertices = [];\n            const start = normalPos[ 0 ];\n            const normal = normalPos[ 1 ].map( n => n * this.normalLength );\n            const length = start.length;\n            let strip = 3;\n            if ( start.length === normal.length ) {\n\n                if ( length % 3 === 0 )\n                    strip = 3;\n                else if ( length % 4 === 0 )\n                    strip = 4;\n                else {\n\n                    console.error( 'can not guess the vertex data for LineHelper !' );\n                    return null;\n\n                }\n\n                for ( let i = 0; i < length / strip; i ++ ) {\n\n                    vertices.push( start[ i * strip ], start[ i * strip + 1 ], start[ i * strip + 2 ] );\n                    vertices.push( start[ i * strip ] + normal[ i * strip ], start[ i * strip + 1 ] + normal[ i * strip + 1 ], start[ i * strip + 2 ] + normal[ i * strip + 2 ] );\n\n                }\n\n                return vertices;\n\n            } else if ( Math.max( start.length, normal.length ) % 4 === 0 && Math.min( start.length, normal.length ) % 3 === 0 &&\n                Math.max( start.length, normal.length ) / 4 === Math.min( start.length, normal.length ) / 3 ) {\n\n                const count = Math.max( start.length, normal.length ) / 4;\n                const sStrip = start.length > normal.length ? 4 : 3;\n                const nStrip = sStrip === 4 ? 3 : 4;\n                for ( let i = 0; i < count; i ++ ) {\n\n                    vertices.push( start[ i * sStrip ], start[ i * sStrip + 1 ], start[ i * sStrip + 2 ] );\n                    vertices.push( start[ i * sStrip ] + normal[ i * nStrip ], start[ i * sStrip + 1 ] + normal[ i * nStrip + 1 ], start[ i * sStrip + 2 ] + normal[ i * nStrip + 2 ] );\n\n                }\n\n                return vertices;\n\n            }\n\n        }\n\n        return points;\n\n    },\n\n    render() {\n\n        this.model.transform.updateMatrix();\n        if ( this.copyToWorldMatrix )\n            this.model.transform.copyToWorldMatrix();\n\n        this.shader.renderModel( this.model );\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        this.shader.setCamera( camera );\n        return this;\n\n    },\n\n    setTransform( transform ) {\n\n        if ( this.model )\n            this.model.setTransform( transform );\n\n        return this;\n\n    },\n\n    // model, mesh, arrays\n    setData( points ) {\n\n        this.copyToWorldMatrix = true;\n\n        const array = this._getdata( points );\n        const typedArray = getTypedArray( array );\n\n        const bufferInfo = this.mesh.bufferInfo;\n\n        this.mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data = typedArray;\n\n        if ( bufferInfo ) {\n\n            const buffer = bufferInfo.attribs[ ShaderParams.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( this.gl, buffer, typedArray );\n\n            bufferInfo.numElements = array.length / 3;\n\n        }\n\n        return this;\n\n    },\n\n} );\n\nexport { LineHelper };\n","/* eslint no-multi-assign: 0, no-param-reassign: 0 */\n\n// https://github.com/josephg/noisejs\n\nfunction Grad( x, y, z ) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n}\n\nObject.assign( Grad.prototype, {\n\n    dot2( x, y ) {\n\n        return this.x * x + this.y * y;\n\n    },\n\n    dot3( x, y, z ) {\n\n        return this.x * x + this.y * y + this.z * z;\n\n    },\n\n} );\n\nconst grad3 = [\n    new Grad( 1, 1, 0 ), new Grad( - 1, 1, 0 ), new Grad( 1, - 1, 0 ), new Grad( - 1, - 1, 0 ),\n    new Grad( 1, 0, 1 ), new Grad( - 1, 0, 1 ), new Grad( 1, 0, - 1 ), new Grad( - 1, 0, - 1 ),\n    new Grad( 0, 1, 1 ), new Grad( 0, - 1, 1 ), new Grad( 0, 1, - 1 ), new Grad( 0, - 1, - 1 ),\n];\n\nconst p = [ 151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180 ];\n\nconst perm = new Array( 512 );\nconst gradP = new Array( 512 );\n\nconst F2 = 0.5 * ( Math.sqrt( 3 ) - 1 );\nconst G2 = ( 3 - Math.sqrt( 3 ) ) / 6;\n\nconst F3 = 1 / 3;\nconst G3 = 1 / 6;\n\nconst Perlin = {};\n\nfunction fade( t ) {\n\n    return t * t * t * ( t * ( t * 6 - 15 ) + 10 );\n\n}\n\nfunction lerp( a, b, t ) {\n\n    return ( 1 - t ) * a + t * b;\n\n}\n\nObject.assign( Perlin, {\n\n    seed( seed ) {\n\n        if ( seed > 0 && seed < 1 )\n            seed *= 65536;\n\n        let v;\n        for ( let i = 0; i < 256; i ++ ) {\n\n            if ( i & 1 )\n                v = p[ i ] ^ ( seed & 255 );\n            else\n                v = p[ i ] ^ ( ( seed >> 8 ) & 255 );\n\n\n            perm[ i ] = perm[ i + 256 ] = v;\n            gradP[ i ] = gradP[ i + 256 ] = grad3[ v % 12 ];\n\n        }\n\n    },\n\n    simplex2( xin, yin ) {\n\n        let n0;\n        let n1;\n        let n2;\n\n        const s = ( xin + yin ) * F2;\n        let i = Math.floor( xin + s );\n        let j = Math.floor( yin + s );\n        const t = ( i + j ) * G2;\n        const x0 = xin - i + t;\n        const y0 = yin - j + t;\n\n        let i1;\n        let j1;\n        if ( x0 > y0 ) {\n\n            i1 = 1; j1 = 0;\n\n        } else {\n\n            i1 = 0; j1 = 1;\n\n        }\n\n        const x1 = x0 - i1 + G2;\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1 + 2 * G2;\n        const y2 = y0 - 1 + 2 * G2;\n\n        i &= 255;\n        j &= 255;\n        const gi0 = gradP[ i + perm[ j ] ];\n        const gi1 = gradP[ i + i1 + perm[ j + j1 ] ];\n        const gi2 = gradP[ i + 1 + perm[ j + 1 ] ];\n\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if ( t0 < 0 )\n            n0 = 0;\n        else {\n\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2( x0, y0 );\n\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if ( t1 < 0 )\n            n1 = 0;\n        else {\n\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2( x1, y1 );\n\n        }\n\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if ( t2 < 0 )\n            n2 = 0;\n        else {\n\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2( x2, y2 );\n\n        }\n\n        return 70 * ( n0 + n1 + n2 );\n\n    },\n\n    simplex3( xin, yin, zin ) {\n\n        let n0;\n        let n1;\n        let n2;\n        let n3;\n\n        const s = ( xin + yin + zin ) * F3;\n        let i = Math.floor( xin + s );\n        let j = Math.floor( yin + s );\n        let k = Math.floor( zin + s );\n\n        const t = ( i + j + k ) * G3;\n        const x0 = xin - i + t;\n        const y0 = yin - j + t;\n        const z0 = zin - k + t;\n\n        let i1;\n        let j1;\n        let k1;\n        let i2;\n        let j2;\n        let k2;\n        if ( x0 >= y0 )\n            if ( y0 >= z0 ) {\n\n                i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n            } else if ( x0 >= z0 ) {\n\n                i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1;\n\n            } else {\n\n                i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1;\n\n            }\n        else if ( y0 < z0 ) {\n\n            i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1;\n\n        } else if ( x0 < z0 ) {\n\n            i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1;\n\n        } else {\n\n            i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n        }\n\n        const x1 = x0 - i1 + G3;\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n\n        const x2 = x0 - i2 + 2 * G3;\n        const y2 = y0 - j2 + 2 * G3;\n        const z2 = z0 - k2 + 2 * G3;\n\n        const x3 = x0 - 1 + 3 * G3;\n        const y3 = y0 - 1 + 3 * G3;\n        const z3 = z0 - 1 + 3 * G3;\n\n        i &= 255;\n        j &= 255;\n        k &= 255;\n        const gi0 = gradP[ i + perm[ j + perm[ k ] ] ];\n        const gi1 = gradP[ i + i1 + perm[ j + j1 + perm[ k + k1 ] ] ];\n        const gi2 = gradP[ i + i2 + perm[ j + j2 + perm[ k + k2 ] ] ];\n        const gi3 = gradP[ i + 1 + perm[ j + 1 + perm[ k + 1 ] ] ];\n\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if ( t0 < 0 )\n            n0 = 0;\n        else {\n\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot3( x0, y0, z0 );\n\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if ( t1 < 0 )\n            n1 = 0;\n        else {\n\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot3( x1, y1, z1 );\n\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if ( t2 < 0 )\n            n2 = 0;\n        else {\n\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot3( x2, y2, z2 );\n\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if ( t3 < 0 )\n            n3 = 0;\n        else {\n\n            t3 *= t3;\n            n3 = t3 * t3 * gi3.dot3( x3, y3, z3 );\n\n        }\n\n        return 32 * ( n0 + n1 + n2 + n3 );\n\n    },\n\n    perlin2( x, y ) {\n\n        let X = Math.floor( x );\n        let Y = Math.floor( y );\n\n        x -= X; y -= Y;\n        X &= 255; Y &= 255;\n\n        const n00 = gradP[ X + perm[ Y ] ].dot2( x, y );\n        const n01 = gradP[ X + perm[ Y + 1 ] ].dot2( x, y - 1 );\n        const n10 = gradP[ X + 1 + perm[ Y ] ].dot2( x - 1, y );\n        const n11 = gradP[ X + 1 + perm[ Y + 1 ] ].dot2( x - 1, y - 1 );\n\n        const u = fade( x );\n\n        return lerp(\n            lerp( n00, n10, u ),\n            lerp( n01, n11, u ),\n            fade( y ),\n        );\n\n    },\n\n    perlin3( x, y, z ) {\n\n        let X = Math.floor( x );\n        let Y = Math.floor( y );\n        let Z = Math.floor( z );\n\n        x -= X; y -= Y; z -= Z;\n\n        X &= 255; Y &= 255; Z &= 255;\n\n        const n000 = gradP[ X + perm[ Y + perm[ Z ] ] ].dot3( x, y, z );\n        const n001 = gradP[ X + perm[ Y + perm[ Z + 1 ] ] ].dot3( x, y, z - 1 );\n        const n010 = gradP[ X + perm[ Y + 1 + perm[ Z ] ] ].dot3( x, y - 1, z );\n        const n011 = gradP[ X + perm[ Y + 1 + perm[ Z + 1 ] ] ].dot3( x, y - 1, z - 1 );\n        const n100 = gradP[ X + 1 + perm[ Y + perm[ Z ] ] ].dot3( x - 1, y, z );\n        const n101 = gradP[ X + 1 + perm[ Y + perm[ Z + 1 ] ] ].dot3( x - 1, y, z - 1 );\n        const n110 = gradP[ X + 1 + perm[ Y + 1 + perm[ Z ] ] ].dot3( x - 1, y - 1, z );\n        const n111 = gradP[ X + 1 + perm[ Y + 1 + perm[ Z + 1 ] ] ].dot3( x - 1, y - 1, z - 1 );\n\n        const u = fade( x );\n        const v = fade( y );\n        const w = fade( z );\n\n        return lerp(\n            lerp(\n                lerp( n000, n100, u ),\n                lerp( n001, n101, u ), w,\n            ),\n            lerp(\n                lerp( n010, n110, u ),\n                lerp( n011, n111, u ), w,\n            ),\n            v,\n        );\n\n    },\n\n} );\n\nPerlin.seed( 0 );\n\nexport { Perlin };\n","import { Mesh } from './Primatives';\nimport { ShaderParams, BeginMode, BufferParams } from '../renderer/constant';\nimport { Perlin } from '../math/Perlin';\nimport { PMath } from '../math/Math';\nimport { Model } from '../model/Model';\nimport { setTypedArrayToBuffer } from '../renderer/attributes';\nimport { getTypedArray } from '../renderer/typedArray';\n\nfunction generateNormals( vertices, rowCount, colCount, yin ) {\n\n    let x;\n    let y;\n    let p;\n    let pos;\n    const xMax = colCount - 1;\n    const yMax = rowCount - 1;\n    let nx;\n    let ny;\n    let nz;\n    let nl;\n    let hl;\n    let hr;\n    let ht;\n    let hb;\n    const normals = [];\n\n    const vtxCount = rowCount * colCount;\n    for ( let i = 0; i < vtxCount; i ++ ) {\n\n        y = Math.floor( i / colCount );\n        x = i % colCount;\n        pos = y * 3 * colCount + x * 3;\n\n        if ( x > 0 ) {\n\n            p = y * 3 * colCount + ( x - 1 ) * 3;\n            hl = vertices[ p + 1 ];\n\n        } else\n            hl = vertices[ pos + 1 ];\n\n        if ( x < xMax ) {\n\n            p = y * 3 * colCount + ( x + 1 ) * 3;\n            hr = vertices[ p + 1 ];\n\n        } else\n            hr = vertices[ pos + 1 ];\n\n        if ( y > 0 ) {\n\n            p = ( y - 1 ) * 3 * colCount + x * 3;\n            ht = vertices[ p + 1 ];\n\n        } else\n            ht = vertices[ pos + 1 ];\n\n        if ( y < yMax ) {\n\n            p = ( y + 1 ) * 3 * colCount + x * 3;\n            hb = vertices[ p + 1 ];\n\n        } else\n            hb = vertices[ pos + 1 ];\n\n        nx = hl - hr;\n        ny = yin;\n        nz = hb - ht;\n        nl = Math.sqrt( nx * nx + ny * ny + nz * nz );\n        normals.push( nx / nl, ny / nl, nz / nl );\n\n    }\n\n    return normals;\n\n}\n\nconst Terrain = {};\n\nObject.assign( Terrain, {\n\n    createModel( name, width, height, rowCount, colCount, options ) {\n\n        const model = new Model( Terrain.createMesh( name, width, height, rowCount, colCount, options ) );\n        return Object.assign( model, {\n\n            setTime( gl, time ) {\n\n                Terrain.setTime( gl, this.mesh, time );\n                return this;\n\n            },\n            addTime( gl, timeSpan ) {\n\n                Terrain.addTime( gl, this.mesh, timeSpan );\n                return this;\n\n            },\n\n        } );\n\n    },\n\n    createMesh( name, width = 2, height = 2, rowCount = 6, colCount = 6, options ) {\n\n        const minHeight = ( options && options.minHeight ) || 0;\n        const maxHeight = ( options && options.maxHeight ) || 1;\n        const baseHeight = ( options && options.baseHeight ) || 0;\n        const perlinFreq = ( options && options.perlinFreq ) || 10;\n        const time = ( options && options.time ) || Math.random();\n\n        const rowStart = height / - 2;\n        const colStart = width / - 2;\n        const vtxCount = rowCount * colCount;\n        const idxCount = ( rowCount - 1 ) * colCount;\n        const rowStrid = height / ( rowCount - 1 );\n        const colStrid = width / ( colCount - 1 );\n        let currentRow = 0;\n        let currentCol = 0;\n        const vertices = [];\n        const indices = [];\n        const uv = [];\n        const uvXStrid = 1 / ( colCount - 1 );\n        const uvYStrid = 1 / ( rowCount - 1 );\n        let h;\n\n        for ( let i = 0; i < vtxCount; i ++ ) {\n\n            currentRow = Math.floor( i / colCount );\n            currentCol = i % colCount;\n            h = baseHeight + PMath.map( Perlin.perlin3( currentRow / perlinFreq, currentCol / perlinFreq, time / perlinFreq ), 0, 1, minHeight, maxHeight );\n\n            vertices.push( colStart + currentCol * colStrid, h, rowStart + currentRow * rowStrid );\n\n            uv.push( ( currentCol === colCount - 1 ) ? 0.9999 : currentCol * uvXStrid, ( currentRow === rowCount - 1 ) ? 0.9999 : currentRow * uvYStrid );\n\n            if ( i < idxCount ) { // TRIANGLE_STRIP\n\n                indices.push( currentRow * colCount + currentCol, ( currentRow + 1 ) * colCount + currentCol );\n\n                if ( currentCol === colCount - 1 && i < idxCount - 1 )\n                    indices.push( ( currentRow + 1 ) * colCount + currentCol, ( currentRow + 1 ) * colCount );\n\n            }\n\n        }\n\n        const normals = generateNormals( vertices, rowCount, colCount, maxHeight - minHeight );\n\n        const attribArrays = {\n            indices: { data: indices },\n        };\n        attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ] = { data: vertices, drawType: BufferParams.DYNAMIC_DRAW };\n        attribArrays[ ShaderParams.ATTRIB_UV_NAME ] = { data: uv };\n        attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ] = { data: normals };\n        const mesh = new Mesh( name || 'Terrain', attribArrays, { drawMode: BeginMode.TRIANGLE_STRIP } );\n        return Object.assign( mesh, {\n            time,\n            minHeight,\n            maxHeight,\n            baseHeight,\n            perlinFreq,\n            rowCount,\n            colCount,\n        } );\n\n    },\n\n    setTime( gl, mesh, newTime ) {\n\n        let vertices = mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data;\n        const length = vertices.length / 3;\n        const {\n            minHeight,\n            maxHeight,\n            baseHeight,\n            perlinFreq,\n            rowCount,\n            colCount,\n        } = mesh;\n        let currentRow;\n        let currentCol;\n\n        for ( let i = 0; i < length; i ++ ) {\n\n            currentRow = Math.floor( i / colCount );\n            currentCol = i % colCount;\n            vertices[ i * 3 + 1 ] = baseHeight + PMath.map( Perlin.perlin3( currentRow / perlinFreq, currentCol / perlinFreq, newTime / perlinFreq ), 0, 1, minHeight, maxHeight );\n\n        }\n\n        vertices = getTypedArray( vertices );\n\n        let normals = generateNormals( vertices, rowCount, colCount, maxHeight - minHeight );\n        normals = getTypedArray( normals );\n\n        mesh.time = newTime; // eslint-disable-line\n        mesh.attribArrays[ ShaderParams.ATTRIB_NORMAL_NAME ].data = normals; // eslint-disable-line\n        mesh.attribArrays[ ShaderParams.ATTRIB_POSITION_NAME ].data = vertices; // eslint-disable-line\n\n        const bufferInfo = mesh.bufferInfo;\n        if ( bufferInfo ) {\n\n            const vtxBuffer = bufferInfo.attribs[ ShaderParams.ATTRIB_POSITION_NAME ].buffer;\n            setTypedArrayToBuffer( gl, vtxBuffer, vertices );\n\n            const normBuffer = bufferInfo.attribs[ ShaderParams.ATTRIB_NORMAL_NAME ].buffer;\n            setTypedArrayToBuffer( gl, normBuffer, normals );\n\n        }\n\n        return mesh;\n\n    },\n\n    addTime( gl, mesh, timeSpan ) {\n\n        return Terrain.setTime( gl, mesh, mesh.time + timeSpan );\n\n    },\n\n} );\n\nexport { Terrain };\n","import { createTexture, resizeTexture } from './texture';\n\nconst UNSIGNED_BYTE = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT = 0x1902;\nconst RGBA = 0x1908;\n\n/* Framebuffer Object. */\nconst RGBA4 = 0x8056;\nconst RGB5_A1 = 0x8057;\nconst RGB565 = 0x8D62;\nconst DEPTH_COMPONENT16 = 0x81A5;\nconst STENCIL_INDEX = 0x1901;\nconst STENCIL_INDEX8 = 0x8D48;\nconst DEPTH_STENCIL = 0x84F9;\nconst DEPTH_ATTACHMENT = 0x8D00;\nconst STENCIL_ATTACHMENT = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR = 0x2601;\n\nconst defaultAttachment = [\n    {\n        format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE,\n    },\n    { format: DEPTH_STENCIL },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[ DEPTH_STENCIL ] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[ STENCIL_INDEX ] = STENCIL_ATTACHMENT;\nattachmentsByFormat[ STENCIL_INDEX8 ] = STENCIL_ATTACHMENT;\nattachmentsByFormat[ DEPTH_COMPONENT ] = DEPTH_ATTACHMENT;\nattachmentsByFormat[ DEPTH_COMPONENT16 ] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat( format ) {\n\n    return attachmentsByFormat[ format ];\n\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[ RGBA4 ] = true;\nrenderbufferFormats[ RGB5_A1 ] = true;\nrenderbufferFormats[ RGB565 ] = true;\nrenderbufferFormats[ DEPTH_STENCIL ] = true;\nrenderbufferFormats[ DEPTH_COMPONENT16 ] = true;\nrenderbufferFormats[ STENCIL_INDEX ] = true;\nrenderbufferFormats[ STENCIL_INDEX8 ] = true;\n\nfunction isRenderbufferFormat( format ) {\n\n    return renderbufferFormats[ format ];\n\n}\n\nlet glRenderbuffer;\nfunction isRenderbuffer( gl, t ) {\n\n    if ( ! glRenderbuffer )\n        glRenderbuffer = gl.createRenderbuffer();\n\n    return t instanceof glRenderbuffer.constructor;\n\n}\n\nlet glTexture;\nfunction isTexture( gl, t ) {\n\n    if ( ! glTexture )\n        glTexture = gl.createTexture();\n\n    return t instanceof glTexture.constructor;\n\n}\n\nfunction createFramebufferInfo( gl, attachments = defaultAttachment, width = gl.drawingBufferWidth, height = gl.drawingBufferHeight ) {\n\n    const target = gl.FRAMEBUFFER;\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer( target, fb );\n\n    let colorAttachmentCount = 0;\n    const framebufferInfo = {\n        framebuffer: fb,\n        attachments: [],\n        width,\n        height,\n    };\n\n    attachments.forEach( ( attachmentOptions ) => {\n\n        let attachment = attachmentOptions.attachment;\n        const format = attachmentOptions.format;\n        let attachmentPoint = getAttachmentPointForFormat( format );\n        if ( ! attachmentPoint )\n            attachmentPoint = gl.COLOR_ATTACHMENT0 + colorAttachmentCount ++;\n\n        if ( ! attachment )\n            if ( isRenderbufferFormat( format ) ) {\n\n                attachment = gl.createRenderbuffer();\n                gl.bindRenderbuffer( gl.RENDERBUFFER, attachment );\n                gl.renderbufferStorage( gl.RENDERBUFFER, format, width, height );\n                gl.bindRenderbuffer( gl.RENDERBUFFER, null );\n\n            } else {\n\n                const textureOptions = Object.assign( {}, attachmentOptions, { width, height } );\n\n                if ( textureOptions.auto === undefined ) {\n\n                    textureOptions.auto = false;\n                    textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n                    textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n                    textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n                    textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n\n                }\n                attachment = createTexture( gl, textureOptions );\n\n            }\n\n        if ( isRenderbuffer( gl, attachment ) )\n            gl.framebufferRenderbuffer( target, attachmentPoint, gl.RENDERBUFFER, attachment );\n        else if ( isTexture( gl, attachment ) )\n            gl.framebufferTexture2D(\n                target,\n                attachmentPoint,\n                attachmentOptions.texTarget || gl.TEXTURE_2D,\n                attachment,\n                attachmentOptions.level || 0,\n            );\n        else\n            throw new Error( 'unkonwn attachment type for framebuffer' );\n\n        framebufferInfo.attachments.push( attachment );\n\n    } );\n\n    if ( colorAttachmentCount > 1 ) {\n\n        const colorBuffers = [];\n        for ( let i = 0; i < colorAttachmentCount; i ++ )\n            colorBuffers.push( gl.COLOR_ATTACHMENT0 + i );\n        gl.drawBuffers( colorBuffers );\n\n    }\n\n\n    switch ( gl.checkFramebufferStatus( gl.FRAMEBUFFER ) ) {\n\n    case gl.FRAMEBUFFER_COMPLETE: break;\n    case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT: console.log( 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: console.log( 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS: console.log( 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS' ); break;\n    case gl.FRAMEBUFFER_UNSUPPORTED: console.log( 'FRAMEBUFFER_UNSUPPORTED' ); break;\n    case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: console.log( 'FRAMEBUFFER_INCOMPLETE_MULTISAMPLE' ); break;\n    case gl.RENDERBUFFER_SAMPLES: console.log( 'RENDERBUFFER_SAMPLES' ); break;\n    default: break;\n\n    }\n\n    gl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n    return framebufferInfo;\n\n}\n\nfunction bindFramebufferInfo( gl, framebufferInfo ) {\n\n    const target = gl.FRAMEBUFFER;\n    if ( framebufferInfo ) {\n\n        gl.bindFramebuffer( target, framebufferInfo.framebuffer );\n        gl.viewport( 0, 0, framebufferInfo.width, framebufferInfo.height );\n\n    } else {\n\n        gl.bindFramebuffer( target, null );\n        gl.viewport( 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight );\n\n    }\n\n}\n\nfunction readPixcelFromFrameBufferInfo( gl, framebufferInfo, x, y, index = 0 ) {\n\n    const pix = new Uint8Array( 4 );\n    gl.bindFramebuffer( gl.FRAMEBUFFER, framebufferInfo.framebuffer || framebufferInfo );\n    gl.readBuffer( gl.COLOR_ATTACHMENT0 + index );\n    gl.readPixels( x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pix );\n    gl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n    return pix;\n\n}\n\nfunction resizeFramebufferInfo( gl, framebufferInfo, attachments = defaultAttachment, width = gl.drawingBufferWidth, height = gl.drawingBufferHeight ) {\n\n    framebufferInfo.width = width; // eslint-disable-line\n    framebufferInfo.height = height; // eslint-disable-line\n\n    attachments.forEach( ( attachmentOpts, idx ) => {\n\n        const attachment = framebufferInfo.attachments[ idx ];\n        const format = attachmentOpts.format;\n        if ( isRenderbuffer( gl, attachment ) ) {\n\n            gl.bindRenderbuffer( gl.RENDERBUFFER, attachment );\n            gl.renderbufferStorage( gl.RENDERBUFFER, format, width, height );\n\n        } else if ( isTexture( gl, attachment ) )\n            resizeTexture( gl, attachment, attachmentOpts, width, height );\n        else\n            throw new Error( 'unknown attachment type -- fun resizeFramebufferInfo()' );\n\n    } );\n\n}\n\nexport { createFramebufferInfo, bindFramebufferInfo, readPixcelFromFrameBufferInfo, resizeFramebufferInfo };\n","import { ColorpickShader } from '../shader/ColorpickShader';\nimport { createFramebufferInfo, bindFramebufferInfo, readPixcelFromFrameBufferInfo, resizeFramebufferInfo } from '../renderer/framebuffer';\nimport { clear } from '../renderer/webgl';\n\nfunction id2Color( id ) {\n\n    if ( id >= 0xffffff ) {\n\n        id = 0; // eslint-disable-line\n        console.warn( `Color picker models length bigger than max length ${0xffffff - 1}` );\n\n    }\n\n    const a = new Float32Array( 3 );\n    a[ 0 ] = ( id & 0xff ) / 255.0;\n    a[ 1 ] = ( ( id & 0xff00 ) >> 8 ) / 255.0;\n    a[ 2 ] = ( ( id & 0xff0000 ) >> 16 ) / 255.0;\n    return a;\n\n}\n\nfunction color2Id( colorArray ) {\n\n    return colorArray[ 0 ] | ( colorArray[ 1 ] << 8 ) | ( colorArray[ 2 ] << 16 );\n\n}\n\nfunction FramebufferPicker( gl, controler ) {\n\n    this.gl = gl;\n    this.canvas = gl.canvas;\n    this.controler = controler;\n    this.shader = new ColorpickShader( gl );\n    this.models = [];\n    this.blankColor = this.id2Color( this.blankId );\n    this.framebufferInfo = createFramebufferInfo( gl );\n    this.flag = 0;\n\n    this.isActive = false;\n    this.updateCanvasParam();\n\n    this.eventListeners = { type: 'mouseleftclick', listener: this.onmouseclick.bind( this ) };\n\n    this.controler.addListeners( this.eventListeners );\n\n}\n\nObject.assign( FramebufferPicker.prototype, {\n\n    blankId: 0,\n\n    maxId: 0xffffff,\n\n    id2Color,\n\n    color2Id,\n\n    addModels( ...models ) {\n\n        if ( this.models.length >= this.maxId - 1 )\n            throw new Error( `Color picker models length bigger than max length ${this.maxId - 1}` );\n\n        for ( let i = 0; i < models.length; i ++ )\n            if ( Array.isArray( models[ i ] ) )\n                this.addModels( ...models[ i ] );\n            else\n                this.models.push( models[ i ] );\n\n        return this;\n\n    },\n\n    removeModels( ...models ) {\n\n        let index = - 1;\n\n        for ( let i = 0; i < models.length; i ++ )\n            if ( Array.isArray( models[ i ] ) )\n                this.removeModels( ...models[ i ] );\n            else {\n\n                index = this.models.indexOf( models[ i ] );\n                if ( index > - 1 )\n                    this.models.splice( index, 1 );\n\n            }\n\n        return this;\n\n    },\n\n    clear() {\n\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        clear( this.gl );\n        bindFramebufferInfo( this.gl, null );\n\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        this.shader.setCamera( camera );\n        return this;\n\n    },\n\n    render() {\n\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        this.shader.updateCamera();\n        this.models.forEach( ( model, index ) => {\n\n            this.shader.setColor( this.id2Color( index + 1 ) ).renderModel( model );\n\n        } );\n        bindFramebufferInfo( this.gl, null );\n\n        return this;\n\n    },\n\n    pick( x, y ) {\n\n        const p = readPixcelFromFrameBufferInfo( this.gl, this.framebufferInfo, x, this.gl.canvas.clientHeight - y );\n        const id = this.color2Id( p );\n        console.log( x, y, p, id, this.models[ id - 1 ] );\n\n    },\n\n    updateCanvasParam() {\n\n        const box = this.canvas.getBoundingClientRect();\n        this.offsetX = box.left;\n        this.offsetY = box.top;\n        this.lastCanvasWidth = this.canvas.clientWidth;\n        this.lastCanvasHeight = this.canvas.clientWidth;\n        return this;\n\n    },\n\n    onmouseclick( e ) {\n\n        if ( this.isActive ) {\n\n            const x = e.pageX - this.offsetX;\n            const y = e.pageY - this.offsetY;\n            this.needPick = true;\n            this.pickx = x;\n            this.picky = y;\n\n        }\n\n    },\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners );\n        return this;\n\n    },\n\n    update() {\n\n        if ( this.needPick ) {\n\n            if ( this.canvas.clientWidth !== this.lastCanvasWidth || this.canvas.clientHeight !== this.lastCanvasHeight ) {\n\n                this.resizeFramebufferInfo( this.canvas.clientWidth, this.canvas.clientHeight );\n                this.updateCanvasParam();\n\n            }\n            this.clear().render();\n            this.pick( this.pickx, this.picky );\n            this.needPick = false;\n\n        }\n\n        return this;\n\n    },\n\n    activate() {\n\n        this.isActive = true;\n        this.updateCanvasParam();\n        return this;\n\n    },\n\n    deactivate() {\n\n        this.isActive = false;\n        return this;\n\n    },\n\n    resizeFramebufferInfo( width, height ) {\n\n        resizeFramebufferInfo( this.gl, this.framebufferInfo, undefined, width, height );\n        return this;\n\n    },\n\n} );\n\nexport { FramebufferPicker, id2Color, color2Id };\n","import { Shader } from './Shader';\nimport vs from './shadersrc/screenQuad.vs.glsl';\nimport fs from './shadersrc/screenQuad.fs.glsl';\n\nfunction ScreenQuadShader( gl ) {\n\n    Shader.call( this, gl, ScreenQuadShader.vs, ScreenQuadShader.fs );\n\n    this.setFlipy( true );\n\n    this.deactivate();\n\n}\n\nScreenQuadShader.prototype = Object.assign( Object.create( Shader.prototype ), {\n\n    constructor: ScreenQuadShader,\n\n    setFlipy( flip ) {\n\n        this.setUniformObj( { u_flipy: !! flip } );\n\n    },\n\n} );\n\nObject.assign( ScreenQuadShader, {\n\n    vs,\n    fs,\n\n} );\n\nexport { ScreenQuadShader };\n","import { id2Color, color2Id } from './FramebufferPicker';\nimport { readPixcelFromFrameBufferInfo } from '../renderer/framebuffer';\n\nfunction BufferPicker( gl, models, framebufferInfo, controler, bufferIdx = 1 ) {\n\n    this.gl = gl;\n    this.canvas = gl.canvas;\n    this.models = models;\n    this.bufferIdx = bufferIdx;\n    this.framebufferInfo = framebufferInfo;\n    this.controler = controler;\n    this.eventListeners = { type: 'mouseleftclick', listener: this.onmouseclick.bind( this ) };\n    this.controler.addListeners( this.eventListeners );\n\n    this.isActive = false;\n    this.updateCanvasParam();\n\n}\n\nObject.assign( BufferPicker.prototype, {\n\n    blankColor: id2Color( 0 ),\n\n    id2Color,\n\n    color2Id,\n\n    pick( x, y ) {\n\n        const ratio = this.framebufferInfo.width / this.canvas.clientWidth;\n        const p = readPixcelFromFrameBufferInfo( this.gl, this.framebufferInfo, x * ratio, this.gl.canvas.height - y * ratio, this.bufferIdx );\n        const id = this.color2Id( p );\n        console.log( x, y, p, id, this.models[ id - 1 ] );\n\n    },\n\n    updateCanvasParam() {\n\n        const box = this.canvas.getBoundingClientRect();\n        this.offsetX = box.left;\n        this.offsetY = box.top;\n        this.lastCanvasWidth = this.canvas.width;\n        this.lastCanvasHeight = this.canvas.height;\n        return this;\n\n    },\n\n    dispose() {\n\n        this.controler.removeListeners( this.eventListeners );\n        return this;\n\n    },\n\n    setActivate( activate ) {\n\n        if ( activate ) {\n\n            this.isActive = true;\n            this.updateCanvasParam();\n\n        } else\n            this.isActive = false;\n\n        return this;\n\n    },\n\n    onmouseclick( e ) {\n\n        if ( this.isActive ) {\n\n            if ( this.canvas.width !== this.lastCanvasWidth || this.canvas.height !== this.lastCanvasHeight )\n                this.updateCanvasParam();\n\n            const x = e.pageX - this.offsetX;\n            const y = e.pageY - this.offsetY;\n            this.pick( x, y );\n\n        }\n\n    },\n\n} );\n\nexport { BufferPicker };\n","function addFunction( func ) {\n\n    if ( typeof func === 'function' )\n        this.push( func );\n    else\n        console.warn( `listenerOptions.listener( ${func} ) is not a function.` );\n\n}\n\nfunction removeFunction( func ) {\n\n    const idx = this.indexOf( func );\n    if ( idx > - 1 )\n        this.splice( idx, 1 );\n\n}\n\nfunction addFunctionsToArrays( array ) {\n\n    array.forEach( ary => Object.assign( ary, {\n        addFunction: addFunction.bind( ary ),\n        removeFunction: removeFunction.bind( ary ),\n    } ) );\n\n}\n\nconst BUTTONS = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\nfunction createEventListener( funcs, bindpoint ) {\n\n    const functions = funcs;\n    return function ( e ) {\n\n        if ( this.enable === false ) return;\n\n        functions.forEach( ( listener ) => {\n\n            listener( e );\n\n        } );\n\n    }.bind( bindpoint );\n\n}\n\nfunction Controler( element ) {\n\n    this.element = element;\n\n    this.enable = true;\n\n    this.mouseDownListeners = [];\n    this.mouseMoveListeners = [];\n    this.mouseUpListeners = [];\n\n    this.mouseWheelListeners = [];\n\n    this.keydownListeners = [];\n    this.keyupListeners = [];\n\n    this.touchStartListeners = [];\n    this.touchMoveListeners = [];\n    this.touchEndListeners = [];\n\n    this.mouseClickListeners = [];\n    this.mouseLeftClickListeners = [];\n    this.mouseMiddleClickListeners = [];\n    this.mouseRightClickListeners = [];\n\n    addFunctionsToArrays( [\n\n        this.mouseDownListeners,\n        this.mouseMoveListeners,\n        this.mouseUpListeners,\n\n        this.mouseWheelListeners,\n\n        this.keydownListeners,\n        this.keyupListeners,\n\n        this.touchStartListeners,\n        this.touchMoveListeners,\n        this.touchEndListeners,\n\n        this.mouseClickListeners,\n        this.mouseLeftClickListeners,\n        this.mouseMiddleClickListeners,\n        this.mouseRightClickListeners,\n\n    ] );\n\n    this.oncontext = function ( e ) {\n\n        if ( this.enable === false ) return;\n        e.preventDefault();\n\n    }.bind( this );\n\n    this.element.addEventListener( 'contextmenu', this.oncontext, false );\n\n    this.onmousedown = createEventListener( this.mouseDownListeners, this );\n    this.element.addEventListener( 'mousedown', this.onmousedown, false );\n    this.onmousemove = createEventListener( this.mouseMoveListeners, this );\n    this.element.addEventListener( 'mousemove', this.onmousemove, false );\n    this.onmouseup = createEventListener( this.mouseUpListeners, this );\n    document.addEventListener( 'mouseup', this.onmouseup, false );\n\n    this.onwheel = createEventListener( this.mouseWheelListeners, this );\n    this.element.addEventListener( 'wheel', this.onwheel, false );\n\n    this.onkeydown = createEventListener( this.keydownListeners, this );\n    window.addEventListener( 'keydown', this.onkeydown, false );\n    this.onkeyup = createEventListener( this.keyupListeners, this );\n    window.addEventListener( 'keyup', this.onkeyup, false );\n\n    this.ontouchstart = createEventListener( this.touchStartListeners, this );\n    this.element.addEventListener( 'touchstart', this.ontouchstart, false );\n    this.ontouchmove = createEventListener( this.touchMoveListeners, this );\n    this.element.addEventListener( 'touchmove', this.ontouchmove, false );\n    this.ontouchend = createEventListener( this.touchEndListeners, this );\n    this.element.addEventListener( 'touchend', this.ontouchend, false );\n\n    this.onmouseclick = createEventListener( this.mouseClickListeners, this );\n    this.onmouseleftclick = createEventListener( this.mouseLeftClickListeners, this );\n    this.onmousemiddleclick = createEventListener( this.mouseMiddleClickListeners, this );\n    this.onmouserightclick = createEventListener( this.mouseRightClickListeners, this );\n\n    this._flag = 0;\n    const self = this;\n    this.addListeners( [\n        {\n            type: 'mousedown',\n            listener() {\n\n                self._flag = 0;\n\n            },\n        },\n        {\n            type: 'mousemove',\n            listener() {\n\n                self._flag = 1;\n\n            },\n        },\n        {\n            type: 'mouseup',\n            listener( e ) {\n\n                if ( self.enable === false ) return;\n                if ( self._flag === 0 ) {\n\n                    self.onmouseclick( e );\n                    switch ( e.button ) {\n\n                    case BUTTONS.LEFT:\n                        self.onmouseleftclick( e );\n                        break;\n\n                    case BUTTONS.MIDDLE:\n                        self.onmousemiddleclick( e );\n                        break;\n\n                    case BUTTONS.RIGHT:\n                        self.onmouserightclick( e );\n                        break;\n\n                    default:\n                        break;\n\n                    }\n\n                }\n\n            },\n        },\n    ] );\n\n}\n\nObject.assign( Controler.prototype, {\n\n    addListeners( ...listenersOpts ) {\n\n        for ( let i = 0; i < listenersOpts.length; i ++ )\n            if ( Array.isArray( listenersOpts[ i ] ) )\n                this.addListeners( ...listenersOpts[ i ] );\n            else {\n\n                const listenerOptions = listenersOpts[ i ];\n                switch ( listenerOptions.type ) {\n\n                case 'mousedown':\n                    this.mouseDownListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemove':\n                    this.mouseMoveListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseup':\n                    this.mouseUpListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'wheel':\n                    this.mouseWheelListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'keydown':\n                    this.keydownListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'keyup':\n                    this.keyupListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchstart':\n                    this.touchStartListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchend':\n                    this.touchEndListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchmove':\n                    this.touchMoveListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseclick':\n                    this.mouseClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseleftclick':\n                    this.mouseLeftClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemiddleclick':\n                    this.mouseMiddleClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouserightclick':\n                    this.mouseRightClickListeners.addFunction( listenerOptions.listener );\n                    break;\n\n                default:\n                    break;\n\n                }\n\n            }\n\n        return this;\n\n    },\n\n    removeListeners( ...listenersOpts ) {\n\n        for ( let i = 0; i < listenersOpts.length; i ++ )\n            if ( Array.isArray( listenersOpts[ i ] ) )\n                this.removeListeners( ...listenersOpts[ i ] );\n            else {\n\n                const listenerOptions = listenersOpts[ i ];\n                switch ( listenerOptions.type ) {\n\n                case 'mousedown':\n                    this.mouseDownListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemove':\n                    this.mouseMoveListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseup':\n                    this.mouseUpListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'wheel':\n                    this.mouseWheelListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'keydown':\n                    this.keydownListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'keyup':\n                    this.keyupListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchstart':\n                    this.touchStartListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchend':\n                    this.touchEndListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'touchmove':\n                    this.touchMoveListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseclick':\n                    this.mouseClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouseleftclick':\n                    this.mouseLeftClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mousemiddleclick':\n                    this.mouseMiddleClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                case 'mouserightclick':\n                    this.mouseRightClickListeners.removeFunction( listenerOptions.listener );\n                    break;\n\n                default:\n                    break;\n\n                }\n\n            }\n\n        return this;\n\n    },\n\n    dispose() {\n\n        this.element.removeEventListener( 'contextmenu', this.oncontext, false );\n\n        this.element.removeEventListener( 'mousedown', this.onmousedown, false );\n        this.element.removeEventListener( 'mousemove', this.onmousemove, false );\n        this.element.removeEventListener( 'mouseup', this.onmouseup, false );\n\n        this.element.removeEventListener( 'wheel', this.onwheel, false );\n\n        this.element.removeEventListener( 'keydown', this.onkeydown, false );\n        this.element.removeEventListener( 'keyup', this.onkeyup, false );\n\n        this.element.removeEventListener( 'touchstart', this.ontouchstart, false );\n        this.element.removeEventListener( 'touchmove', this.ontouchmove, false );\n        this.element.removeEventListener( 'touchend', this.ontouchend, false );\n\n        return this;\n\n    },\n\n} );\n\nexport { Controler };\n","import { createFramebufferInfo, bindFramebufferInfo, resizeFramebufferInfo } from '../renderer/framebuffer';\nimport { Quad } from '../model/Primatives';\nimport { ScreenQuadShader } from '../shader/ScreenQuadShader';\nimport { BufferPicker } from '../controls/BufferPicker';\nimport { Controler } from '../controls/Controler';\nimport { Node } from './Node';\n\nfunction Scene( renderer, controler ) {\n\n    this.models = [];\n    this.shaders = [];\n    this.shadersMap = [];\n    this.helpers = [];\n    this.helpersMap = [];\n    this._currentCamera = null;\n    this.cameras = [];\n\n    this.root = new Node( 'root_node' );\n    this.renderer = renderer;\n    this.gl = this.renderer.context;\n    this.canvas = this.gl.canvas;\n    this.controler = controler || new Controler( this.gl.canvas );\n    this.quad2UnitModel = Quad.createModel( 'screenQuad', 2 );\n    this.ScreenQuadShader = new ScreenQuadShader( this.gl ).setDefines( 'FXAA' ).setUniformObj( { u_resolution: [ this.gl.canvas.width, this.gl.canvas.height ] } );\n\n    const defaultAttachment = [\n        {\n            format: this.gl.RGBA, type: this.gl.UNSIGNED_BYTE, minMag: this.gl.LINEAR, wrap: this.gl.CLAMP_TO_EDGE,\n        },\n        {\n            format: this.gl.RGBA, type: this.gl.UNSIGNED_BYTE, minMag: this.gl.LINEAR, wrap: this.gl.CLAMP_TO_EDGE,\n        },\n        { format: this.gl.DEPTH_STENCIL },\n    ];\n\n    this.attachments = defaultAttachment;\n    this.framebufferInfo = createFramebufferInfo( this.gl, this.attachments );\n    this.bufferPicker = new BufferPicker( this.gl, this.models, this.framebufferInfo, this.controler, 1 );\n\n    this.setPick( false );\n\n}\n\nObject.defineProperties( Scene.prototype, {\n\n    currentCamera: {\n\n        get() {\n\n            return this._currentCamera;\n\n        },\n\n        set( camera ) {\n\n            this.setCamera( camera );\n\n        },\n\n    },\n\n} );\n\nObject.assign( Scene.prototype, {\n\n    add( ...objs ) {\n\n        for ( let i = 0; i < objs.length; i ++ )\n            if ( Array.isArray( objs[ i ] ) )\n                this.add( ...objs[ i ] );\n            else {\n\n                if ( objs[ i ].shader )\n                    this.addModelToShader( objs[ i ].shader, objs[ i ].model );\n                if ( objs[ i ].helper )\n                    this.addDataToHelper( objs[ i ].helper, objs[ i ].data );\n                if ( objs[ i ].camera )\n                    this.addCamera( objs[ i ].camera );\n\n            }\n\n        return this;\n\n    },\n\n    addModelToShader( shader, model ) {\n\n        if ( Array.isArray( model ) )\n            model.forEach( m => this.addModelToShader( shader, m ) );\n        else {\n\n            if ( model instanceof Node )\n                return this.addNodeToShader( shader, model );\n\n            const shaderIdx = this.shadersMap.indexOf( shader );\n            let modelIdx = - 1;\n            if ( shaderIdx > - 1 ) {\n\n                modelIdx = this.shaders[ shaderIdx ].models.indexOf( model );\n                if ( modelIdx < 0 )\n                    this.shaders[ shaderIdx ].models.push( model );\n\n            } else {\n\n                const shaderObj = { shader: this.enablePick ? shader.setDefines( 'ColorPick' ) : shader, models: [ model ] };\n                this.shaders.push( shaderObj );\n                this.shadersMap.push( shader );\n\n            }\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx < 0 ) {\n\n                this.models.push( model );\n                this.root.addChild( model );\n                if ( this.enablePick )\n                    model.setUniformObj( { u_colorId: this.bufferPicker.id2Color( this.models.length ) } );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    addNodeToShader( shader, node ) {\n\n        const models = [];\n        const cameras = [];\n        function getTargets( nodep ) {\n\n            if ( nodep.model )\n                models.push( nodep.model );\n\n            if ( nodep.camera )\n                cameras.push( nodep.camera );\n\n        }\n        node.traverse( getTargets );\n\n        let shaderIdx = this.shadersMap.indexOf( shader );\n        if ( shaderIdx < 0 ) {\n\n            const shaderObj = { shader: this.enablePick ? shader.setDefines( 'ColorPick' ) : shader, models: [] };\n            this.shaders.push( shaderObj );\n            this.shadersMap.push( shader );\n            shaderIdx = this.shaders.length - 1;\n\n        }\n\n        const shaderModels = this.shaders[ shaderIdx ].models;\n        for ( let i = 0; i < models.length; i ++ ) {\n\n            const model = models[ i ];\n            let modelIdx = shaderModels.indexOf( model );\n            if ( modelIdx < 0 )\n                shaderModels.push( model );\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx < 0 ) {\n\n                this.models.push( model );\n                if ( this.enablePick )\n                    model.setUniformObj( { u_colorId: this.bufferPicker.id2Color( this.models.length ) } );\n\n            }\n\n        }\n\n        this.root.addChild( node );\n        this.addCamera( cameras );\n\n        return this;\n\n    },\n\n    addDataToHelper( helper, data ) {\n\n        if ( Array.isArray( data ) )\n            data.forEach( d => this.addDataToHelper( helper, d ) );\n        else {\n\n            const helperIdx = this.helpersMap.indexOf( helper );\n            if ( helperIdx > - 1 )\n                this.helpers[ helperIdx ].datas.push( data );\n            else {\n\n                const helperObj = { helper, datas: [ data ] };\n                this.helpers.push( helperObj );\n                this.helpersMap.push( helper );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    addCamera( camera ) {\n\n        if ( Array.isArray( camera ) )\n            camera.forEach( c => this.addCamera( c ) );\n        else {\n\n            if ( ! camera.isCamera ) return this;\n            const idx = this.cameras.indexOf( camera );\n            if ( idx < 0 ) {\n\n                this.cameras.push( camera );\n                const cameraNode = this.root.findInChildren( 'camera', camera );\n                if ( ! cameraNode )\n                    this.root.addChild( camera );\n                const node = camera.node;\n                node.afterUpdateMatrix.push( {\n                    type: 'camera',\n                    cameraName: camera.name,\n                    handler: camera.updateViewMatFromModelMat.bind( camera ),\n                    trigerNodes: [ node ],\n                } );\n\n            }\n\n            if ( ! this._currentCamera )\n                this._currentCamera = camera.updateProjMatrix( this.canvas.width / this.canvas.height );\n\n        }\n\n        return this;\n\n    },\n\n    setCamera( camera ) {\n\n        let cameraObj;\n        if ( camera && camera.isCamera ) {\n\n            this.addCamera( camera );\n            cameraObj = camera;\n\n        } else if ( camera instanceof Node && camera.camera ) {\n\n            this.addCamera( camera.camera );\n            cameraObj = camera.camera;\n\n        }\n        if ( cameraObj )\n            this._currentCamera = cameraObj.updateProjMatrix( this.canvas.width / this.canvas.height );\n        return this;\n\n    },\n\n    remove( ...objs ) {\n\n        for ( let i = 0; i < objs.length; i ++ )\n            if ( Array.isArray( objs[ i ] ) )\n                this.remove( ...objs[ i ] );\n            else {\n\n                if ( objs[ i ].shader )\n                    this.removeModelFromShader( objs[ i ].shader, objs[ i ].model );\n                if ( objs[ i ].helper )\n                    this.removeDataFromHelper( objs[ i ].helper, objs[ i ].data );\n\n            }\n\n        return this;\n\n    },\n\n    removeModelFromShader( shader, model ) {\n\n        if ( Array.isArray( model ) )\n            model.forEach( m => this.removeModelFromShader( shader, m ) );\n        else {\n\n            if ( model instanceof Node )\n                return this.removeNodeFromShader( shader, model );\n\n            const shaderIdx = this.shadersMap.indexOf( shader );\n            let modelIdx = - 1;\n            if ( shaderIdx > - 1 ) {\n\n                modelIdx = this.shaders[ shaderIdx ].models.indexOf( model );\n                if ( modelIdx > - 1 )\n                    this.shaders[ shaderIdx ].models.splice( modelIdx, 1 );\n                if ( this.shaders[ shaderIdx ].models.length < 1 ) {\n\n                    this.shaders.splice( shaderIdx, 1 );\n                    this.shadersMap.splice( shaderIdx, 1 );\n\n                }\n\n            }\n\n            modelIdx = this.models.indexOf( model );\n            if ( modelIdx > - 1 ) {\n\n                this.models.splice( modelIdx, 1 );\n                if ( model.node.parent === this.root )\n                    this.root.remove( model.node );\n                if ( this.enablePick )\n                    this.needUpdateColorId = true;\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    removeNodeFromShader( shader, node ) {\n\n        const models = [];\n        const cameras = [];\n        function getTargets( nodep ) {\n\n            if ( nodep.model )\n                models.push( nodep.model );\n\n            if ( nodep.camera )\n                cameras.push( nodep.camera );\n\n        }\n\n        if ( Array.isArray( node ) )\n            node.forEach( n => this.removeNodeFromShader( shader, n ) );\n        else {\n\n            node.traverse( getTargets );\n            this.removeModelFromShader( shader, models );\n            this.removeCamera( cameras );\n            Node.remove( node );\n\n        }\n\n        return this;\n\n    },\n\n    removeCamera( camera ) {\n\n        if ( Array.isArray( camera ) )\n            camera.forEach( c => this.removeCamera( c ) );\n        else {\n\n            const idx = this.cameras.indexOf( camera );\n            if ( idx > - 1 ) {\n\n                this.cameras.splice( idx, 1 );\n                if ( this.currentCamera === camera )\n                    this.setCamera( this.cameras[ 0 ] );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    removeDataFromHelper( helper, data ) {\n\n        if ( Array.isArray( data ) )\n            data.forEach( d => this.removeDataFromHelper( helper, d ) );\n        else {\n\n            const helperIdx = this.helpersMap.indexOf( helper );\n            if ( helperIdx > - 1 ) {\n\n                const dataIdx = this.helpers[ helperIdx ].datas.indexOf( data );\n                if ( dataIdx > - 1 )\n                    this.helpers[ helperIdx ].datas.splice( dataIdx, 1 );\n\n            }\n\n        }\n\n        return this;\n\n    },\n\n    render2Buffer( resize ) {\n\n        if ( resize ) {\n\n            resizeFramebufferInfo( this.gl, this.framebufferInfo, this.attachments );\n            this.ScreenQuadShader.setUniformObj( { u_resolution: [ this.gl.canvas.width, this.gl.canvas.height ] } );\n\n        }\n        bindFramebufferInfo( this.gl, this.framebufferInfo );\n        this.renderer.clear();\n        this.render();\n        bindFramebufferInfo( this.gl, null );\n        return this;\n\n    },\n\n    render2Screen( attachment = 0 ) {\n\n        this.ScreenQuadShader.setTexture( this.framebufferInfo.attachments[ attachment ] ).renderModel( this.quad2UnitModel );\n        return this;\n\n    },\n\n    render() {\n\n        this.root.updateMatrix();\n\n        if ( this.enablePick && this.needUpdateColorId ) {\n\n            this.models.forEach( ( m, id ) => m.setUniformObj( { u_colorId: id + 1 } ) );\n            this.needUpdateColorId = false;\n\n        }\n\n        let curShader;\n        let curShaderObj;\n        let curModel;\n        for ( let i = 0; i < this.shaders.length; i ++ ) {\n\n            curShaderObj = this.shaders[ i ];\n            curShader = curShaderObj.shader;\n\n            for ( let j = 0; j < curShaderObj.models.length; j ++ ) {\n\n                curModel = curShaderObj.models[ j ];\n                curShader.setCamera( this.currentCamera ).renderModel( curModel );\n\n            }\n\n            curShader.deactivate();\n\n        }\n\n        for ( let i = 0; i < this.helpers.length; i ++ ) {\n\n            curShaderObj = this.helpers[ i ];\n            curShader = curShaderObj.helper;\n            for ( let j = 0; j < curShaderObj.datas.length; j ++ ) {\n\n                curModel = curShaderObj.datas[ j ];\n                if ( curModel.data ) {\n\n                    curShader.setData( curModel.data );\n\n                    if ( curModel.transform )\n                        curShader.model.setTransform( curModel.transform );\n\n                    if ( curModel.position )\n                        curShader.model.setPosition( curModel.position );\n\n                    if ( curModel.rotation )\n                        curShader.model.setRotation( curModel.rotation );\n\n                    if ( curModel.scale )\n                        curShader.model.setScale( curModel.scale );\n\n                    curShader.setCamera( this.currentCamera ).render();\n\n                }\n\n            }\n\n\n        }\n\n    },\n\n    setPick( enable ) {\n\n        if ( !! enable === this.enablePick ) return this;\n\n        if ( enable ) {\n\n            this.shadersMap.forEach( shader => shader.setDefines( 'ColorPick' ) );\n            this.models.forEach( ( m, idx ) => m.setUniformObj( { u_colorId: this.bufferPicker.id2Color( idx + 1 ) } ) );\n\n        }\n\n        if ( ! enable )\n            this.shadersMap.forEach( shader => shader.setDefines() );\n\n        this.enablePick = !! enable;\n        this.bufferPicker.setActivate( this.enablePick );\n        return this;\n\n    },\n\n    removeAll() {\n\n        this.models = [];\n        this.shaders = [];\n        this.shadersMap = [];\n        this.helpers = [];\n        this.helpersMap = [];\n        let camera = null;\n        const removeNodes = [];\n        this.root.children.forEach( ( c ) => {\n\n            if ( ! c.camera )\n                removeNodes.push( c );\n            else\n                camera = c.camera;\n\n        } );\n        removeNodes.forEach( n => Node.remove( n ) );\n        this.setCamera( camera );\n        return this;\n\n    },\n\n} );\n\nexport { Scene };\n","import { Quaternion } from '../math/Quaternion';\n\nfunction linearLerp( out, v1, v2, t ) {\n\n    for ( let i = 0; i < v1.length; i ++ )\n        out[ i ] = v1[ i ] + t * ( v2[ i ] - v1[ i ] ); // eslint-disable-line\n\n    return out;\n\n}\n\nfunction quaternionLinearSlerp( out, v1, v2, t ) {\n\n    Quaternion.slerp( out, v1, v2, t );\n    return out;\n\n}\n\nfunction setpLerp( out, v1 ) {\n\n    out = v1; // eslint-disable-line\n    return out;\n\n}\n\nfunction splineLerp( out, v1, v2, t, ts ) {\n\n    const p0 = v1[ 1 ];\n    const m0 = ts * v1[ 2 ];\n    const p1 = v2[ 1 ];\n    const m1 = ts * v2[ 0 ];\n    const t2 = t * t;\n    const t3 = t2 * t;\n    out = ( 2 * t3 - 3 * t2 + 1 ) * p0 + ( t3 - 2 * t2 + t ) * m0 + ( - 2 * t3 + 3 * t2 ) * p1 + ( t3 - t2 ) * m1; // eslint-disable-line\n\n    return out;\n\n}\n\nfunction Animator( rawData ) {\n\n    this.raw = rawData;\n    this._parseRawData( rawData );\n    this._playList = [];\n\n}\n\nObject.assign( Animator.prototype, {\n\n    _parseRawData( raw ) {\n\n        this.animations = Animator.types[ raw.type ]( raw );\n\n    },\n\n    resetAll() {\n\n        this.animations.forEach( ( animate ) => {\n\n            animate.clips.forEach( ( clip ) => {\n\n                clip.currentTime = 0; // eslint-disable-line\n                clip.sumTime = 0; // eslint-disable-line\n                clip.resetTarget();\n\n            } );\n\n        } );\n\n        return this;\n\n    },\n\n    playAnimation( name ) {\n\n        this._playList = [];\n        this.animations.forEach( ( animation ) => {\n\n            if ( animation.name === name )\n                this._playList = [ animation ];\n\n        } );\n\n        return this;\n\n    },\n\n    playAll() {\n\n        this._playList = [];\n        this.animations.forEach( animation => this._playList.push( animation ) );\n\n        return this;\n\n    },\n\n    update( dtime ) {\n\n        for ( let i = 0; i < this._playList.length; i ++ ) {\n\n            const clips = this._playList[ i ].clips;\n            for ( let j = 0; j < clips.length; j ++ ) {\n\n                const clip = clips[ j ];\n                let {\n                    sumTime, currentTime,\n                } = clip;\n                const {\n                    minTime, maxTime, times, values, lerpFun, setTarget, animateMaxTime, animateMinTime,\n                } = clip;\n\n                sumTime += dtime;\n                currentTime += dtime;\n                if ( currentTime >= animateMaxTime )\n                    currentTime %= animateMaxTime;\n\n                clip.sumTime = sumTime;\n                clip.currentTime = currentTime;\n                if ( currentTime < animateMinTime || currentTime < minTime || currentTime > maxTime ) continue;\n\n                let currentIdx;\n                for ( let t = 0; t < times.length; t ++ )\n                    if ( currentTime < times[ t ] ) {\n\n                        currentIdx = t - 1;\n                        break;\n\n                    }\n\n                const timeSpan = times[ currentIdx + 1 ] - times[ currentIdx ];\n                const timePercent = ( currentTime - times[ currentIdx ] ) / timeSpan;\n                const result = lerpFun( clip.currentValue, values[ currentIdx ], values[ currentIdx + 1 ], timePercent, timeSpan );\n                setTarget( result );\n\n            }\n\n        }\n\n    },\n\n} );\n\nObject.assign( Animator, {\n    types: {\n\n        gltf( raw ) {\n\n            const { animations } = raw;\n            const result = [];\n            for ( let i = 0; i < animations.length; i ++ ) {\n\n                const {\n                    name, clips, animateMinTime, animateMaxTime,\n                } = animations[ i ];\n                const clipsRes = [];\n                for ( let j = 0; j < clips.length; j ++ ) {\n\n                    const {\n                        targetProp, times, values, setTarget, resetTarget, method,\n                    } = clips[ j ];\n\n                    let lerpFun;\n                    switch ( method ) {\n\n                    case 'LINEAR':\n                        if ( targetProp === 'quaternion' )\n                            lerpFun = quaternionLinearSlerp;\n                        else\n                            lerpFun = linearLerp;\n                        break;\n                    case 'STEP':\n                        lerpFun = setpLerp;\n                        break;\n                    case 'CUBICSPLINE':\n                        lerpFun = splineLerp;\n                        break;\n                    default:\n                        break;\n\n                    }\n\n                    if ( ! lerpFun ) {\n\n                        console.log( `unsupported animation interpolation ${method}` );\n                        continue;\n\n                    }\n\n                    const clipRes = {\n                        times,\n                        values,\n                        lerpFun,\n                        setTarget,\n                        resetTarget,\n                        minTime: times[ 0 ],\n                        maxTime: times[ times.length - 1 ],\n                        animateMinTime,\n                        animateMaxTime,\n                        sumTime: 0,\n                        currentTime: 0,\n                        currentValue: values[ 0 ].slice ? values[ 0 ].slice() : values[ 0 ],\n                    };\n\n                    clipsRes.push( clipRes );\n\n                }\n\n                result.push( { name, clips: clipsRes } );\n\n            }\n\n            return result;\n\n        },\n\n    },\n} );\n\nexport { Animator };\n","const RADIAN_PER_DEGREE = Math.PI / 180;\nconst DEGREE_PER_RADIAN = 180 / Math.PI;\nconst EPS = 0.000001;\n\nconst PMath = {\n\n    RADIAN_PER_DEGREE,\n\n    degree2Radian( degree ) {\n\n        return degree * RADIAN_PER_DEGREE;\n\n    },\n\n    radian2Degree( radian ) {\n\n        return radian * DEGREE_PER_RADIAN;\n\n    },\n\n    clamp( value, min, max ) {\n\n        return Math.max( min, Math.min( max, value ) );\n\n    },\n\n    map( value, min, max, tarMin, tarMax ) {\n\n        return tarMin + ( tarMax - tarMin ) * ( value - min ) / ( max - min );\n\n    },\n\n    arrayEquals( a, b ) {\n\n        if ( a.length !== b.length ) return false;\n\n        const length = a.length;\n        for ( let i = 0; i < length; i ++ )\n            if ( Math.abs( a[ i ] - b[ i ] ) > EPS * Math.max( 1.0, Math.abs( a[ i ] ), Math.abs( b[ i ] ) ) )\n                return false;\n\n        return true;\n\n    },\n\n    arrayClone( a ) {\n\n        const Type = a.constructor;\n        const length = a.length;\n        const out = new Type( length );\n        for ( let i = 0; i < length; i ++ )\n            out[ i ] = a[ i ];\n\n        return out;\n\n    },\n\n};\n\nexport { PMath };\n","import { createAttributesSetters, setAttributes } from './program';\n\nfunction createVertexArray( gl, bufferInfo, program, attribSetters ) {\n\n    const vao = gl.createVertexArray();\n    gl.bindVertexArray( vao );\n    setAttributes( attribSetters || createAttributesSetters( gl, program ), bufferInfo.attribs );\n    if ( bufferInfo.indices )\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices );\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n    gl.bindVertexArray( null );\n    return vao;\n\n}\n\nexport { createVertexArray };\n"],"names":["makeReadonlyObj","obj","result","keys","forEach","key","defineProperty","Vector3","x","y","z","raw","Quaternion","w","arguments","length","this","slice","Matrix4","identity","getGLTypeFromTypedArray","typedArray","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","Uint8ClampedArray","Int16Array","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","Float32Array","FLOAT","Error","getTypedArrayTypeFromGLType","type","arrayType","glTypeToTypedArray","getTypedArray","array","Type","isArrayBuffer","Transform","_position","_scale","_rotation","_quaternion","matrix","normMat","worldMatrix","forward","up","right","_needUpdateMatrix","needUpdateWorldMatrix","isWebGL2","gl","texStorage2D","getHTMLElementSrc","id","ele","document","getElementById","textContent","idx","indexOf","createShader","src","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","str","lines","split","limitLength","toString","prefix","map","line","index","substring","i","join","addLineNum","getShaderInfoLog","createProgram","vs","fs","opts","vShader","fShader","VERTEX_SHADER","FRAGMENT_SHADER","prog","attachShader","bindAttribLocation","ShaderParams","ATTRIB_POSITION_LOC","ATTRIB_POSITION_NAME","ATTRIB_NORMAL_LOC","ATTRIB_NORMAL_NAME","ATTRIB_UV_LOC","ATTRIB_UV_NAME","ATTRIB_BARYCENTRIC_LOC","ATTRIB_BARYCENTRIC_NAME","transformFeedbackVaryings","varyings","Array","isArray","Object","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","undefined","validateProgram","VALIDATE_STATUS","detachShader","deleteShader","getBindPointForSamplerType","typeMap","bindPoint","intSetter","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","texture","sampler","WebGLTexture","activeTexture","TEXTURE0","bindTexture","bindSampler","samplerArraySetter","size","units","ii","textures","floatAttribSetter","b","bindBuffer","ARRAY_BUFFER","buffer","enableVertexAttribArray","vertexAttribPointer","numComponents","normalize","stride","offset","divisor","vertexAttribDivisor","intAttribSetter","vertexAttribIPointer","matAttribSetter","typeInfo","defaultSize","count","rowOffset","isBuiltIn","info","name","startsWith","createAttributesSetters","program","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","attrTypeMap","setter","setAttributes","setters","buffers","attrib","createUniformSetters","createUnifromSetter","uniformInfo","getUniformLocation","substr","uint","textureUnit","arraySetter","uniformSetters","numUnifroms","ACTIVE_UNIFORMS","getActiveUniform","keyMap","UNIFORM_PREFIX","replace","setUniforms","unifroms","numArgs","vals","numVals","j","prototype","hasOwnProperty","call","createUniformBlockSpec","uniformData","uniformIndices","push","pair","gname","getActiveUniforms","value","blockSpecs","numUniformBlock","ACTIVE_UNIFORM_BLOCKS","getActiveUniformBlockName","blockSpec","getActiveUniformBlockParameter","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexShader","usedByFragmentShader","createUniformBlockInfo","uniformBlockSpec","blockName","warn","ArrayBuffer","createBuffer","uniformBufferIndex","UNIFORM_BUFFER","uniformBlockBinding","arraySuffixRE","test","uniforms","uniformidx","data","BYTES_PER_ELEMENT","createUniformBlockInfos","uboInfos","bindUniformBlock","uniformBlcokInfo","bufferBindIndex","bindBufferRange","byteLength","setUniformBlock","uniformBlockInfo","bufferData","DYNAMIC_DRAW","setBlockUniforms","values","changed","set","setBlockUniformsForProgram","uniformBlockInfos","createTransformFeedbackInfo","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","varying","getTransformFeedbackVarying","createTransformFeedback","transformfeedbaclnfo","bufferInfo","tf","bindTransformFeedback","TRANSFORM_FEEDBACK","useProgram","attribs","buf","TRANSFORM_FEEDBACK_BUFFER","bindBufferBase","isIndices","getArray","guessNumComponentsFromName","colorRE","textureRE","getNumComponents","createBufferFromTypedArray","drawType","STATIC_DRAW","WebGLBuffer","createBufferFromArray","ELEMENT_ARRAY_BUFFER","createAttribsFromArrays","arrays","attribName","normalization","numEle","numBytes","typedArrayType","getGLTypeFromTypedArrayType","createBufferInfoFromArrays","indices","newIndices","numElements","elementType","positionNames","getBufferParameter","BUFFER_SIZE","Math","floor","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttribs","setTypedArrayToBuffer","Matrix3","Shader","cullFace","blend","depth","sampleBlend","shaders","programs","programMap","camera","currentUniformObj","uniformObj","programInfos","uniformObjs","_programUpdated","setDefines","insertToString","string","position","CommonVAOShader","deactivate","Model","mesh","enablePick","transform","node","_uniformObj","getSquareDistance","p1","p2","dx","dy","dz","getSquareSegmentDistance","p","t","simplify","points","tolerance","highestQuality","sqTolerance","prevPoint","newPoints","point","len","simplifyRadialDistance","markers","first","last","stack","maxSqDist","sqDist","pop","simplifyDouglasPeucker","Mesh","attribArrays","options","prop","assign","BeginMode","TRIANGLES","deIndexAttribs","modelMesh","drawMode","tempAry","vao","Render","callback","fps","self","lastTime","isActive","frameTimeLimit","run","currentTime","performance","now","timespan","window","requestAnimationFrame","GridAxisShader","setUniformObj","u_colors","FlatTextureShader","u_texture","nightTex","dayTex","rate","DynamicSkyboxShader","u_dayTex","u_nightTex","u_rate","PointlightShader","pointSize","color","ColorPointShader","setPointSize","setColor","PhongLightShader","ColorpickShader","WireframeShader","MeshLineShader","TransformShader","transformfeedbackInfo","_customAttrib","GLTFShader","_maxVertexAttribs","getParameter","MAX_VERTEX_ATTRIBS","MeshLineModel","meshModel","widthCallback","error","meshc","process","empty","getFormatAndTypeFromInternalFormat","internalFromat","textureInternalFormatInfo","textureFormat","setTextureTo1PixelColor","tex","defaults","textureOptions","target","TEXTURE_2D","colorUsed","textureColor","make1Pixel","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGBA","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","loadImage","url","crossOrigin","clearEventHandlers","removeEventListener","onError","onLoad","img","cb","Image","cors","getDefaultCrossOrigin","addEventListener","savePatcState","colorspaceConversion","UNPACK_COLORSPACE_CONVERSION_WEBGL","pixelStorei","premultiplyAlpha","UNPACH_PREMULTIPLY_ALPHA_WEBGL","flipY","UNPACK_FLIP_Y_WEBGL","restorePackState","lastPackState","getCubeFacesOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithIdx","facesWithIdx","face","sort","a","shouldAutoSetTextureFiltering","auto","level","isPowerOf2","setTextureFiltering","widthP","heightP","internalFormatP","typeP","internalFormat","width","height","colorRenderable","textureFilterable","canGenerateMipmap","generateMipmap","filtering","canFilter","LINEAR","NEAREST","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setTextureParameters","parameteriFn","minMag","min","mag","wrap","WebGLSamplerCtor","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","setTextureFromElement","element","format","formatType","imgWidth","imgHeight","slices","nodeName","canvas","f","xOffset","yOffset","drawImage","ctx","smallest","largest","max","xMult","yMult","d","srcX","srcY","srcW","srcH","dstW","dstH","texSubImage3D","getTextureTypeFromArrayType","defaultType","guessDimensions","cWith","cHeight","sqrt","setTextureFromArray","typedSrc","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFromat","glEnumToString","dimensions","cbrt","UNPACK_ALIGNMENT","unpackAlignment","faceSize","subarray","loadCubeMapFromUrls","urls","numToLoad","errors","faces","imgs","faceTarget","err","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","s","createTexture","asyncOpts","imgBK","HTMLElement","setEmptyTexture","resizeTexture","clear","r","DefaultColor","BackgroundNormalized","g","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","Renderer","canvasOrId","context","names","getContext","log","VERSION","multiplier","BACK","frontFace","CCW","enable","CULL_FACE","DEPTH_TEST","depthFunc","LEQUAL","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","Camera","projMat","viewMat","PerspectiveCamera","fov","aspectRatio","near","far","fixAspectRatio","perspective","fovRadian","OrthographicCamera","zoom","left","bottom","top","ortho","Vector2","Spherical","radius","phi","theta","OrbitControls","domElement","controler","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","zoomFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","PAN","_offset","_spherical","_sphericalDelta","_sphericalDump","_zoomFrag","_panOffset","_isMouseUp","_vPan","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_zoomStart","_zoomEnd","_zoomDelta","STATE","ROTATE","TOUCH_ROTATE","TOUCH_ZOOM","TOUCH_PAN","_state","NONE","eventListeners","listener","onMouseDown","bind","onMouseWheel","onKeyDown","onTouchStart","onTouchEnd","onTouchMove","mouseMoveUpListeners","onMouseMove","onMouseUp","addListeners","update","FileLoader","files","items","addFiles","LinePaser","cArray","Node","nameModel","isModel","setModel","isCamera","setCamera","nodeCount","children","parent","_updatedThisFrame","afterUpdateMatrix","GLTFLoader","currentSceneName","errorMiss","nodeType","console","PointHelper","pointColor","POINTS","model","colors","ColorLineShader","setColors","LineHelper","normalLength","vertices","_getdata","LINES","setTransform","copyToWorldMatrix","Grad","fade","lerp","generateNormals","rowCount","colCount","yin","pos","xMax","yMax","nx","ny","nz","nl","hl","hr","ht","normals","vtxCount","isRenderbuffer","glRenderbuffer","createRenderbuffer","constructor","isTexture","glTexture","createFramebufferInfo","attachments","defaultAttachment","drawingBufferWidth","drawingBufferHeight","FRAMEBUFFER","fb","createFramebuffer","bindFramebuffer","colorAttachmentCount","framebufferInfo","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","COLOR_ATTACHMENT0","renderbufferFormats","isRenderbufferFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","framebufferTexture2D","texTarget","colorBuffers","drawBuffers","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","RENDERBUFFER_SAMPLES","bindFramebufferInfo","framebuffer","viewport","readPixcelFromFrameBufferInfo","pix","readBuffer","readPixels","resizeFramebufferInfo","attachmentOpts","id2Color","color2Id","colorArray","FramebufferPicker","models","blankColor","blankId","flag","updateCanvasParam","onmouseclick","ScreenQuadShader","setFlipy","BufferPicker","bufferIdx","addFunctionsToArrays","ary","func","splice","createEventListener","funcs","bindpoint","functions","e","Controler","mouseDownListeners","mouseMoveListeners","mouseUpListeners","mouseWheelListeners","keydownListeners","keyupListeners","touchStartListeners","touchMoveListeners","touchEndListeners","mouseClickListeners","mouseLeftClickListeners","mouseMiddleClickListeners","mouseRightClickListeners","oncontext","preventDefault","onmousedown","onmousemove","onmouseup","onwheel","onkeydown","onkeyup","ontouchstart","ontouchmove","ontouchend","onmouseleftclick","onmousemiddleclick","onmouserightclick","_flag","button","BUTTONS","LEFT","MIDDLE","Scene","renderer","shadersMap","helpers","helpersMap","_currentCamera","cameras","root","quad2UnitModel","Quad","createModel","u_resolution","DEPTH_STENCIL","bufferPicker","setPick","linearLerp","out","v1","v2","quaternionLinearSlerp","slerp","setpLerp","splineLerp","ts","t2","t3","Animator","rawData","_parseRawData","_playList","BufferParams","TextureFilters","RADIAN_PER_DEGREE","DEGREE_PER_RADIAN","PMath","degree","radian","tarMin","tarMax","abs","defineProperties","fromSpherical","m","te","m11","m12","m13","m22","m23","m32","m33","asin","clamp","atan2","dotVectors","frag","crossVectors","q","transformQuat","ax","ay","az","bx","by","bz","sinPhiRadius","sin","cos","qx","qy","qz","qw","ix","iy","iz","iw","fromEuler","vFrom","vTo","dot","Map","cross","invert","l","c1","c2","c3","s1","s2","s3","a0","a1","a2","a3","invDot","aw","bw","omega","cosom","sinom","scale0","scale1","acos","m21","m31","trace","translate","rad","rotateX","rotateY","rotateZ","matArray","quat","fromQuat","mult","scale","quaternion","fromRotationTranslationScale","aspect","tan","nf","Number","POSITIVE_INFINITY","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","b0","b1","b2","b3","c","axis","b12","b20","b21","b22","mat","eye","x0","x1","x2","y0","y1","y2","z0","z1","z2","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","xx","yx","yy","zx","zy","zz","wx","wy","wz","xy","xz","yz","sx","sy","sz","S","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","clone","determinant","invSX","invSY","invSZ","fromMatrix4","SharedArrayBuffer","tt","setPosition","setScale","setRotation","setQuaternion","fromTRS","normalMat3","transformVec4","copy","mat4","reset","applyQuaternion","setFromRotationMatrix","setFromEuler","rotation","args","markNeedUpdate","state","updateQuaternion","updateEuler","haveEnumsForType","enums","existing","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","currentProgram","equalsFun","equals","arrayEquals","arrayClone","_this","setUniformObjProp","mat4Array","UNIFORM_PROJ_MAT_NAME","UNIFORM_VIEW_MAT_NAME","UNIFORM_WORLD_MAT_NAME","_needCamPos","UNIFORM_CAMPOS","setProjMatrix","setViewMatrix","CURRENT_PROGRAM","deleteProgram","_this2","activate","updateCamera","_needMVPMat","_needVPMat","temp","UNIFORM_VP_MAT_NAME","UNIFORM_MVP_MAT_NAME","BLEND","depthMask","SAMPLE_ALPHA_TO_COVERAGE","preRender","setWorldMatrix","getWorldMatrix","_needNormMat","UNIFORM_NORMAL_MAT_NAME","bindVertexArray","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","defines","currentProgNum","defs","currentShaders","injectDefines","updateProgram","filter","shadersrc","newShader","define","create","getDefaultShader","commonVAOShader","_name","arrayQuat","_drawMode","_cullFace","_blend","_depth","_sampleBlend","_instanceCount","_updateVao","createBufferInfo","createVAO","deleteVertexArray","createVertexArray","BezierCurve","p0","p3","invt","numPoints","highlyMinify","getPoint","_bufferInfo","updated","GridAxis","div","createMesh","step","half","createVertices","helfSize","Cube","h","uv","Sphere","subdivAixs","subdivHeight","startLon","endLon","startLat","endLat","latRange","lonRange","positions","uvs","u","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertAround","Curve","tolerence","bpoints","concat","getPoints","vec3","reduce","LINE_STRIP","getOrientMatrix","u_color","u_pSize","stroke","fill","STREAM_COPY","transformFeedback","RASTERIZER_DISCARD","beginTransformFeedback","renderModel","endTransformFeedback","disable","MorphTargetNumPrefix","MORPH_POSITION_PREFIX","MORPH_NORMAL_PREFIX","MORPH_TANGENT_PREFIX","makeSafeGLTF","attribNum","morphInfo","morphAttribCount","morphPosition","morphNormal","morphTangent","morphDefine","originCount","morphCount","activerAttribNum","num","getMorphTargetDefine","morphTargetNum","originPositionArrays","originNormalArrays","originTangentArrays","originPositionBufferInfo","originNormalBufferInfo","originTangentBufferInfo","compareWeight","weight","compareNum","lastWeight","currentWeight","newWeights","weights","origin","updateBufferInfo","makeSafe","resortMorph","idx1","idx2","ai","bi","conters","previous","next","side","comparePos","copyPos","n","positionArray","positionBuffer","a_previous","a_next","a_side","Foreground","ndx","regex","RegExp","match","URL","WebGLSampler","createElement","style","clientWidth","clientHeight","updateViewport","resizeCanvasToDisplaySize","vec3Position","lookAt","decompose","quatQuaternion","vec3Scale","_fov","degree2Radian","other","removeListeners","sub","setFromVecor3","rotateLeft","getAutoRotationAngle","add","setFromSpherical","pow","angle","distance","setFromArray","multiScalar","deltaX","deltaY","body","isPerspectiveCamera","targetDisitance","panLeft","panUp","isOrthographicCamera","zoomScale","updateProjMatrix","event","clientX","clientY","subVectors","rotateUp","zoomIn","getZoomScale","zoomOut","pan","keyCode","touches","pageX","pageY","ORBIT","handleMouseDownRotate","handleMouseDownZoom","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveZoom","handleMouseMovePan","stopPropagation","handleMouseWheel","handleKeyDown","handleTouchStartRotate","handleTouchStartZoom","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveZoom","handleTouchMovePan","toLowerCase","basename","getBasename","addFile","file","filepath","getExtension","getFilename","promises","item","types","promise","Promise","all","then","resolve","TextDecoder","decode","il","String","fromCharCode","decodeURIComponent","escape","fetch","response","text","json","loader","basepath","getBasepath","uri","images","imageRes","load","resources","arrayBuffer","BINARY_EXTENSION_CHUNK_TYPES","content","headerView","DataView","header","decodeText","getUint32","magic","version","chunkView","chunkIndex","chunkLength","chunkType","contentArray","byteOffset","JSON","parse","isParsed","dbuffer","trim","unshift","parseFloat","ObjLoader","filePath","res","objText","flipYUV","flip","currentObject","objects","vt","vn","oVert","oUV","oNorm","oIndex","fCache","vertCount","isQuad","ind","linePaser","init","getType","getFloatData","shift","parseInt","a_uv","a_normal","updateMatrix","updateNormalMatrix","updateDirection","handler","trigerNodes","updatedThisFrame","executeFun","traverse","traversePostOrder","execuFunPre","execuFunPost","traverseTwoExeFun","remove","nodelike","updateMatrixMarker","updateWorldMatrix","updateNormalAndDirection","property","finded","asset","minVersion","_generator","sceneId","gltf","generator","parseScene","parseAnimations","convertToNode","animations","animation","channels","samplers","clips","channel","input","parseAccessor","outputData","output","interpolation","gltfNodeIdx","path","combinedOutput","numComp","k","nodeProperty","extras","uniformName","MORPH_WEIGHT_UNIFORM","clip","GLTF_NODE_INDEX_PROPERTY","loadScene","scene","scenes","nodes","parseNode","infos","trivarse","trivarseFun","parentNode","nodeInfos","rootNode","skins","nodeInfo","nodeId","translation","addChild","yfov","znear","zfar","perspectiveCamera","radian2Degree","xmag","ymag","orthographicCamera","primitives","primitive","modelName","meshName","uniformobj","skinDefines","skin","material","baseColorTexture","baseColorFactor","metallicFactor","roughnessFactor","doubleSided","metallicRoughnessTexture","normalTexture","occlusionTexture","emissiveTexture","enableBlend","alphaCutoff","ALPHA_CUTOFF_UNIFORM","BASE_COLOR_UNIFORM","METALROUGHNESS_UNIFORM","textureIdx","BASE_COLOR_TEXTURE_UNIFORM","METALROUGHNESS_TEXTURE_UNIFORM","NORMAL_TEXTURE_UNIFORM","NORMAL_SCALE_UNIFORM","OCCLUSION_TEXTURE_UNIFORM","OCCLUSION_FACTOR_UNIFORM","strength","EMISSIVE_TEXTURE_UNIFORM","EMISSIVE_FACTOR_UNIFORM","emissiveFactor","gltfPrimitives","handlers","joints","skeleton","inverseBindMatrices","jointNum","globalJointTransformNodes","findInChildren","skeletonNode","SCENE_ROOT_SKELETON","fragWorld","globalTransformNode","jointMats","IDENTITY_INVERSE_BIND_MATRICES","JOINT_MATRICES_UNIFORM","skinName","animateMaxTime","NEGATIVE_INFINITY","animateMinTime","findFlag","findValue","targetProp","times","targetNodes","setTarget","resetTarget","resetObj","defaultValues","dnode","parseCamera","parseMesh","parseSkin","cameraId","dcamera","orthographic","skinId","dskin","getJointsNumDefine","accessor","matrices","meshId","meshes","dprimitives","attributes","mode","targets","dprimitive","hasNormal","hasTangent","texCoordNum","jointVec8","vertexColor","attribute","ATTRIB_TANGENT_NAME","ATTRIB_UV_1_NAME","ATTRIB_JOINT_0_NAME","ATTRIB_JOINT_1_NAME","ATTRIB_WEIGHT_0_NAME","ATTRIB_WEIGHT_1_NAME","ATTRIB_VERTEX_COLOR_NAME","getHasNormalDefine","getHasTangentDefine","getTexCoordDefine","getJointVec8Define","getVertexColorDefine","dmaterial","parseMaterial","getMeshNameCounter","getModelNameCounter","getMorphTargetsDefine","hasPositions","hasNormals","hasTangents","getMorphtargetPositionDefine","getMorphtargetNormalDefine","getMorphtargetTangentDefine","accessorId","accessors","daccessor","normalized","bufferView","bufferViews","byteStride","componentType","componentsBytes","parseBufferView","getTypedArrayFromArrayBuffer","sparse","indicesByteOffset","indicesBufferView","indicesArrayType","indicesBuffer","indicesArray","valuesByteOffset","valuesBufferView","valuesBuffer","valuesArray","computeResult","componentVals","bufferViewId","dbufferView","parseBuffer","bufferArray","bufferId","base64Idx","BASE64_MARKER","blob","atob","bytes","charCodeAt","materialId","defaultMaterial","materials","pbrMetallicRoughness","alphaMode","getAlphaMaskDefine","getAlphaBlendDdefine","parseTexture","texCoord","getBaseColorTextureDefine","getMetalRoughnessDefine","getNormalMapDefine","getOcclusionMapDefine","getEmissiveMapDefine","textureId","dtexture","source","image","parseImage","imgsampler","parseSampler","imageId","dimage","mimeType","arrayBufferView","Blob","imageUrl","webkitURL","createObjectURL","imageres","samplerId","REPEAT","dsampler","magFilter","minFilter","counter","texNum","targetNum","normalPos","positionInfo","normalInfo","isMesh","start","normal","strip","sStrip","nStrip","grad3","perm","gradP","F2","G2","Perlin","seed","xin","n0","n1","n2","i1","j1","gi0","gi1","gi2","t0","dot2","t1","zin","n3","k1","i2","j2","k2","x3","y3","z3","gi3","dot3","X","Y","n00","n01","n10","Z","n000","n001","n010","n011","n100","n101","n110","n111","Terrain","time","setTime","timeSpan","addTime","minHeight","maxHeight","baseHeight","perlinFreq","random","rowStart","colStart","idxCount","rowStrid","colStrid","currentRow","currentCol","uvXStrid","uvYStrid","perlin3","TRIANGLE_STRIP","newTime","maxId","addModels","removeModels","box","getBoundingClientRect","offsetX","offsetY","lastCanvasWidth","lastCanvasHeight","needPick","pickx","picky","render","pick","u_flipy","ratio","listenersOpts","listenerOptions","addFunction","removeFunction","objs","addModelToShader","helper","addDataToHelper","addCamera","addNodeToShader","shaderIdx","shaderObj","u_colorId","nodep","shaderModels","modelIdx","helperIdx","datas","helperObj","_this3","updateViewMatFromModelMat","cameraObj","removeModelFromShader","removeDataFromHelper","_this4","removeNodeFromShader","needUpdateColorId","_this5","removeCamera","_this6","currentCamera","_this7","dataIdx","resize","setTexture","curShader","curShaderObj","curModel","setData","_this8","setActivate","removeNodes","animate","sumTime","dtime","minTime","maxTime","lerpFun","currentIdx","timePercent","currentValue","clipsRes","method","clipRes","removeEdge","Q","numVert","barycentrics","lastVerts","curVerts","vert","getNumElementsFromNonIndicedArrays","callCallbackWhenReady","numLoading","setTimeout","onLoadFn","isAsyncSrc"],"mappings":"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"}